openapi: 3.0.0
info:
  title: Template
  contact: {}
  version: '1.0'
  description: Template
servers:
- url: 'http://{hostname}/webconsole/api'
  variables: 
    hostname:
      default: localhost
      description: "Webconsole"
tags:
- name: Workflow Operations
paths:
  /Workflow:
    get:
      deprecated: false
      description: |
        This operation returns a list of workflows.

        [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_workflow.htm)
      operationId: Get all Workflows
      parameters:
      - description: ''
        in: header
        name: Authtoken
        required: true
        schema:
          example: '{{TOKEN}}'
          type: string
      summary: Get all Workflows
      tags:
      - Workflow Operations
      responses:
        '200':
          description: OK
    put:
      deprecated: false
      description: |
        This operation imports a workflow definition.

        Use the workflow definition generated by the GET Workflow Definition API in the request body

        [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=97457.htm)
      operationId: Import a Workflow Definition
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/xml
          type: string
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          enum:
          - application/xml
          example: application/xml
          type: string
      - description: ''
        in: header
        name: Authtoken
        required: true
        schema:
          example: '{{TOKEN}}'
          type: string
      summary: Import a Workflow Definition
      tags:
      - Workflow Operations
      responses:
        '200':
          description: OK
          content:
            text/plain:
              examples:
                Workflow Definition:
                  value: <Workflow_SetWorkflowResponse><workflow workflowId="88" workflowName="Test"/></Workflow_SetWorkflowResponse>
      requestBody:
        content:
          application/xml:
            examples:
              Workflow Definition:
                value: |-
                  <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
                  <Workflow_WorkflowDefinition apiMode="0" config="&lt;configuration />" description="" executeOnWeb="0" inputs="&lt;inputs />" interactive="0" isHtmlDescription="0" name="Test" outputs="&lt;outputs />" revision="$Revision:  $" tags="" uniqueGuid="6a0cbd9a-ce2c-4c24-9619-3f634abdd6a4" variables="&lt;variables />" webHidden="0" workflowId="0">
                  <schema>
                      <inputs className="" name="inputs" type=""/>
                      <variables className="" name="variables" type=""/>
                      <outputs className="" name="outputs" type=""/>
                      <config className="" name="configuration" type=""/>
                  </schema>
                  <Start commented="0" continueOnFailure="0" created="0" description="" displayName="Start" height="36" interactive="0" jobMode="0" name="Start" originalStyle="" skipAttempt="0" style="image;image=/images/jgraphx/house.png" uniqueName="Start_1" waitSetting="0" width="55" x="45" y="41">
                      <inputs val="&lt;inputs />"/>
                      <transition activity="Login_1" commented="0" originalStyle="" status="0" style="defaultEdge" transitionIndex="0" x="0" y="0">
                          <condition script="/*&#xA;The expression should return a boolean. Use the variable name &quot;activity&quot; to refer to the previous activity object. Example:&#xA;activity.exitCode==0;&#xA;*/&#xA;"/>
                      </transition>
                  </Start>
                  <Activity commented="0" continueOnFailure="0" created="1548134526196" description="" displayName="Login" height="34" interactive="0" jobMode="0" name="Login" namespaceUri="commvault.cte.workflow.activities.cmd" originalStyle="" skipAttempt="0" style="label;image=commvault.cte.workflow.activities.cmd.Login" uniqueName="Login_1" waitSetting="0" width="100" x="160" y="40">
                      <inputs val="&lt;inputs>&lt;commCellName class=&quot;java.lang.String&quot; _list_=&quot;false&quot;>&lt;/commCellName>&lt;commCellClientName class=&quot;java.lang.String&quot; _list_=&quot;false&quot;>&lt;/commCellClientName>&lt;userName class=&quot;java.lang.String&quot; _list_=&quot;false&quot;>&lt;/userName>&lt;password class=&quot;workflow.types.EncryptedString&quot; _list_=&quot;false&quot;>&lt;/password>&lt;tokenFile class=&quot;java.lang.String&quot; _list_=&quot;false&quot;>&lt;/tokenFile>&lt;/inputs>"/>
                      <transition activity="Logout_1" commented="0" originalStyle="" status="0" style="defaultEdge" transitionIndex="0" x="0" y="0">
                          <condition script="/*&#xA;The expression should return a boolean. Use the variable name &quot;activity&quot; to refer to the previous activity object. Example:&#xA;activity.exitCode==0;&#xA;*/&#xA;"/>
                      </transition>
                  </Activity>
                  <Activity commented="0" continueOnFailure="0" created="1548134530006" description="" displayName="Logout" height="34" interactive="0" jobMode="0" name="Logout" namespaceUri="commvault.cte.workflow.activities.cmd" originalStyle="" skipAttempt="0" style="label;image=commvault.cte.workflow.activities.cmd.Logout" uniqueName="Logout_1" waitSetting="0" width="100" x="340" y="41">
                      <inputs val="&lt;inputs>&lt;sessionOptions class=&quot;workflow.types.cmd.SessionOptions&quot; _list_=&quot;false&quot;>&lt;useImpersonatedAccount class=&quot;java.lang.Boolean&quot; _list_=&quot;false&quot;>true&lt;/useImpersonatedAccount>&lt;tokenFile class=&quot;java.lang.String&quot; _list_=&quot;false&quot;>&lt;/tokenFile>&lt;token class=&quot;java.lang.String&quot; _list_=&quot;false&quot;>&lt;/token>&lt;/sessionOptions>&lt;/inputs>"/>
                  </Activity>
                  </Workflow_WorkflowDefinition>
  '/Workflow/{workflowname}/Action/Execute':
    post:
      deprecated: false
      description: |
        This operation executes a workflow as a job.

        [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_workflow_execute.htm)
      operationId: Executing a Workflow as a Job
      parameters:
      - description: ''
        in: header
        name: Authtoken
        required: true
        schema:
          example: '{{TOKEN}}'
          type: string
      - schema:
          type: boolean
        in: query
        name: outputOnly
      summary: Executing a Workflow as a Job
      tags:
      - Workflow Operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  sessionId:
                    type: string
                  message:
                    type: string
                  processStepId:
                    type: integer
                  dialogType:
                    type: integer
                  jobId:
                    type: integer
                  iconType:
                    type: integer
                  html:
                    type: boolean
                  workflow:
                    type: object
                    properties:
                      workflowName:
                        type: string
                      workflowId:
                        type: integer
                  commCell:
                    type: object
                    properties:
                      _type_:
                        type: integer
                      commCellName:
                        type: string
                      newName:
                        type: string
                      GUID:
                        type: string
                      commCellId:
                        type: integer
                      csGUID:
                        type: string
                      flags:
                        type: object
                        properties: {}
                  client:
                    type: object
                    properties:
                      hostName:
                        type: string
                      clientId:
                        type: integer
                      clientName:
                        type: string
                      _type_:
                        type: integer
                      commCellName:
                        type: string
                      commCellId:
                        type: integer
                      clientGUID:
                        type: string
                  properties:
                    type: object
                    properties: {}
                x-examples:
                  Example 1:
                    sessionId: c72a4d37-0b96-4947-8e2b-f7a093bd4dca
                    message: <html>Your new machine request has been submitted for approval<br></html>
                    processStepId: 1333
                    dialogType: 0
                    jobId: 287
                    iconType: 0
                    html: false
                    workflow:
                      workflowName: Demo - New Machine Request
                      workflowId: 14
                    commCell:
                      _type_: 1
                      commCellName: firewalltestcs
                      newName: ''
                      GUID: ''
                      commCellId: 2
                      csGUID: ''
                      flags: {}
                    client:
                      hostName: FirewallTestCS.test.com
                      clientId: 2
                      clientName: firewalltestcs
                      _type_: 3
                      commCellName: firewalltestcs
                      commCellId: 2
                      clientGUID: 3D2BECB0-B5AB-4911-BF0E-E956174D752A
                    properties: {}
              examples:
                ? Executing a Workflow as a Job - This request executes a workflow named "Demo - New Machine Request" The workflow uses four workflow level inputs.
                : value:
                    sessionId: c72a4d37-0b96-4947-8e2b-f7a093bd4dca
                    message: <html>Your new machine request has been submitted for approval<br></html>
                    processStepId: 1333
                    dialogType: 0
                    jobId: 287
                    iconType: 0
                    html: false
                    workflow:
                      workflowName: Demo - New Machine Request
                      workflowId: 14
                    commCell:
                      _type_: 1
                      commCellName: firewalltestcs
                      newName: ''
                      GUID: ''
                      commCellId: 2
                      csGUID: ''
                      flags: {}
                    client:
                      hostName: FirewallTestCS.test.com
                      clientId: 2
                      clientName: firewalltestcs
                      _type_: 3
                      commCellName: firewalltestcs
                      commCellId: 2
                      clientGUID: 3D2BECB0-B5AB-4911-BF0E-E956174D752A
                    properties: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Workflow_StartWorkflow:
                  type: object
                  properties:
                    outputFormat:
                      type: string
                    options:
                      type: object
                      properties:
                        inputs:
                          type: object
                          properties:
                            Input1:
                              type: string
                            Input2:
                              type: integer
                            Input3:
                              type: string
                    client:
                      type: object
                      properties:
                        clientName:
                          type: string
              x-examples:
                Example 1:
                  Workflow_StartWorkflow:
                    outputFormat: '1'
                    options:
                      inputs:
                        Input1: TestMachine
                        Input2: 8
                        Input3: testapi
                    client:
                      clientName: testapi
            examples:
              Executing a Workflow as a Job with JSON:
                value:
                  Workflow_StartWorkflow:
                    outputFormat: '1'
                    options:
                      inputs:
                        Input1: TestMachine
                        Input2: 8
                        Input3: testapi
                    client:
                      clientName: testapi
          application/xml:
            examples:
              Executing a Workflow as a Job:
                value: |-
                  <Workflow_StartWorkflow>
                    <options>
                      <outputFormat>1</outputFormat>
                      <inputs>
                        <name>DemoTestMachine</name>
                        <Memory>8</Memory>
                        <Disk>500</Disk>
                        <software></software>
                      </inputs>
                    </options>
                    <client>
                      <clientName>firewalltestcs</clientName>
                    </client>
                  </Workflow_StartWorkflow>
    parameters:
    - schema:
        type: string
      name: workflowname
      in: path
      required: true
  '/Workflow/{WorkflowId}':
    delete:
      deprecated: false
      description: |
        This operation deletes a workflow.

        [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=49473.htm)
      operationId: Delete a Workflow
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/xml
          type: string
      - description: ''
        in: header
        name: Authtoken
        required: true
        schema:
          example: '{{TOKEN}}'
          type: string
      - description: ''
        in: path
        name: WorkflowId
        required: true
        schema:
          type: string
      summary: Delete a Workflow
      tags:
      - Workflow Operations
      responses:
        '200':
          description: OK
  '/Workflow/{WorkflowId}/Action/Deploy':
    post:
      deprecated: false
      description: |
        This operation deploys a workflow.
      operationId: Deploying a Workflow
      parameters:
      - description: ''
        in: header
        name: Authtoken
        required: true
        schema:
          example: '{{TOKEN}}'
          type: string
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          enum:
          - application/xml
          example: application/xml
          type: string
      - description: ''
        in: path
        name: WorkflowId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/xml:
            examples:
              Deploying a Workflow:
                value: |-
                  <Workflow_StartWorkflow>
                    <client>
                      <clientName>WorkflowEngine</clientName>
                    </client>
                  </Workflow_StartWorkflow>
        description: ''
        required: true
      summary: Deploying a Workflow
      tags:
      - Workflow Operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    type: string
                  errorCode:
                    type: integer
                x-examples:
                  Example 1:
                    errorMessage: Success
                    errorCode: 0
              examples:
                Example 1:
                  value:
                    errorMessage: Success
                    errorCode: 0
  '/Workflow/{WorkflowId}/definition':
    get:
      deprecated: false
      description: |-
        This operation returns the workflow definition, such as the inputs, activities, and transitions.

        [_More Details_](http://documentation.commvault.com/commvault/v11/article?p=97430.htm)
        <h2>Request Params</h2>
        <table>
          <tr>
            <td>Name</td>
            <td>Description</td>
          </tr>
          <tr>
            <td>export</td>
            <td>
              <p>With this parameter set to true, the workflow id will always return 0 and the workflow xml can be used to import the workflow in another commcell</p>
            </td>
          </tr>
        </table>
      operationId: Workflow Definition
      parameters:
      - description: ''
        explode: true
        in: query
        name: export
        schema:
          example: '{{true/false}}'
          type: string
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/xml
          type: string
      - description: ''
        in: header
        name: Authtoken
        required: true
        schema:
          example: '{{TOKEN}}'
          type: string
      - description: ''
        in: path
        name: WorkflowId
        required: true
        schema:
          type: string
      summary: Workflow Definition
      tags:
      - Workflow Operations
      requestBody:
        content:
          application/xml:
            schema:
              type: object
              properties: {}
      responses:
        '200':
          description: OK
          content:
            text/plain:
              examples:
                Example 1:
                  value: '<?xml version="1.0" encoding="UTF-8" standalone="no" ?><Workflow_WorkflowDefinition apiMode="0" config="&lt;configuration />" description="" executeOnWeb="0" inputs="&lt;inputs />" interactive="0" isHtmlDescription="0" name="Test" outputs="&lt;outputs />" revision="$Revision:  $" tags="" uniqueGuid="6a0cbd9a-ce2c-4c24-9619-3f634abdd6a4" variables="&lt;variables />" webHidden="0" workflowId="0"><schema><inputs className="" name="inputs" type=""/><variables className="" name="variables" type=""/><outputs className="" name="outputs" type=""/><config className="" name="configuration" type=""/></schema><Start commented="0" continueOnFailure="0" created="0" description="" displayName="Start" height="36" interactive="0" jobMode="0" name="Start" originalStyle="" skipAttempt="0" style="image;image=/images/jgraphx/house.png" uniqueName="Start_1" waitSetting="0" width="55" x="45" y="41"><inputs val="&lt;inputs />"/><transition activity="Login_1" commented="0" originalStyle="" status="0" style="defaultEdge" transitionIndex="0" x="0" y="0"><condition script="/*&#xA;The expression should return a boolean. Use the variable name &quot;activity&quot; to refer to the previous activity object. Example:&#xA;activity.exitCode==0;&#xA;*/&#xA;"/></transition></Start><Activity commented="0" continueOnFailure="0" created="1548134526196" description="" displayName="Login" height="34" interactive="0" jobMode="0" name="Login" namespaceUri="commvault.cte.workflow.activities.cmd" originalStyle="" skipAttempt="0" style="label;image=commvault.cte.workflow.activities.cmd.Login" uniqueName="Login_1" waitSetting="0" width="100" x="160" y="40"><inputs val="&lt;inputs>&lt;commCellName class=&quot;java.lang.String&quot; _list_=&quot;false&quot;>&lt;/commCellName>&lt;commCellClientName class=&quot;java.lang.String&quot; _list_=&quot;false&quot;>&lt;/commCellClientName>&lt;userName class=&quot;java.lang.String&quot; _list_=&quot;false&quot;>&lt;/userName>&lt;password class=&quot;workflow.types.EncryptedString&quot; _list_=&quot;false&quot;>&lt;/password>&lt;tokenFile class=&quot;java.lang.String&quot; _list_=&quot;false&quot;>&lt;/tokenFile>&lt;/inputs>"/><transition activity="Logout_1" commented="0" originalStyle="" status="0" style="defaultEdge" transitionIndex="0" x="0" y="0"><condition script="/*&#xA;The expression should return a boolean. Use the variable name &quot;activity&quot; to refer to the previous activity object. Example:&#xA;activity.exitCode==0;&#xA;*/&#xA;"/></transition></Activity><Activity commented="0" continueOnFailure="0" created="1548134530006" description="" displayName="Logout" height="34" interactive="0" jobMode="0" name="Logout" namespaceUri="commvault.cte.workflow.activities.cmd" originalStyle="" skipAttempt="0" style="label;image=commvault.cte.workflow.activities.cmd.Logout" uniqueName="Logout_1" waitSetting="0" width="100" x="340" y="41"><inputs val="&lt;inputs>&lt;sessionOptions class=&quot;workflow.types.cmd.SessionOptions&quot; _list_=&quot;false&quot;>&lt;useImpersonatedAccount class=&quot;java.lang.Boolean&quot; _list_=&quot;false&quot;>true&lt;/useImpersonatedAccount>&lt;tokenFile class=&quot;java.lang.String&quot; _list_=&quot;false&quot;>&lt;/tokenFile>&lt;token class=&quot;java.lang.String&quot; _list_=&quot;false&quot;>&lt;/token>&lt;/sessionOptions>&lt;/inputs>"/></Activity></Workflow_WorkflowDefinition>'
