info:
  version: 1.0.0
  contact: {}
  description: |-
    ## Welcome

    Welcome to Commvault's Rest APIs. You can explore our APIs in [Postman](https://getpostman.com) using the predefined requests we created

    The current version of this documentation is **Commvault Platform Release 2022E**.

    You can access LTS documentation here:

    [Feature Release 11.20](https://documenter.getpostman.com/view/2046098/UVR7KoPJ)

    [Feature Release 11.24](https://documenter.getpostman.com/view/2046098/UVR7KoPL)

    For more V2 and Latest APIs, please visit your API Explorer page.  
    [*More Details*](http://documentation.commvault.com/commvault/v11/article?p=107350_1.htm)

    ## Setup

    To get started, [create an environment in Postman](https://www.getpostman.com/docs/environments), select that environment, and set your environment variables by entering necessary values in the `0 - Setup/Environment Setup` pre-request script ([documentation on pre-request scripts](http://www.getpostman.com/docs/pre_request_scripts)). Also, Some of our calls might have dependencies. `GET`/`PUT`/`DELETE` may only work after an item is created with a `POST`.

    The same set of APIs can be used for both XML and JSON. If you want to get equivalent JSON for the XML, use our [API](https://api.commvault.com/#fe2fa795-dd7c-4416-857d-75704b52be8c) for conversion.

    **Note:** Swagger Documentation for V2/Latest APIs are present in the following URL:  
    `{ServerURL}/sandbox/apiexplorer`

    [*More Details*](http://documentation.commvault.com/commvault/v11/article?p=45551.htm)
  title: Commvault Rest API - Public
x-stoplight:
  id: 0cgufjvlcdnow
servers:
  - url: 'http://{hostname}/webconsole/api'
    variables:
      hostname:
        default: localhost
        description: Webconsole
openapi: 3.0.0
tags:
  - description: APIs for Plan Operations
    name: Plan
  - description: APIs for Plan Rule Operations
    name: PlanRules
  - description: APIs for Server Plan Operations
    name: ServerPlan
  - description: APIs for CDM Plan Operations
    name: CDMPlan
  - description: APIs for Laptop Plan Operations
    name: LaptopPlan
  - description: APIs for Archive Plan Operations
    name: ArchivePlan
  - description: APIs for User Operations
    name: User
  - description: APIs for Company Operations
    name: Company_v4
  - description: APIs for ServerGroup Operations
    name: ServerGroup
  - description: APIs for Cloud Storage Pool Operations
    name: CloudStorage
  - description: APIs for UserGroup Operations
    name: UserGroup
  - description: APIs for Storage Pool Operations
    name: Storage
  - description: APIs for Disk Storage Pool Operations
    name: DiskStorage
  - description: APIs for HyperScale Storage Pool Operations
    name: HyperScaleStorage
  - description: APIs for Role Operations
    name: Roles
  - description: APIs for Tape Operations
    name: TapeStorage
  - description: APIs for Big Data App Operations
    name: BigDataApps
  - description: APIs for Cloud Apps Operations
    name: CloudApps
  - description: APIs for Distributed Storage Operations
    name: DistributedStorage
  - description: APIs for File Server Operations
    name: FileServers
  - description: APIs for Archive File Server Operations
    name: ArchiveFileServers
  - description: APIs for Instance Operations
    name: Instances
  - description: APIs for Database Instant Clone Operations
    name: InstantClones
  - description: APIs for Databases Operations
    name: Databases
  - description: APIs for Virtual Machines Operations
    name: VirtualMachines
  - description: APIs for Replication Group Operations
    name: ReplicationGroup
  - description: APIs for Failover Group Operations
    name: FailoverGroups
  - description: APIs for GCPSpanner Operations
    name: GCPSpanner
  - description: APIs for Agent Operations
    name: Agent
  - description: APIs for Subclient Operations
    name: Subclient
  - description: APIs for MediaAgent Operations
    name: MediaAgent
  - description: APIs for EpicServer Operations
    name: EpicServers
  - description: APIs for Laptop Operations
    name: Laptop
  - description: APIs for Network Topology Operations
    name: NetworkTopology
  - description: APIs for Regions Operations
    name: Regions
  - description: APIs for Blackout Window Operations
    name: BlackoutWindows
  - description: APIs for Resource Pool Operations
    name: ResourcePools
  - description: APIs for SNMP Configuration Operations
    name: SNMP
  - description: APIs for Index Server Operations
    name: IndexServers
  - description: APIs for Hybrid File Stores Operations
    name: HybridFileStores
  - description: APIs for SMTP Email Server Operations
    name: EmailServer
  - description: APIs for Commcell Operations
    name: Commcell
  - description: APIs for Scrub Log Operations
    name: ScrubLogs
  - description: APIs for Alerts Operations
    name: Alerts
  - description: APIs for Server Operations
    name: Servers
  - description: APIs for Additional Settings Operations
    name: AdditionalSettings
  - description: APIs for Credential Manager Operations
    name: CredentialManager
  - description: APIs for Replication Operations
    name: Replication
  - description: APIs for Workload Solutions Operations
    name: Solutions
  - description: APIs for Global Exception Operations
    name: GlobalExceptions
  - description: APIs for Key Management Server Operations
    name: KeyManagementServer
  - description: APIs for Recovery Target Operations
    name: RecoveryTarget
  - description: APIs for Identity Servers Operations
    name: IdentityServers
  - description: APIs for Syslog Server Operations
    name: SyslogServer
  - description: APIs for Service Commcells Operations
    name: ServiceCommcells
  - description: APIs for Request Manager Operations
    name: RequestManager
  - description: APIs for Distributed systems Operations
    name: DistributedSystems
  - description: APIs for Access Control Operations
    name: AccessControl
  - description: APIs for License Operations
    name: License
  - description: APIs for Activate Operations
    name: Activate
  - description: APIs for Anomalous Condition Operations
    name: AnomalousConditions
  - description: APIs for Replication Monitor Pair Operations
    name: ReplicationMonitor
  - description: APIs for Laptop Owner Mapping Operations
    name: LaptopOwnerMapping
  - description: APIs for schedule and schedule policy operations
    name: Schedule
  - description: APIs for global search related operations
    name: GlobalSearch
  - description: APIs for entity tags related operations
    name: EntityTag
  - description: APIs for Inventory Manager Operations
    name: InventoryManager
  - description: APIs for VM Provisioning Operations
    name: VMProvisioning
  - description: APIs for Storage Array Operations
    name: StorageArrays
  - description: APIs for Office 365 Operations
    name: Office365
  - description: APIs for Dynamics 365 Operations
    name: Dynamics365
  - description: APIs for Active Directory Operations
    name: ActiveDirectory
  - description: APIs for Development Operations
    name: DeveloperTools
  - description: APIs to manage activity controls
    name: ActivityControl
  - name: Hypervisor Operations_v4
  - name: VM Group Operations_v4
  - name: VM Operations_v4
components:
  schemas:
    ADLDAPDetails:
      description: Details of an AD/LDAP domain
      properties:
        LDAPQueryParameters:
          description: List of query parameters for the LDAP domain. Available only if the directory type is LDAP_SERVER
          items:
            $ref: '#/components/schemas/LDAPAttribute'
          type: array
          uniqueItems: true
        accessViaClient:
          description: Denotes if the domain is accessed via a proxy
          type: boolean
        attributeMap:
          description: List of attribute mappings for the LDAP domain. Available only if the directoryType is LDAP_SERVER.
          items:
            $ref: '#/components/schemas/LDAPAttribute'
          type: array
          uniqueItems: false
        baseDNForCardUsers:
          description: Base DN for card users. Available only if domainType is ACTIVE_DIRECTORY.
          type: string
        company:
          $ref: '#/components/schemas/IdName'
        credentials:
          description: Username of the domain user used to connect to the domain
          type: string
        directoryType:
          $ref: '#/components/schemas/ADLDAPDirectoryTypeForGet'
        domainName:
          description: Domain to which the users are associated
          type: string
        enableSSO:
          description: Denotes if SSO is enabled
          type: boolean
        id:
          format: int32
          type: integer
        name:
          type: string
        proxies:
          description: List of proxies used to connect to the domain. Available only if accessViaClient is true.
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        useSecureLDAP:
          description: Boolean to indicate if the identity server uses secure LDAP
          type: boolean
        userGroups:
          description: Number of user groups in the domain
          format: int32
          type: integer
        users:
          description: Number of users in the domain
          format: int32
          type: integer
      type: object
    ADLDAPDirectoryType:
      description: Directory type of an AD/LDAP domain
      enum:
        - ACTIVE_DIRECTORY
        - APPLE_DIRECTORY_SERVICE
        - LDAP_SERVER
        - OPEN_LDAP
        - ORACLE_DIRECTORY
      type: string
    ADLDAPDirectoryTypeForGet:
      description: Directory type of an AD/LDAP domain
      enum:
        - ACTIVE_DIRECTORY
        - APPLE_DIRECTORY_SERVICE
        - LDAP_SERVER
        - OPEN_LDAP
        - ORACLE_DIRECTORY
        - OTHER
      type: string
    AccessControl:
      description: Owner permissions and laptop ownership details
      properties:
        automaticLaptopOwnershipAssignment:
          $ref: '#/components/schemas/LaptopOwnership'
        ownerPermissions:
          description: List of owner permissions
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      title: AccessControl
      type: object
    AccessNodeDeployment:
      properties:
        clientGroup:
          type: string
        commCell:
          $ref: '#/components/schemas/CommCellNameHostName'
        deploymentType:
          default: 0
          description: '0: Access node deployment, 1: File recovery enabler for linux deployment'
          enum:
            - 0
            - 1
          format: int32
          type: integer
        hardDiskType:
          default: 2
          description: '1: Thin Provision, 2: Thick provision lazy zeroed, 3: Thick provision eager zeroed'
          enum:
            - 1
            - 2
            - 3
          format: int32
          type: integer
        hostName:
          description: 'Host name for vm, if not provided it will be same as vmName'
          type: string
        name:
          description: 'Client name for vm, if not provided it will be same as vmName'
          type: string
        network:
          $ref: '#/components/schemas/NetworkDetails'
        os:
          enum:
            - Windows
            - Linux
          type: string
        userCredentials:
          $ref: '#/components/schemas/userCredentials'
        vCenter:
          description: vCenter server instance
          type: string
        vmLocation:
          $ref: '#/components/schemas/vmLocation'
        vmName:
          type: string
      required:
        - vmName
        - userCredentials
        - vCenter
        - vmLocation
        - network
      title: AccessNodeDeployment
      type: object
    AccessNodes:
      description: ''
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        type:
          default: CLIENT
          enum:
            - CLIENT
            - CLIENT_GROUP
          type: string
      title: AccessNode
      type: object
    AccessPathDetails:
      properties:
        access:
          $ref: '#/components/schemas/AccessType'
        accessible:
          description: states if the access path is accessible
          type: boolean
        id:
          description: Gives the disk access path id.
          format: int32
          type: integer
        mediaAgent:
          $ref: '#/components/schemas/IdName'
        path:
          description: Gives the disk access path.
          type: string
        userName:
          type: string
      type: object
    AccessType:
      description: The access type for the disk access path can be either read (writing to path not allowed) or read and write (writing to path allowed).
      enum:
        - READ_AND_WRITE
        - READ
      format: ''
      type: string
    ActivateApplication:
      description: Enum to signify the application under Activate
      enum:
        - NONE
        - SDG
        - FSO
      title: ActivateApplication
      type: string
    ActiveDirectoryType:
      allOf:
        - properties:
            NETBIOSName:
              description: Domain name (short name) to create LDAP app
              type: string
            directoryType:
              description: Active directory type
              enum:
                - ACTIVE_DIRECTORY
              type: string
            enableSSO:
              description: Boolean to indicate if the app use enable SSO
              type: boolean
            name:
              description: Domain connect name
              type: string
            useSecureLDAP:
              description: Boolean to indicate if the app use secure LDAP
              type: boolean
          required:
            - directoryType
            - NETBIOSName
            - name
          type: object
        - $ref: '#/components/schemas/LDAPRequest'
      description: Model to create new LDAP identity servers for active directory type
      title: ''
      x-tags:
        - IdentityServer
    ActivityControlOptions:
      properties:
        backupActivityControlOptions:
          $ref: '#/components/schemas/backupActivityControlOptionsProp'
        enableBackup:
          description: true if Backup is enabled
          type: boolean
        enableRestore:
          description: true if Restore is enabled
          type: boolean
        restoreActivityControlOptions:
          $ref: '#/components/schemas/backupActivityControlOptionsProp'
      type: object
    ActivityControlOptionsProp:
      properties:
        activityType:
          description: denotes the activity type being considered
          enum:
            - BACKUP
            - RESTORE
            - ONLINECI
            - ARCHIVEPRUNE
          type: string
        delayTime:
          $ref: '#/components/schemas/ActivityControlTileDelayTime'
        enableActivityType:
          description: True if the activity type is enabled
          type: boolean
        enableAfterADelay:
          description: True if the activity will be enabled after a delay time interval
          type: boolean
      type: object
    ActivityControlTileDelayTime:
      properties:
        time:
          description: delay time in unix timestamp
          format: int32
          type: integer
        timeZone:
          $ref: '#/components/schemas/IdName'
        value:
          description: actual delay time value in string format according to the timezone
          type: string
      title: ActivityControlTileDelayTime
      type: object
    AddDiskAccessPath:
      description: Used to add a new access path to a backup location
      properties:
        mediaAgents:
          description: Can add a list of media agents to be added as the disk access path.
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      required:
        - mediaAgents
      type: object
    AddLaptop:
      properties:
        clientNames:
          description: list of hostName of computers
          items:
            type: string
          type: array
        os:
          description: the os type of computers
          enum:
            - WINDOWS
            - UNIX_AND_MAC
          type: string
        password:
          description: password (base64 encoded) required for authentication of jobs
          type: string
        userName:
          description: username required for authentication of jobs
          type: string
      required:
        - clientNames
        - os
        - userName
        - password
      title: ''
      type: object
    AddLaptopResp:
      properties:
        jobIds:
          items:
            type: string
          type: array
        taskId:
          format: int32
          type: integer
      title: AddLaptopResp
      type: object
    AgentDetails:
      properties:
        appTypeId:
          description: Id of the associated agent
          format: int32
          type: integer
        appTypeName:
          description: Name of the associated agent
          type: string
      type: object
    AlertAdditionalProperties:
      properties:
        status:
          description: Tells status of alert. Can be used to find if alert is enabled or not.
          format: int32
          type: integer
      title: ''
      type: object
    AlertAssocParentEntity:
      description: parentEntity1 can only have type SERVER_ENTITY.parentEntity2 can only have type APPTYPE_ENTITY.parentEntity3 can only have type INSTANCE_ENTITY.parentEntity4 can only have type BACKUPSET_ENTITY.
      properties:
        id:
          description: id of the associated entity
          format: int32
          type: integer
        name:
          description: name of the associated entity
          type: string
        type:
          enum:
            - SERVER_ENTITY
            - BACKUPSET_ENTITY
            - APPTYPE_ENTITY
            - Instances_ENTITY
          type: string
      type: object
    AlertAssociationIdNameType:
      description: Hierarchy starts at the top at client level(parentEntity1) and ends at backupset level(parentEntity4) when defining parents for the associated entity. Parent entities must be defined application and lower entities.
      properties:
        id:
          description: id of the associated entity
          format: int32
          type: integer
        name:
          description: name of the associated entity
          type: string
        parentEntity1:
          $ref: '#/components/schemas/AlertAssocParentEntity'
        parentEntity2:
          $ref: '#/components/schemas/AlertAssocParentEntity'
        parentEntity3:
          $ref: '#/components/schemas/AlertAssocParentEntity'
        parentEntity4:
          $ref: '#/components/schemas/AlertAssocParentEntity'
        type:
          enum:
            - ALL_SERVERS
            - ALL_SERVER_GROUPS_ENTITY
            - SERVER_GROUP_ENTITY
            - SERVER_ENTITY
            - APPTYPE_ENTITY
            - Instances_ENTITY
            - BACKUPSET_ENTITY
            - SUBCLIENT_ENTITY
            - REPLICATION_PAIR_ENTITY
            - BLR_PAIR_ENTITY
            - FS_REPLICATION_PAIR_ENTITY
          type: string
      title: AlertAssociationIdNameType
      type: object
    AlertCategoryIdName:
      properties:
        id:
          description: id of the category of the alert definition
          format: int32
          type: integer
        name:
          description: category of the alert definition
          enum:
            - Configuration
            - Custom Rules
            - Job Management
            - Media Management
            - Operation
            - Software Updates
          type: string
      type: object
    AlertCriteriaIdName:
      properties:
        id:
          description: id of the criteria of detection for the alert definition
          format: int32
          type: integer
        name:
          description: criteria of detection for the alert definition
          enum:
            - Backup Job Failed
            - Backup Job Skipped
            - Backup Job Succeeded
            - Increase in Data size by n percent for backup job
            - Backup Job Activity
            - Backup Delayed by n Hrs
            - Backup Job completed with Errors
            - Backup Job Started
            - No Backup for last n Days
            - Restore Job Failed
            - Restore Job Skipped
            - Restore Job Succeeded
            - Restore Job Activity
            - Restore Job Started
            - Restore Job completed with Errors
            - Disk space low on client
            - Failover started
            - Failover activity
            - Failover completed
            - Failover failed
            - Production Commserve is not reachable
            - Production Commserve is not running
            - Passive node is not reachable
            - May miss SLA
            - VM Backup succeeded
            - VM Backup failed
            - VM Backup succeeded with errors
            - Missed SLA
            - Replication Delayed by n Hrs
            - No Replication in last n Days
            - In Sync
            - Sync Pending
            - Sync Paused
            - Sync Failed
            - Failover Failed
            - Failover Complete
            - Failback Failed
            - Undo Failover Failed
          type: string
        paramsList:
          items:
            $ref: '#/components/schemas/AlertDefinitionsCriteriaParams'
          nullable: true
          type: array
      type: object
    AlertDefinition:
      properties:
        company:
          $ref: '#/components/schemas/IdName'
        enabled:
          description: denotes if the alert definition is enabled or disabled
          type: boolean
        id:
          description: Id of the alert definition
          format: int32
          type: integer
        name:
          description: Name of the alert definition
          type: string
        type:
          description: category of the alert definition
          enum:
            - Clients
            - Edge drive-Share operations
            - License
            - MediaAgents
            - Users
            - Client Group License Usage Check
            - Data aging is disabled for n days
            - Expiring clones
            - Index Backup Status
            - Index State
            - Notify decommissioned Virtual Machines
            - Auxiliary Copy
            - Data Aging
            - Data Protection
            - Data Recovery
            - DeDup DB Reconstruction
            - Disaster Recovery Backup
            - Device Status
            - Library Management
            - Admin Alert
            - Event Viewer Events
            - Updates Available to Download
            - No DDB Verification Job in last n days
            - HyperScale-HardwareAlerts
          type: string
      title: AlertDefinition
      type: object
    AlertDefinitionsAssociations:
      items:
        $ref: '#/components/schemas/AlertAssociationIdNameType'
      title: AlertDefinitionsAssociations
      type: array
    AlertDefinitionsCreateAlertType:
      properties:
        category:
          description: Defines the category of the alert
          enum:
            - DATA_AGING
            - AUX_COPY
            - DATA_PROT
            - DATA_RECOV
            - EXP_RECOV
            - DATA_VERIFI
            - MEDIA_INVENT
            - SCH_EXPORT
            - MEDIA_ERASE
            - CLIENTS
            - AGENTS
            - COMMCELL
            - MEDIA_AGENTS
            - SCHE
            - STOR_POL
            - LIBRARY
            - LIB_MAN
            - VAULT_TRAK
            - FTP_DOWNLOAD
            - CLIENT_DIST
            - DEVICE_STATUS
            - ERASE_DATA
            - APP_EXCHANGE
            - DOWNLOAD_AVAIL
            - APP_FLR
            - UPGR_UPDATES
            - DATA_CLASSIFI
            - FLR_JOB
            - OFFLINE_CONT_INDEX
            - APP_SHAREPOINT
            - SRM_WINFS
            - SRM_ORACLE
            - SRM_SQL
            - SRM_NAS
            - SRM_EXCHANGE
            - SRM_SHARE_POINT
            - SRM_UNIXFS
            - SRM_COST_ANALYSIS
            - SRM_NETWARE
            - SRM_ADVISORY
            - SRM
            - REPORT
            - INFO_MANAGEMENT
            - MEDIA_REFRESHING
            - DEDUPDBSYNC
            - SRM_REPORT
            - LOG_MONITORING
            - EVENT_MONITORING
            - CLIENT_GROUPS
            - LICENSE
            - BACKUP_COPY
            - WORKFLOW
            - LOG_MONITORING_WINDOW_EVENT
            - VIRTUALIZE_ME
            - CUSTOM_QUERY
            - DATA_ANALYTICS
            - UNINSTALL_SOFTWARE
            - UPGRADE_CLIENT
            - INSTALL_SOFTWARE
            - USERS
            - USER_GROUPS
            - EDGE_DRIVE
            - ADMIN_JOB
            - COMMSERV_FAILOVER
            - ADMIN_ALERT
            - REPLICATION_ALERT
          type: string
        criteria:
          description: Defines the criteria of the alert
          enum:
            - SUCCEEDED
            - FAILURE_ATTEMTS
            - FAILED
            - SKIPPED
            - DELAYED
            - MEDIA_REQUIRED
            - INITIATED
            - ROLLED_BACK
            - MEDIA_NEEDS_IMPORT
            - MEDIA_HANDLING_REQUIRED
            - MEDIA_PICKED_UP
            - MEDIA_REACHED_DESTINATION
            - MEDIA_RET_SOURCE
            - JOB_ACTIVITY
            - ASR_BACKUP_OCCURED
            - PROPERTIES_MODIFIED
            - ALERT_MODIFIED
            - DISK_SPACE_LOW
            - FORCED_DECONF
            - LIBRARY_OFFLINE
            - SCHEDULER_CHANGES
            - INSUFF_STORAGE
            - TAPE_HANDLING_ERR
            - TAPE_HANDLING_REQ
            - TAPE_MOUNT_ERR
            - MAINT_REQ
            - MAINT_OCCURED
            - USE_OVERWRITE_MEDIA
            - DRIVE_OFFLINE
            - MEDIAAGENT_OFFLINE
            - MOUNTPATH_OFFLINE
            - NW_FAILURE_ATTEMTS
            - JOURNAL_MAILBOX
            - JR_DISK_SPACE_LOW
            - IC_DISK_SPACE_LOW
            - UPDATE_REQUIRED
            - DOWNLOAD_REQUIRED
            - UPDATES_AVAILABLE
            - RELEASE_UPGRADE_REQUIRED
            - UPDATES_REQUIRED
            - MEDIA_READY_IN_CAP
            - FLR_LOG_FILE_HIGH
            - FLR_FREE_SPACE_LOG_FILE_VOL_LOW
            - FLR_NO_PLAY_ACTIVITY
            - FLR_NO_TRANSFER_ACTIVITY
            - NO_DATA_PROTECTION
            - CLASSIFICATION_FAILED
            - FLR_FAILED_REPLICATION
            - SHAREPOINT_VIRTUAL_SERVERS
            - SHAREPOINT_V3_UPGRADE
            - LIBR_MEDIA_RECALLED
            - BACKUP_SIZE_ANOMALY_INCR
            - BACKUP_SIZE_ANOMALY_DECR
            - JOB_STARTED
            - LOGIN_FAILED
            - AUXCOPY_FALLEN_BEHIND
            - SUCCESS_WITH_ERRORS
            - LICENSE_EXPIRY
            - CCP_MODIFIED
            - LICENSE_CONSUMED
            - LOG_MONITORING
            - EVENT_MONITORING
            - LIBR_NONENCRYPTED_MEDIA_EXPORT
            - CICOPY_FALLEN_BEHIND
            - CLIENT_JOB_NOT_RUN
            - CLIENT_CERTIFICATE_EXPIRY
            - JOB_EXCEEDED_RUNNINGTIME
            - FILES_FAILED_COUNT
            - FILES_FAILED_PERCENT
            - DDB_CORRUPTED
            - SUCCESSIVE_FAILED
            - DDB_DISK_SPACE_LOW
            - JOBS_PENDING_STATE
            - BACKUP_SIZE
            - GENERIC_QUERY
            - JOB_COMMITTED
            - JOB_RESULTS_DISK_SPACE_LOW
            - INDEX_CACHE_DISK_SPACE_LOW
            - GALAXY_DIR_DISK_SPACE_LOW
            - QUOTA_EXCEEDED
            - QUOTA_THREASHOLD
            - QUOTA_VALIDATION_FAILED
            - EDGE_DRIVE_ACTION
            - NT_DDB_OFFLINE
            - NT_OBJECT_COUNT_INCR_PERCENT
            - NT_FAILOVER_STARTED
            - NT_FAILOVER_ACTIVITY
            - NT_FAILOVER_COMPLETE
            - NT_FAILOVER_FAILED
            - NT_FAILOVER_CS_UNREACHABLE
            - NT_FAILOVER_CS_NOT_RUNNING
            - NT_FAILOVER_PASSIVE_NODE_UNREACHABLE
            - NT_ADMIN_ALERT_EVENT_ANOMALOUS
            - NT_ADMIN_ALERT_JOB_RUNTIME_ANOMALOUS
            - NT_ANOMALOUS_PENDING_JOBS
            - NT_ANOMALOUS_FAILED_JOBS
            - NT_ALL_CRITERIA
            - NT_FILE_SYSTEM_QUOTA_EXCEEDED
            - NT_FILE_SYSTEM_QUOTA_THRESHOLD
            - NT_FILE_SYSTEM_QUOTA_VALIDATION_FAILED
            - NT_ADMIN_ALERT_JOB_ACTIVITY_ANOMALOUS
            - NT_ANOMALOUS_SUCCEEDED_JOBS
            - NT_CLIENT_OFFLINE
            - NT_ADMIN_ALERT_DDB_PRUNING_ANOMALOUS
            - NT_ADMIN_ALERT_SMART_STATE_MA
            - NT_JOB_SUCCEEDED_WITH_WARNINGS
            - NT_ADMIN_ALERT_PREDICT_SLA_FALL
            - NT_ADMIN_ALERT_SALESFORCE_OBJECT_BACKUP_ANOMALOUS
            - NT_REPLICATION_JOB_NOT_RUN
            - NT_DELAYED_REPLICATION
            - NT_REPLICATION_STATUS_IN_SYNC
            - NT_REPLICATION_STATUS_SYNC_PENDING
            - NT_REPLICATION_STATUS_SYNC_PAUSED
            - NT_REPLICATION_STATUS_SYNC_FAILED
            - NT_FAILOVER_STATUS_FAILOVER_FAILED
            - NT_FAILOVER_STATUS_FAILOVER_COMPLETE
            - NT_FAILOVER_STATUS_FAILBACK_FAILED
            - NT_FAILOVER_STATUS_REVERT_FAILOVER_FAILED
          type: string
        paramsList:
          items:
            $ref: '#/components/schemas/AlertDefinitionsCriteriaParams'
          type: array
      title: AlertDefinitionsCreateAlertType
      type: object
    AlertDefinitionsCriteriaParams:
      properties:
        paramIndex:
          description: Param order index
          format: int32
          type: integer
        type:
          description: Input value type (default 0 = no input required)
          format: int32
          type: integer
        unit:
          description: 'Unit of the criteria(For eg. :Hrs,min)'
          format: int32
          type: integer
        value:
          description: 'Value of the criteria (deefault 0 : if no value required)'
          format: int32
          type: integer
      title: AlertDefinitionsCriteriaParams
      type: object
    AlertDefinitionsDetails:
      properties:
        additionalProperties:
          $ref: '#/components/schemas/AlertAdditionalProperties'
        alertSummary:
          $ref: '#/components/schemas/AlertDetailsSummary'
        alertTarget:
          $ref: '#/components/schemas/AlertDefinitionsTarget'
        associations:
          $ref: '#/components/schemas/AlertDefinitionsAssociations'
        id:
          format: int32
          type: integer
        name:
          type: string
        processDiscoveredVMs:
          description: Set to true for all Virtual Machine related alerts.
          type: boolean
        sendIndividualNotifications:
          description: true if individual notifications are on for the alert definitions
          type: boolean
        templates:
          $ref: '#/components/schemas/AlertDefinitionsTemplate'
      title: AlertDefinitionsDetails
      type: object
    AlertDefinitionsEdit:
      properties:
        alertTarget:
          $ref: '#/components/schemas/AlertDefinitionsTarget'
        associations:
          $ref: '#/components/schemas/AlertDefinitionsAssociations'
        associationsOperationType:
          default: ADD
          description: 'Allows adding to, overwriting and deleting existing alert associations. default is adding to existing alert associations'
          enum:
            - ADD
            - DELETE
            - OVERWRITE
          type: string
        newName:
          description: The new name of the alert definition
          type: string
        sendIndividualNotifications:
          type: boolean
        templates:
          $ref: '#/components/schemas/AlertDefinitionsTemplate'
      title: AlertDefinitionsEdit
      type: object
    AlertDefinitionsList:
      properties:
        alertDefinitions:
          items:
            $ref: '#/components/schemas/AlertDefinition'
          type: array
      title: AlertDefinitionsList
      type: object
    AlertDefinitionsTarget:
      description: Please note CONTENT_INDEX will be returned at all times as it is enabled at all times.
      properties:
        recipients:
          $ref: '#/components/schemas/AlertDefinitionsTargetRecipients'
        recipientsOperationType:
          description: 'Allows adding to, overwriting and deleting existing recipients. default is adding to existing recipients'
          enum:
            - ADD
            - DELETE
            - OVERWRITE
          type: string
        sendAlertTo:
          items:
            enum:
              - LIVEFEEDS
              - SNMP
              - WEBHOOK
              - EMAIL
              - APPLOG
              - CONTENT_INDEX
            type: string
          type: array
      title: AlertDefinitionsTarget
      type: object
    AlertDefinitionsTargetRecipients:
      properties:
        bcc:
          items:
            $ref: '#/components/schemas/AlertTargetIdNameType'
          type: array
        cc:
          items:
            $ref: '#/components/schemas/AlertTargetIdNameType'
          type: array
        to:
          items:
            $ref: '#/components/schemas/AlertTargetIdNameType'
          type: array
        webHookId:
          description: 'id of the webhook to be associated with the alert definition. Only needed incase of webhook notif selected. To get a list of webhooks, use api GET Webhook'
          format: int32
          type: integer
      title: AlertDefinitionsTargetRecipients
      type: object
    AlertDefinitionsTemplate:
      properties:
        console:
          description: the message template for the console notification
          type: string
        email:
          description: the message template for the email notification. Contains both email subject as well as body
          type: string
        eventViewer:
          description: the message template for the event viewer notification
          type: string
        locale:
          $ref: '#/components/schemas/IdName'
        webhook:
          description: the message template for the webhook notification
          type: string
      title: AlertDefinitionsTemplate
      type: object
    AlertDefinitonsCreate:
      properties:
        alertTarget:
          $ref: '#/components/schemas/AlertDefinitionsTarget'
        alertType:
          $ref: '#/components/schemas/AlertDefinitionsCreateAlertType'
        associations:
          $ref: '#/components/schemas/AlertDefinitionsAssociations'
        name:
          type: string
        sendIndividualNotifications:
          type: boolean
        templates:
          $ref: '#/components/schemas/AlertDefinitionsTemplate'
      title: AlertDefinitonsCreate
      type: object
    AlertDetailsSummary:
      properties:
        category:
          $ref: '#/components/schemas/AlertCategoryIdName'
        criteria:
          $ref: '#/components/schemas/AlertCriteriaIdName'
        type:
          $ref: '#/components/schemas/AlertTypeIdName'
      title: AlertDetailsSummary
      type: object
    AlertIds:
      description: Array of ids of an entity
      properties:
        alertId:
          items:
            format: int32
            type: integer
          type: array
      title: AlertIds
      type: object
    AlertSeverity:
      description: Alert Severity Level
      enum:
        - AUTO_PICK
        - CRITICAL
        - MAJOR
        - INFORMATION
      title: AlertSeverity
      type: string
    AlertTargetIdNameType:
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        type:
          enum:
            - USER
            - USER_GROUP
            - EMAIL
            - AD_USERGROUP
          type: string
      title: AlertTargetIdNameType
      type: object
    AlertTriggeredSummary:
      description: Summary of the Alert Triggered
      properties:
        client:
          $ref: '#/components/schemas/IdName'
        company:
          $ref: '#/components/schemas/IdName'
          description: Organization corresponding to alert
        detectedCriterion:
          description: detection criteria for the triggered alert to be generated
          enum:
            - Alert CommServe License Expires Within n Days
            - Alert Modified
            - Alert every n attempts (Network failures)
            - Alert every n attempts (Phase failures)
            - Alert every n failed login attempts
            - Alert when License Consumed reaches n Percent
            - Alert when client certificate Expires Within n Days
            - Alert when jobs in pending state exceed n percent or count of n
            - Auxiliary Copy fallen behind alert
            - Backup for subclient failed consecutively for n attempts
            - Classification Failed
            - DDB Store got corrupted
            - DDB disk space low
            - Data backed up exceeds n GB
            - Decrease in Data size by n %
            - Delayed by n Hrs
            - Disk Space Low
            - Drive went Offline
            - Force De-configured
            - Increase in Data size by n %
            - Insufficient Storage
            - Job Activity
            - Job Failed
            - Job Initiated
            - Job Skipped
            - Job Started
            - Job Succeeded
            - Job Succeeded with Errors
            - Job exceeded running time of n Hrs
            - Library went Offline
            - Maintenance Occurred
            - Maintenance Required
            - Media Handling Required
            - Media Picked Up
            - Media Reached Destination
            - Media Recalled
            - Media Returned to Source
            - MediaAgent went offline
            - Mount Path went Offline
            - No Backup for last n Days
            - No Data Protection
            - Non-encrypted media exported
            - Number of failed files is more than n
            - Percentage of failed files is more than n
            - Properties Modified
            - Release Upgrade Required
            - Rolled Back
            - Scheduler Changes
            - Updates Available to Download
            - User Overwrite of Media
          type: string
        detectedTime:
          description: Unix Epoch Time
          format: int32
          type: integer
        id:
          description: Triggered Alert Id
          format: int32
          type: integer
        info:
          description: Name of the Alert Triggered
          type: string
        jobId:
          description: Job Id by which this Alert was Triggered
          format: int32
          type: integer
        notes:
          description: contains any descriptive note written for the alert
          type: string
        readStatus:
          description: Gives the Alert Read Status. True if Read and False if Unread
          type: boolean
        severity:
          $ref: '#/components/schemas/AlertSeverity'
        type:
          description: alert type for which the triggered alert was generated
          enum:
            - Configuration - Clients
            - Configuration - Edge drive-Share operations
            - Configuration - License
            - Configuration - MediaAgents
            - Configuration - Users
            - Custom Rules - Client Group License Usage Check
            - Custom Rules - Data aging is disabled for n days
            - Custom Rules - Expiring clones
            - Custom Rules - Index Backup Status
            - Custom Rules - Index State
            - Custom Rules - Notify decommissioned Virtual Machines
            - Job Management - Auxiliary Copy
            - Job Management - Data Aging
            - Job Management - Data Protection
            - Job Management - Data Recovery
            - Job Management - DeDup DB Reconstruction
            - Job Management - Disaster Recovery Backup
            - Media Management - Device Status
            - Media Management - Library Management
            - Operation - Admin Alert
            - Operation - Event Viewer Events
            - Software Updates - Updates Available to Download
          type: string
      title: AlertTriggeredSummary
      type: object
    AlertTypeIdName:
      properties:
        id:
          description: id of the alert definition
          format: int32
          type: integer
        name:
          description: type of the alert definitions
          enum:
            - Clients
            - Edge drive-Share operations
            - License
            - MediaAgents
            - Users
            - Client Group License Usage Check
            - Data aging is disabled for n days
            - Expiring clones
            - Index Backup Status
            - Index State
            - Notify decommissioned Virtual Machines
            - Auxiliary Copy
            - Data Aging
            - Data Protection
            - Data Recovery
            - DeDup DB Reconstruction
            - Disaster Recovery Backup
            - Device Status
            - Library Management
            - Admin Alert
            - Event Viewer Events
            - Updates Available to Download
            - No DDB Verification Job in last n days
            - HyperScale-HardwareAlerts
            - Replication
          type: string
      type: object
    AlertsTriggeredListResp:
      description: Used to return a list of alerts triggered
      properties:
        alertsTriggered:
          items:
            $ref: '#/components/schemas/AlertTriggeredSummary'
          type: array
        totalCount:
          description: Total count of the Alerts Triggered
          format: int32
          type: integer
        unreadCount:
          description: Total unread Alerts Triggered
          format: int32
          type: integer
      title: AlertsTriggeredListResp
      type: object
    Alibaba:
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Alibaba Cloud Object Storage Service
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              default: oss.aliyuncs.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
            storageClass:
              description: Appropriate storage class for your account
              enum:
                - Bucket's default
                - Standard
                - Standard - Infrequent access
                - Archive
                - Standard/Archive (Combined Storage Tiers)
                - Infrequent Access/Archive (Combined Storage Tiers)
              type: string
          required:
            - cloudType
            - credentials
            - bucket
            - storageClass
          type: object
        - $ref: '#/components/schemas/DedupeStorageList'
      description: ''
      title: Alibaba Cloud Object Storage Service
    AlibabaBucket:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Alibaba Cloud Object Storage Service
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              default: oss.aliyuncs.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
            storageClass:
              description: Appropriate storage class for your account
              enum:
                - Bucket's default
                - Standard
                - Standard - Infrequent access
                - Archive
                - Standard/Archive (Combined Storage Tiers)
                - Infrequent Access/Archive (Combined Storage Tiers)
              type: string
          required:
            - cloudType
            - mediaAgent
            - credentials
            - bucket
            - storageClass
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
      description: ''
      title: Alibaba Cloud Object Storage Service
    AlibabaBucketContent:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Alibaba Cloud Object Storage Service
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              default: oss.aliyuncs.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
            storageClass:
              description: Appropriate storage class for your account
              enum:
                - Bucket's default
                - Standard
                - Standard - Infrequent access
                - Archive
                - Standard/Archive (Combined Storage Tiers)
                - Infrequent Access/Archive (Combined Storage Tiers)
              type: string
          required:
            - cloudType
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
      description: ''
      title: Alibaba Cloud Object Storage Service
    AllowedFeatures:
      description: Get details about allowed features of a laptop plan
      properties:
        DLP:
          description: Flag to enable Data loss protection
          type: boolean
        archiving:
          description: Flag to enable archiving of laptop data
          type: boolean
        archivingRules:
          $ref: '#/components/schemas/ArchivingRules'
        edgeDrive:
          description: Flag to enable Edge Drive
          type: boolean
        edgeDriveSettings:
          $ref: '#/components/schemas/EdgeDriveSettings'
      type: object
    AmazonCredentialContent:
      description: 'Applicable only for credentials with Cloud Account, Vendor Type as Amazon Web Services and authType is Access and Secret Keys'
      properties:
        accessKeyId:
          description: Access Key ID of Credential. If updated the updated access key ID is considered.
          type: string
        description:
          description: Updated description of Credential
          type: string
        newName:
          description: Updated name of credential
          type: string
        newSecretAccessKey:
          description: Updated Secret Access Key of Credential and must be in base64 encoded format.
          type: string
        security:
          $ref: '#/components/schemas/UpdateCredentialSecurity'
      title: AmazonCredentialContent
      type: object
    AmazonCredentialContentWithRoleArn:
      description: 'Applicable only for credentials with Cloud Account, Vendor Type as Amazon Web Services and authType is STS Assume Role with IAM Role Policy'
      properties:
        description:
          description: Updated description of Credential
          type: string
        newName:
          description: Updated name of credential
          type: string
        roleArn:
          description: Role ARN of credential. If updated the updated role ARN is considered.
          type: string
        security:
          $ref: '#/components/schemas/UpdateCredentialSecurity'
      title: AmazonCredentialContentWithRoleArn
      type: object
    AmazonCredentialInfo:
      allOf:
        - $ref: '#/components/schemas/CreateCredential'
        - properties:
            accessKeyId:
              description: Access Key ID of Credential
              type: string
            authType:
              description: Aunthentication type
              enum:
                - AMAZON_S3
              type: string
            secretAccessKey:
              description: Secret Access Key of Credential and must be in base64 encoded format.
              type: string
          required:
            - authType
            - accessKeyId
            - secretAccessKey
          type: object
        - $ref: '#/components/schemas/CommonCredentialInfo'
      description: 'Applicable only for credentials with Cloud Account, Vendor Type as Amazon Web Services and  authType is Access and Secret Keys'
      title: AmazonCredentialInfo
    AmazonCredentialInfoWithRoleArn:
      allOf:
        - $ref: '#/components/schemas/CreateCredential'
        - properties:
            authType:
              description: Aunthentication type.
              enum:
                - AMAZON_STS_IAM_ROLE
              type: string
            roleArn:
              description: Role ARN of credential
              type: string
          required:
            - authType
            - roleArn
          type: object
        - $ref: '#/components/schemas/CommonCredentialInfo'
      description: 'Applicable only for credentials with Cloud Account, Vendor Type as Amazon Web Services and  authType is STS Assume Role with IAM Role Policy'
      title: AmazonCredentialInfoWithRoleArn
    AmazonCrossAccount:
      properties:
        destinationAccount:
          $ref: '#/components/schemas/IdName'
        fullCopy:
          description: True if full copy of amazon snapshot to different amazon account is enabled
          type: boolean
        shareOnly:
          description: True if replicate and copy or sharing of amazon snapshot to different amazon account in same or different geographic location is enabled
          type: boolean
      title: AmazonCrossAccount
      type: object
    AmazonReplicationGroup:
      allOf:
        - $ref: '#/components/schemas/ReplicationGroup'
        - properties:
            advancedOption:
              $ref: '#/components/schemas/ReplicationGroupAdvOptionsAmazon'
            replicationConfiguration:
              description: Replication configuration for an Amazon replication group
              items:
                $ref: '#/components/schemas/ReplicationConfigurationAmazon'
              type: array
            vendor:
              description: Vendor type of this replication group. Values in enum are case sensitive
              enum:
                - Amazon
              type: string
          required:
            - vendor
          type: object
      description: Replication group details pertaining to Amazon
      title: AmazonReplicationGroup
    AmazonS3:
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - properties:
            arnRole:
              description: Needed for AWS STS assume role and AWS STS assume role with IAM role policy
              type: string
            authentication:
              description: Authentication type for the cloud storage server
              enum:
                - Access and secret keys
                - AWS IAM role policy
                - AWS STS assume role
                - AWS STS assume role with IAM role policy
              type: string
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Amazon S3
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              example: 's3.[region].amazonaws.com'
              type: string
            storageClass:
              description: Appropriate storage class for your account
              enum:
                - Standard
                - Reduced Redundancy Storage
                - Standard - Infrequent access
                - One zone - Infrequent access
                - Intelligent tiering
                - S3 Glacier
                - Standard/Glacier (Combined Storage Tiers)
                - Standard-IA/Glacier (Combined Storage Tiers)
                - One Zone-IA/Glacier (Combined Storage Tiers)
                - Intelligent-Tiering/Glacier (Combined Storage Tiers)
                - S3 Glacier Deep Archive
                - Standard/Deep Archive (Combined Storage Tiers)
                - Standard-IA/Deep Archive (Combined Storage Tiers)
                - One Zone-IA/Deep Archive (Combined Storage Tiers)
                - Intelligent-Tiering/Deep Archive (Combined Storage Tiers)
              type: string
          required:
            - cloudType
            - serviceHost
            - authentication
            - bucket
            - storageClass
          type: object
        - $ref: '#/components/schemas/DedupeStorageList'
      description: ''
      title: Amazon S3
    AmazonS3Bucket:
      allOf:
        - properties:
            arnRole:
              description: Needed for AWS STS assume role and AWS STS assume role with IAM role policy
              type: string
            authentication:
              description: Authentication type for the cloud storage server
              enum:
                - Access and secret keys
                - AWS IAM role policy
                - AWS STS assume role
                - AWS STS assume role with IAM role policy
              type: string
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Amazon S3
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              example: 's3.[region].amazonaws.com'
              type: string
            storageClass:
              description: Appropriate storage class for your account
              enum:
                - Standard
                - Reduced Redundancy Storage
                - Standard - Infrequent access
                - One zone - Infrequent access
                - Intelligent tiering
                - S3 Glacier
                - Standard/Glacier (Combined Storage Tiers)
                - Standard-IA/Glacier (Combined Storage Tiers)
                - One Zone-IA/Glacier (Combined Storage Tiers)
                - Intelligent-Tiering/Glacier (Combined Storage Tiers)
                - S3 Glacier Deep Archive
                - Standard/Deep Archive (Combined Storage Tiers)
                - Standard-IA/Deep Archive (Combined Storage Tiers)
                - One Zone-IA/Deep Archive (Combined Storage Tiers)
                - Intelligent-Tiering/Deep Archive (Combined Storage Tiers)
              type: string
          required:
            - cloudType
            - mediaAgent
            - serviceHost
            - authentication
            - bucket
            - storageClass
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
      description: ''
      title: Amazon S3
    AmazonS3BucketContent:
      allOf:
        - properties:
            arnRole:
              description: Needed for AWS STS assume role and AWS STS assume role with IAM role policy
              type: string
            authentication:
              description: Authentication type for the cloud storage server
              enum:
                - Access and secret keys
                - AWS IAM role policy
                - AWS STS assume role
                - AWS STS assume role with IAM role policy
              type: string
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Amazon S3
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              example: 's3.[region].amazonaws.com'
              type: string
            storageClass:
              description: Appropriate storage class for your account
              enum:
                - Standard
                - Reduced Redundancy Storage
                - Standard - Infrequent access
                - One zone - Infrequent access
                - Intelligent tiering
                - S3 Glacier
                - Standard/Glacier (Combined Storage Tiers)
                - Standard-IA/Glacier (Combined Storage Tiers)
                - One Zone-IA/Glacier (Combined Storage Tiers)
                - Intelligent-Tiering/Glacier (Combined Storage Tiers)
                - S3 Glacier Deep Archive
                - Standard/Deep Archive (Combined Storage Tiers)
                - Standard-IA/Deep Archive (Combined Storage Tiers)
                - One Zone-IA/Deep Archive (Combined Storage Tiers)
                - Intelligent-Tiering/Deep Archive (Combined Storage Tiers)
              type: string
          required:
            - cloudType
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
      description: ''
      title: Amazon S3
    AnomalousConditionInfo:
      properties:
        anomalyType:
          enum:
            - Anomalous runtime
            - Anomalous event
            - Offline client
            - High CPU usage
            - High memory usage
          type: string
        clientInfo:
          $ref: '#/components/schemas/IdName'
        description:
          type: string
        time:
          description: Time when anomalous condition has happened
          format: int64
          type: integer
      type: object
    AppleDirectoryServiceType:
      allOf:
        - description: Specific properties for apple directory service type
          properties:
            OSXServerName:
              description: Domain shortname to create apple directory type app
              type: string
            directoryType:
              description: Apple directory service type
              enum:
                - APPLE_DIRECTORY_SERVICE
              type: string
            name:
              description: Domain connect name
              type: string
          required:
            - directoryType
            - OSXServerName
            - name
          type: object
        - $ref: '#/components/schemas/LDAPRequest'
      description: Model to create LDAP app for Apple Directory Service type
      title: ''
      x-tags:
        - IdentityServer
    ApplicationGroupListResp:
      properties:
        applicationGroupCount:
          format: int32
          type: integer
        applicationGroups:
          items:
            $ref: '#/components/schemas/ApplicationGroupSummary'
          type: array
      type: object
    ApplicationGroupResp:
      properties:
        applicationGroup:
          $ref: '#/components/schemas/IdName'
        errorCode:
          default: 0
          format: int32
          type: integer
        errorMessage:
          description: Response message
          type: string
        warningCode:
          default: 0
          format: int32
          type: integer
        warningMessage:
          default: ''
          description: Response message
          type: string
      type: object
    ApplicationGroupSummary:
      description: ''
      properties:
        applicationGroup:
          $ref: '#/components/schemas/IdName'
        cluster:
          $ref: '#/components/schemas/IdNameDisplayName'
        clusterType:
          $ref: '#/components/schemas/VSVendor'
        company:
          $ref: '#/components/schemas/companyInfo'
        id:
          format: int32
          type: integer
        indexingStatus:
          $ref: '#/components/schemas/IndexingStatusType'
        instance:
          $ref: '#/components/schemas/IdName'
        isDefaultApplicationGroup:
          default: false
          description: True if subclient is default subclient
          type: boolean
        lastBackup:
          $ref: '#/components/schemas/LastBackupJobInfo'
        name:
          nullable: true
          type: string
        plan:
          $ref: '#/components/schemas/IdName'
        snapBackupEnabled:
          default: false
          description: ' true if snap backup enabled'
          type: boolean
        status:
          $ref: '#/components/schemas/VMSLASTATUS'
        storagePolicyRetentionExtension:
          default: false
          description: True if extend storage policy Retention was set in VMGroup for deleted files
          type: boolean
      title: ''
      type: object
    ApplicationListResp:
      properties:
        applications:
          items:
            $ref: '#/components/schemas/ApplicationSummary'
          type: array
        applicationsCount:
          format: int32
          type: integer
      type: object
    ApplicationSummary:
      description: Gives the summary of the virtual machines.
      properties:
        K8applicationSize:
          description: The amount of data being protected for the VM client(in bytes)
          format: int32
          type: integer
        SLA:
          $ref: '#/components/schemas/VMSla'
        UUID:
          description: The globally unique identifier for the VM client.
          type: string
        applicationGroup:
          $ref: '#/components/schemas/IdName'
        applicationSize:
          description: The total space allocated(in bytes) for the virtual machine.
          format: int32
          type: integer
        cluster:
          $ref: '#/components/schemas/IdName'
        commcellName:
          description: Name of the commcell the VM belongs
          type: string
        company:
          $ref: '#/components/schemas/IdName'
        host:
          description: The host name for the computer where the source virtual machine or instance resides.
          type: string
        lastBackup:
          $ref: '#/components/schemas/lastBackup'
        name:
          description: The display name of the VM.
          type: string
        os:
          description: The operating system version for the VM or instance.
          type: string
        plan:
          $ref: '#/components/schemas/IdName'
        status:
          description: 'The status of the backup for the VM, instance, or  container.'
          enum:
            - PROTECTED
            - NOT_PROTECTED
            - PENDING
            - BACKED_UP_WITH_ERROR
            - DISCOVERED
          type: string
        vendor:
          description: The hypervisor where the VM is located.
          enum:
            - KUBERNETES
          type: string
      type: object
    ArchFileType:
      description: Job Archive File type
      enum:
        - DATA
        - INDEX
        - ARCHIVE_FILE
        - LOG
        - JOB_METADATA
        - NA
      title: ArchFileType
      type: string
    ArchivePlan:
      properties:
        allowPlanOverride:
          default: false
          description: Flag to enable overriding of plan. Plan cannot be overriden by default.
          type: boolean
        archivingRules:
          $ref: '#/components/schemas/ArchivePlanArchivingRules'
        backupDestinations:
          items:
            $ref: '#/components/schemas/CreateArchivePlanBackupDestination'
          type: array
        overrideRestrictions:
          $ref: '#/components/schemas/ArchivePlanOverrideSettings'
        parentPlan:
          $ref: '#/components/schemas/IdName'
        planName:
          type: string
        rpo:
          $ref: '#/components/schemas/ArchivePlanRPO'
      required:
        - planName
      type: object
    ArchivePlanArchivingRules:
      description: Files which meet both time stamp and file size rules will be archived
      properties:
        afterArchiving:
          $ref: '#/components/schemas/ArchivingRulesFile'
        fileSize:
          default: 1
          description: 'To archive files based on the size of the file, specify the minimum file size in KB.'
          format: int32
          minimum: 0
          type: integer
        fileTimestamp:
          default: 90
          description: 'To archive files based on the last accessed or modified date of each file within the folder, specify the number of days. Should be supplied with fileTimestampMethod.'
          format: int32
          type: integer
        fileTimestampMethod:
          $ref: '#/components/schemas/ArchivePlanArchivingTimestamp'
      type: object
    ArchivePlanArchivingTimestamp:
      default: LAST_MODIFIED
      enum:
        - LAST_ACCESSED
        - LAST_MODIFIED
      type: string
    ArchivePlanBackupDestination:
      description: ''
      properties:
        copyPrecedence:
          description: Order of copy created in storage policy
          format: int32
          type: integer
        copyType:
          $ref: '#/components/schemas/PlanCopyType'
        copyTypeName:
          $ref: '#/components/schemas/PlanCopyTypeName'
        enableDataAging:
          description: Tells if this copy has data aging enabled
          type: boolean
        isDefault:
          description: Is this a default backup destination?
          type: boolean
        planBackupDestination:
          $ref: '#/components/schemas/IdName'
        region:
          $ref: '#/components/schemas/IdNameDisplayName'
        retentionPeriodDays:
          description: Retention period in days
          format: int32
          maximum: 9999
          minimum: 1
          type: integer
        sourceCopy:
          $ref: '#/components/schemas/IdName'
        storagePool:
          $ref: '#/components/schemas/StoragePool'
        storageType:
          $ref: '#/components/schemas/StorageType'
      type: object
    ArchivePlanBackupDestinations:
      properties:
        backupdestinations:
          items:
            $ref: '#/components/schemas/ArchivePlanBackupDestination'
          nullable: true
          type: array
        regionsConfigured:
          description: Specifies if the plan has region-based storage
          type: boolean
      type: object
    ArchivePlanDetails:
      properties:
        allowPlanOverride:
          description: Flag to enable overriding of plan
          type: boolean
        archivingRules:
          $ref: '#/components/schemas/ArchivePlanArchivingRules'
        associatedEntities:
          items:
            $ref: '#/components/schemas/IdNameCount'
          type: array
        backupDestinations:
          items:
            $ref: '#/components/schemas/ArchivePlanBackupDestination'
          type: array
        inheritSettings:
          $ref: '#/components/schemas/ArchivePlanInheritSettings'
        overrideRestrictions:
          $ref: '#/components/schemas/ArchivePlanOverrideSettings'
        permissions:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        plan:
          $ref: '#/components/schemas/IdName'
        regionsConfigured:
          description: Specifies if the destinations are associated to regions
          type: boolean
        rpo:
          $ref: '#/components/schemas/ArchivePlanRPODetails'
      type: object
    ArchivePlanInheritSettings:
      properties:
        RPO:
          $ref: '#/components/schemas/PlanOverridenOptions'
        archivingRules:
          $ref: '#/components/schemas/PlanOverridenOptions'
        basePlan:
          $ref: '#/components/schemas/IdName'
        storagePool:
          $ref: '#/components/schemas/PlanOverridenOptions'
      title: ArchivePlanInheritSettings
      type: object
    ArchivePlanOverrideSettings:
      description: 'To allow the derived plans that use this plan as the base plan to override the settings, property allowPlanOverride must be true, and then select one of the options for Storage pool, RPO and Archiving rules.'
      properties:
        RPO:
          $ref: '#/components/schemas/PlanOverrideOptions'
        archivingRules:
          $ref: '#/components/schemas/PlanOverrideOptions'
        storagePool:
          $ref: '#/components/schemas/PlanOverrideOptions'
      type: object
    ArchivePlanRPO:
      description: Recovery Point Objective (RPO) is the maximum amount of time that data can be lost during a service disruption. Your RPO determines the frequency of your backup jobs.
      properties:
        archiveFrequency:
          $ref: '#/components/schemas/BackupFrequencyPattern'
        archiveWindow:
          description: Archive job will run only in the specified archive window
          items:
            $ref: '#/components/schemas/DayAndTime'
          nullable: true
          type: array
      type: object
    ArchivePlanRPODetails:
      description: Recovery Point Objective (RPO) is the maximum amount of time that data can be lost during a service disruption. Your RPO determines the frequency of your backup jobs.
      properties:
        SLA:
          $ref: '#/components/schemas/SLAOptions'
        backupFrequency:
          $ref: '#/components/schemas/BackupFrequencyPattern'
        backupWindow:
          description: Archive job will run only in the specified archive window
          items:
            $ref: '#/components/schemas/DayAndTime'
          nullable: true
          type: array
      type: object
    ArchivePlanUpdateRPO:
      description: Recovery Point Objective (RPO) is the maximum amount of time that data can be lost during a service disruption. Your RPO determines the frequency of your backup jobs.
      properties:
        SLA:
          $ref: '#/components/schemas/SLAUpdateOptions'
        backupFrequency:
          $ref: '#/components/schemas/BackupFrequencyPattern'
        backupWindow:
          description: Archive job will run only in the specified archive window
          items:
            $ref: '#/components/schemas/DayAndTime'
          nullable: true
          type: array
      type: object
    ArchivingRules:
      description: These rules are enforced only when archiving is set to true
      properties:
        afterArchiving:
          $ref: '#/components/schemas/ArchivingRulesFile'
        archiveReadOnlyFiles:
          default: false
          description: 'To archive files based on the Read-Only attribute, set to TRUE'
          type: boolean
        fileAccessTimeOlderThan:
          default: 90
          description: 'To archive files based on the last accessed date of each file within the folder, specify the number of days'
          format: int32
          type: integer
        fileCreatedTimeOlderThan:
          default: 0
          description: 'To archive files based on the time the files were created within the folder, specify the number of days'
          format: int32
          type: integer
        fileModifiedTimeOlderThan:
          default: 90
          description: 'To archive files based on the last modified date of each file within the folder, specify the number of days'
          format: int32
          type: integer
        fileSizeGreaterThan:
          default: 1024
          description: 'To archive files based on the size of the file, specify the minimum file size in KB. All files whose size ranges between the minimum and maximum values are archived.'
          format: int32
          type: integer
        maximumFileSize:
          default: 0
          description: 'To archive files based on the size of the file, specify the maximum file size in KB. All files whose size ranges between the minimum and maximum values are archived.'
          format: int32
          type: integer
        startCleaningIfLessThan:
          default: 50
          description: 'When free disk space falls below specified amount (in percentage), start cleaning up the disk'
          format: int32
          type: integer
        stopCleaningIfupto:
          default: 80
          description: 'When free disk space more than specified amount (in percentage), stop cleaning up the disk'
          format: int32
          type: integer
      title: ''
      type: object
    ArchivingRulesFile:
      description: 'After an archive job, replace the file that meets the archiving rules with a stub or delete the file that meets the archiving rules'
      enum:
        - REPLACE_FILE_WITH_STUB
        - DELETE_THE_FILE
      title: ''
      type: string
    ArrayAccessNodes:
      description: Template for MAs that can access Arrays
      properties:
        displayName:
          description: The display name of the corresponding Media Agent
          type: string
        id:
          description: Id of the MediaAgent
          format: int32
          type: integer
        name:
          description: Name of the MediaAgent
          type: string
        pruning:
          description: Enable/Disable pruning of snapshots on the selected Media Agent
          type: boolean
      title: ArrayAccessNodes
      type: object
    ArrayConfigsBasic:
      description: Generic template for arrayConfigs
      properties:
        masterConfigId:
          description: 'This is the masterConfigId, which is available for each vendor''s configs'
          format: int32
          type: integer
        name:
          description: This is the name of the config which is displayed on the Command Center Console
          type: string
        type:
          description: 'Type of the config value. type can accept 7 values [1,2,8,10,12,13,14], 1: boolean, 2: integer, 8: text, 10: array[string] are common configs, the rest three are special keys, 12 is for password type key for NetApp E-Series and HPE Nimble, 13 is Private Key for GCP, 14 is a config to select type of Disk for GCP'
          enum:
            - 1
            - 2
            - 8
            - 10
            - 12
            - 13
            - 14
          format: int32
          type: integer
        value:
          description: Takes a single value for all types except 10 and for type 14 it holds the id of the selected value from values
          type: string
        values:
          description: Values to be entered. for type 10 and 14
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      required:
        - masterConfigId
        - name
        - type
      title: ArrayConfigsBasic
      type: object
    ArrayConfigsEdit:
      description: Array config template for editArrayDetails
      properties:
        flags:
          description: Flag regarding placement of config in the CC page
          format: int32
          type: integer
        isUpdated:
          description: Whether the config is updated/edited or not
          type: boolean
        masterConfigId:
          description: 'This is the masterConfigId, which is available for each vendor''s configs'
          format: int32
          type: integer
        name:
          description: This is the name of the config which is displayed on the Command Center Console
          type: string
        type:
          description: 'Type of the config value. type can accept 7 values [1,2,8,10,12,13,14], 1: boolean, 2: integer, 8: text, 10: array[string] are common configs, the rest three are special keys, 12 is for password type key for NetApp E-Series and HPE Nimble, 13 is Private Key for GCP, 14 is a hidden config to select type of Disk for GCP'
          enum:
            - 1
            - 2
            - 8
            - 10
            - 12
            - 13
            - 14
          format: int32
          type: integer
        value:
          description: Takes a single value for all types and for type 14 it holds the id of the selected value from values
          type: string
        values:
          description: 'For type 10 and 14, it can take one or more value of idname type where id by default is 0 for 10'
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      required:
        - masterConfigId
        - name
        - type
        - flags
        - isUpdated
      title: ArrayConfigsEdit
      type: object
    ArrayConfigsGet:
      description: Array config template for getArrayDetails
      properties:
        description:
          description: Description about the config that tells the user what it is for and the range of values it accepts
          type: string
        flags:
          description: Flag regarding placement of config in the CC page
          format: int32
          type: integer
        isEnabled:
          description: Whether the config is enabled or not
          type: boolean
        masterConfigId:
          description: 'This is the masterConfigId, which is available for each vendors configs'
          format: int32
          type: integer
        name:
          description: This is the name of the config which is displayed on the Command Center Console
          type: string
        type:
          description: 'Type of the config value. type can accept 7 values [1,2,8,10,12,13,14], 1: boolean, 2: integer, 8: text, 10: array[string] are common configs, the rest three are special keys, 12 is for password type key for NetApp E-Series and HPE Nimble, 13 is Private Key for GCP, 14 is a config to select type of Disk for GCP'
          enum:
            - 1
            - 2
            - 8
            - 10
            - 12
            - 13
            - 14
          format: int32
          type: integer
        value:
          description: Values to be set for all types except 10 and 14
          type: string
        values:
          description: Values to be set for type 10 and 14
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      title: ArrayConfigsGet
      type: object
    ArrayDetails:
      description: Details of Engine Array
      properties:
        accessNodes:
          items:
            $ref: '#/components/schemas/ArrayAccessNodes'
          type: array
        availableAccessNodes:
          items:
            $ref: '#/components/schemas/IdNameDisplayName'
          type: array
        general:
          $ref: '#/components/schemas/ArrayGenDetails'
        labels:
          $ref: '#/components/schemas/ArrayLabel'
        security:
          $ref: '#/components/schemas/SecurityAssoc'
        snapConfigurations:
          items:
            $ref: '#/components/schemas/ArrayConfigsGet'
          type: array
      title: ArrayDetails
      type: object
    ArrayGenDetails:
      description: Generic Details of the Engine Array. Region depicts the workload region which is only applicable to NetApp arrays as of now.
      properties:
        array:
          $ref: '#/components/schemas/IdName'
        arrayType:
          description: 'Used to differentiate between Primary, Secondary, and OCUM type of NetApp Array'
          format: int32
          type: integer
        cloudVendorId:
          description: Id for cloud vendors associated to arrays
          format: int32
          type: integer
        controlHost:
          description: Control Host name of the array
          type: string
        credential:
          $ref: '#/components/schemas/ArrayUserPassword'
        description:
          description: User provided description of the array
          type: string
        enableNetAppCloudAccount:
          description: Set as true for NetApp cloud target arrays
          type: boolean
        flags:
          default: 0
          description: '0: default 1: Only selected arrays 2: Disable automatic cleanup 4: System created arrays 8: Auto created arrays 16: User created arrays'
          enum:
            - 0
            - 1
            - 2
            - 4
            - 8
            - 16
          format: int32
          type: integer
        region:
          $ref: '#/components/schemas/IdName'
        savedCredential:
          $ref: '#/components/schemas/IdName'
        snapVendor:
          $ref: '#/components/schemas/IdName'
        uniqueIdentifier:
          description: Unique identifier pertaining to each array
          type: string
      title: ArrayGenDetails
      type: object
    ArrayLabel:
      description: Labels for array entities to be displayed on the CC page
      properties:
        controlHost:
          description: Label for array control host
          type: string
        name:
          description: Label for array name
          type: string
        password:
          description: Label for array password
          type: string
        userName:
          description: Label for array username
          type: string
      title: ArrayLabel
      type: object
    ArrayLevel:
      description: Array detail template
      properties:
        VSVendor:
          $ref: '#/components/schemas/VSVendor'
        assocFlag:
          description: Flag to check if the array is associated to the given client or subclient
          type: boolean
        controlHost:
          description: Control host of the storage array
          type: string
        description:
          description: description about the Storage Array
          type: string
        flags:
          default: 0
          description: '0: default 1: Only selected arrays 2: Disable automatic cleanup 4: System created arrays 8: Auto created arrays 16: User created arrays'
          enum:
            - 0
            - 1
            - 2
            - 4
            - 8
            - 16
          format: int32
          type: integer
        id:
          format: int32
          type: integer
        name:
          type: string
        userName:
          description: User name for array
          type: string
        vendor:
          description: Vendor Name
          type: string
      title: ArrayLevel
      type: object
    ArrayReplicationDatastoreReplication:
      description: The replication information for each datastore pair mapping
      properties:
        destinationDatastore:
          $ref: '#/components/schemas/NameGUID'
        id:
          description: The ID of datastore relationship mapping
          format: int32
          type: integer
        sourceDatastore:
          $ref: '#/components/schemas/NameGUID'
      title: ArrayReplicationDatastoreReplication
      type: object
    ArrayReplicationMonitorInfo:
      description: Gives array replication monitor site information
      properties:
        datastores:
          items:
            $ref: '#/components/schemas/ArrayReplicationDatastoreReplication'
          type: array
        destination:
          $ref: '#/components/schemas/NameGUID'
        failoverStatus:
          $ref: '#/components/schemas/FailoverStatus'
        id:
          description: The ID of array replication pair
          format: int32
          type: integer
        lastReplicationFailureStatus:
          description: The reason for last replication job failure
          type: string
        source:
          $ref: '#/components/schemas/NameGUID'
      title: ArrayReplicationMonitorInfo
      type: object
    ArrayReplicationMonitorResp:
      description: The response for array replication monitor
      properties:
        arrayReplicationMonitorInfo:
          description: The list of array replication pair information
          items:
            $ref: '#/components/schemas/ArrayReplicationMonitorInfo'
          type: array
      title: ArrayReplicationMonitorResp
      type: object
    ArrayUserPassword:
      description: Template for options provided to user
      properties:
        password:
          description: Password to access the array
          type: string
        userName:
          description: Username to access the array
          type: string
      required:
        - userName
      title: ArrayUserPassword
      type: object
    AssignLaptopOwnerMappingReq:
      description: Model used for assign laptop owner mapping
      properties:
        applyAll:
          default: true
          description: This indicates if applying assign laptop owners to all device user mappings within a company
          type: boolean
        laptopOwnerMapping:
          description: Accepts list of laptop owner mapping ids to be applied
          items:
            format: int32
            type: integer
          type: array
      title: AssignLaptopOwnerMappingReq
      type: object
    AssocEntity:
      description: Used to provide the entities associated.
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        permissionList:
          $ref: '#/components/schemas/PermissionResp'
        role:
          $ref: '#/components/schemas/IdName'
        type:
          description: type of entities associated.
          type: string
      type: object
    AssociatePlanRuleEntity:
      description: Message object to hold information of entities to which selected plan and plan rule need to be associated
      properties:
        plan:
          $ref: '#/components/schemas/IdName'
        rule:
          $ref: '#/components/schemas/IdName'
        subclient:
          $ref: '#/components/schemas/IdName'
      title: AssociatePlanRuleEntity
      type: object
    AssociatePlanRuleEntityList:
      description: List of entities that are will be associated to provided plan and said rule
      properties:
        entities:
          description: Details of entity that will be associated to plan and rule.
          items:
            $ref: '#/components/schemas/AssociatePlanRuleEntity'
          type: array
      title: AssociatePlanRuleEntityList
      type: object
    AssociatedRegionBasedPlans:
      description: Details of plans associated to the region
      properties:
        plans:
          items:
            $ref: '#/components/schemas/AssociatedRegionBasedPlansList'
          type: array
        plansCount:
          format: int32
          type: integer
      title: AssociatedRegionBasedPlans
      type: object
    AssociatedRegionBasedPlansList:
      description: List of plans associated to the region
      properties:
        associatedServers:
          format: int32
          type: integer
        plan:
          $ref: '#/components/schemas/IdName'
        type:
          $ref: '#/components/schemas/PlanType'
      title: AssociatedRegionBasedPlansList
      type: object
    AuditLevel:
      description: Defines the serverity of the audit entry
      enum:
        - LOW
        - MEDIUM
        - HIGH
        - CRITICAL
      title: AuditLevel
      type: string
    AuthenticationServer:
      properties:
        authenticationMethod:
          description: Tells this authenticator belongs to which authentication method
          enum:
            - SAML
            - AD
            - LOCAL
          type: string
        company:
          $ref: '#/components/schemas/IdName'
        id:
          description: Identity server id
          format: int32
          type: integer
        name:
          description: Identity server name
          type: string
        samlType:
          description: Name of the IdP. Available only if type is SAML.
          enum:
            - UNKNOWN
            - AZURE
            - ADFS
            - OKTA
          type: string
        type:
          description: Identity server service type in Enum string
          enum:
            - SAML
            - ACTIVE_DIRECTORY
            - APPLE_DIRECTORY_SERVICE
            - ORACLE_DIRECTORY
            - OPEN_LDAP
            - LDAP_SERVER
            - OTHER
          type: string
      title: AuthenticationServer
      type: object
    AutoRetireDevices:
      properties:
        deleteAfterDays:
          default: -1
          description: The offline laptops are automatically deleted when the number of days are met. -1 means never.
          format: int32
          type: integer
        retireAfterDays:
          default: -1
          description: The offline laptops are retired when the number of days are met. -1 means never.
          format: int32
          type: integer
      title: ''
      type: object
    AutomaticFailoverMonitoringStatus:
      description: Automatic failover monitoring status
      enum:
        - DISABLED
        - FAILED
        - ENABLED
        - PAUSED
        - STARTING
        - NOT_CONFIGURED
      type: string
    AutomaticFailoverStatus:
      description: Automatic failover configuration status
      enum:
        - OFFLINE
        - ONLINE
      type: string
    AutomaticServerGroupAssociationDetails:
      properties:
        clientScope:
          $ref: '#/components/schemas/ClientScopeDetails'
        confirmRuleChange:
          description: Confirm that server group rule impacts server of a specific company smart client group only
          type: boolean
        serverGroupRule:
          $ref: '#/components/schemas/ServerRuleGroups'
      type: object
    AzureAdApp:
      description: ''
      properties:
        applicationId:
          description: Azure Application ID
          type: string
        applicationSecret:
          description: 'Azure app secret key, needs to be base64 encoded'
          type: string
      required:
        - applicationId
        - applicationSecret
      type: object
    AzureAdAppToken:
      allOf:
        - $ref: '#/components/schemas/AzureAdApp'
        - properties:
            refreshToken:
              description: User based refresh token generated with corresponding app credentials. Can be left blank if the azure app is protected API approved.
              type: string
          type: object
      title: AzureAdAppToken
      type: object
    AzureCredentialContent:
      description: 'Applicable only for credentials with Cloud Account, Vendor Type as Microsoft Azure and authType is Access Key'
      properties:
        accountName:
          description: Account name of Credential. If updated the updated account name is considered else the existing account name is considered.
          type: string
        description:
          description: Updated description of Credential
          type: string
        newAccessKeyId:
          description: Access key ID of Credential and must be in base64 encoded format.
          type: string
        newName:
          description: Updated name of credential
          type: string
        security:
          $ref: '#/components/schemas/CredentialSecurity'
      title: AzureCredentialContent
      type: object
    AzureCredentialContentWithTenantId:
      description: Applicable only for credentials with Cloud Account and Vendor Type as Microsoft Azure
      properties:
        applicationId:
          description: Unique Azure application ID
          type: string
        description:
          description: Updated description of Credential
          type: string
        endpoints:
          $ref: '#/components/schemas/AzureEndpoints'
        environment:
          description: Azure cloud deployed region
          enum:
            - AZURE_CLOUD
            - AZURE_USGOV
            - AZURE_GERMANCLOUD
            - AZURE_CHINACLOUD
            - AZURE_STACK
          type: string
        newApplicationSecret:
          description: Application secret of Credential and must be in base64 encoded format.
          type: string
        newName:
          description: Updated name of credential
          type: string
        security:
          $ref: '#/components/schemas/CredentialSecurity'
        tenantId:
          description: Unique Azure active directory ID
          type: string
      title: AzureCredentialContentWithTenantId
      type: object
    AzureCredentialInfo:
      allOf:
        - $ref: '#/components/schemas/CreateCredential'
        - properties:
            accessKeyId:
              description: 'Access key ID of Credential, applicable only if authType is Access Secret Key and must be in base64 encoded format.'
              type: string
            accountName:
              description: 'Account name of Credential, applicable only if authType is Access Key'
              type: string
            authType:
              description: Aunthentication type applicable only for Cloud Accounts with Microsoft Azure as vendor.
              enum:
                - MICROSOFT_AZURE
              type: string
          required:
            - authType
            - accountName
            - accessKeyId
          type: object
        - $ref: '#/components/schemas/CommonCredentialInfo'
      description: 'Applicable only for credentials with Cloud Account, Vendor Type is Microsoft Azure and authType is Access Key'
      title: AzureCredentialInfo
    AzureCredentialInfoWithTenantId:
      allOf:
        - $ref: '#/components/schemas/CreateCredential'
        - properties:
            applicationId:
              description: Unique Azure application ID
              type: string
            applicationSecret:
              description: Application secret of Credential and must be in base64 encoded format.
              type: string
            authType:
              description: Aunthentication type applicable only for Cloud Accounts with Microsoft Azure as vendor.
              enum:
                - AZUREACCOUNT
              type: string
            endpoints:
              $ref: '#/components/schemas/AzureEndpoints'
            environment:
              description: Azure cloud deployed region
              enum:
                - AZURE_CLOUD
                - AZURE_USGOV
                - AZURE_GERMANCLOUD
                - AZURE_CHINACLOUD
                - AZURE_STACK
              type: string
            tenantId:
              description: Unique Azure active directory ID
              type: string
          required:
            - authType
            - tenantId
            - applicationId
            - applicationSecret
            - environment
          type: object
        - $ref: '#/components/schemas/CommonCredentialInfo'
      description: Applicable only for Cloud Accounts with Microsoft Azure vendor and authType as IAM AD Application Role Assignment
      title: AzureCredentialInfoWithTenantId
    AzureEndpoints:
      description: 'Endpoints for Aunthentication, Storage and Management'
      properties:
        activeDirectory:
          type: string
        resourceManager:
          type: string
        storage:
          type: string
      title: AzureEndpoints
      type: object
    AzureReplicationGroup:
      allOf:
        - $ref: '#/components/schemas/ReplicationGroup'
        - properties:
            advancedOption:
              $ref: '#/components/schemas/ReplicationGroupAdvOptionsAzure'
            replicationConfiguration:
              items:
                $ref: '#/components/schemas/ReplicationConfigurationAzure'
              type: array
            vendor:
              description: Vendor type of this replication group. Values in enum are case sensitive
              enum:
                - Azure
              type: string
          required:
            - vendor
          type: object
      description: Replication group details pertaining to Azure
      title: AzureReplicationGroup
    BackupFrequencyPattern:
      description: Used to describe the frequency of backup
      properties:
        dayOfMonth:
          description: 'Day on which to run the schedule, applicable for monthly, yearly'
          format: int32
          maximum: 31
          minimum: 1
          type: integer
        dayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
        frequency:
          default: 1
          description: 'Frequency of the schedule based on schedule frequency type eg. for Hours, value 2 is 2 hours, for Minutes, 30 is 30 minutes, for Daily, 2 is 2 days. for Monthly 2 is it repeats every 2 months'
          format: int32
          minimum: 1
          type: integer
        monthOfYear:
          $ref: '#/components/schemas/MonthOfYear'
        scheduleFrequencyType:
          default: DAILY
          description: schedule frequency type
          enum:
            - MINUTES
            - DAILY
            - WEEKLY
            - MONTHLY
            - YEARLY
          type: string
        startTime:
          default: 75600
          description: 'start time of schedule in seconds for daily, weekly, monthly, yearly frequency'
          format: int32
          type: integer
        weekOfMonth:
          $ref: '#/components/schemas/WeekOfTheMonth'
        weeklyDays:
          description: Days of the week for weekly frequency
          items:
            $ref: '#/components/schemas/DayOfTheWeek'
          nullable: true
          type: array
      type: object
    BackupLocationDetails:
      properties:
        diskAccessPaths:
          description: access paths available on the backup location
          items:
            $ref: '#/components/schemas/AccessPathDetails'
          type: array
        freeSpace:
          description: total free space on the backup location
          format: int32
          type: integer
        totalCapacity:
          description: total capacity of the backup location
          format: int32
          type: integer
      type: object
    BackupOperations:
      enum:
        - FULL
        - INCREMENTAL_AND_DIFFERENTIAL
        - SYNTHETIC_FULL
        - TRANSACTION_LOG
        - ALL_OPERATIONS
        - DATA_RECOVERY
        - AUXILIARY_COPY
        - DISASTER_RECOVERY_BACKUP
        - DATA_VERIFICATION
        - ERASE_SPARE_MEDIA
        - SHELF_MANAGEMENT
        - DELETE_DATA_BY_BROWSING
        - DELETE_ARCHIVED_DATA
        - OFFLINE_CONTENT_INDEXING
        - ONLINE_CONTENT_INDEXING
        - INFORMATION_MANAGEMENT
        - MEDIA_REFRESHING
        - DATA_ANALYTICS
        - DATA_PRUNING
        - BACKUP_COPY
        - STUBBING
        - INSTALL_UPDATES
      format: ''
      type: string
    BigDataAppListResp:
      description: Used to return a list of big data apps.
      properties:
        bigDataAppCount:
          description: This returns the total number of big data apps.
          format: int32
          type: integer
        bigDataApps:
          description: This returns the big data app list.
          items:
            $ref: '#/components/schemas/BigDataAppSummary'
          type: array
      title: ''
      type: object
    BigDataAppSummary:
      description: This returns the big data app summary.
      properties:
        GUID:
          description: This returns the Globally Unique Identifier of the big data app.
          type: string
        SLA:
          $ref: '#/components/schemas/SLADetails'
        applicationId:
          description: This gives the application id of the big data app.
          format: int32
          type: integer
        applicationSize:
          description: Provides the application size of the big data app. It is provided in bytes.
          format: int32
          type: integer
        clusterType:
          description: This returns the clusterType of the big data app
          type: string
        company:
          $ref: '#/components/schemas/IdName'
        configured:
          description: This returns if the big data app is configured or deconfigured.
          type: boolean
        displayName:
          description: This gives the name of the big data app as it shown on the admin console or GUI.
          type: string
        id:
          description: This gives the id of the big data app.
          format: int32
          type: integer
        instance:
          $ref: '#/components/schemas/IdName'
        lastBackup:
          $ref: '#/components/schemas/LastBackupJobInfo'
        name:
          description: This give the name of the big data app.
          type: string
        plan:
          $ref: '#/components/schemas/IdName'
      title: ''
      type: object
    BlackoutWindow:
      description: company refers to company to which the blackout window is associated. Dates are provided in unix time format.
      properties:
        allDays:
          description: Days of the week along with the time on which the black out window will be in effect.
          items:
            $ref: '#/components/schemas/DaysAndTimes'
          type: array
        backupOperations:
          description: backupOperations refers to the backup types to include in the blackout window
          items:
            $ref: '#/components/schemas/BackupOperations'
          type: array
        betweenDates:
          $ref: '#/components/schemas/StartEnd'
        company:
          $ref: '#/components/schemas/IdName'
        doNotSubmitJob:
          description: 'Allows or Denies submitting a job when the blackout window is in effect. If allowed, the job is submitted and resumed once the blackout window ends.'
          type: boolean
        id:
          description: Id of the blackout window.
          format: int32
          type: integer
        name:
          description: Name of the blackout window.
          type: string
        weeks:
          description: Refers to the weeks of the month that the blackout window will be in effect and jobs will not run.
          items:
            $ref: '#/components/schemas/WeekOfMonth'
          type: array
      type: object
    BlackoutWindowSummary:
      description: company refers to company to which the blackout window is associated. dates refers to the dates where the blackout window will be in effect. Dates are given in unix time format.doNotRunBetween refers to the time between which jobs cannot be run. The time is provided in seconds.
      properties:
        allDays:
          description: Days of the week along with the time on which the black out window will be in effect.
          items:
            $ref: '#/components/schemas/DaysAndTimes'
          type: array
        betweenDates:
          $ref: '#/components/schemas/StartEnd'
        company:
          $ref: '#/components/schemas/IdName'
        id:
          description: blackout window Id
          format: int32
          type: integer
        name:
          description: blackout window name
          type: string
      type: object
    BlackoutWindowsListResponse:
      properties:
        blackoutWindows:
          description: Returns a summary of all blackout windows
          items:
            $ref: '#/components/schemas/BlackoutWindowSummary'
          type: array
      type: object
    BucketsResp:
      properties:
        bucket:
          $ref: '#/components/schemas/IdName'
        cloudAccessPaths:
          items:
            $ref: '#/components/schemas/CloudAccessPathsResp'
          type: array
        cloudBucket:
          description: Name of Bucket
          type: string
        configuration:
          $ref: '#/components/schemas/CloudBucketConfiguration'
      title: BucketResp
      type: object
    CCLVaultV2:
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - CCL Vault v2
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              default: s3-nzl.vault.net.nz
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
          type: object
        - $ref: '#/components/schemas/DedupeStorageList'
      description: ''
      title: CCL Vault v2
    CCLVaultV2Bucket:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - CCL Vault v2
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              default: s3-nzl.vault.net.nz
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
      description: ''
      title: CCL Vault v2
    CCLVaultV2BucketContent:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - CCL Vault v2
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              default: s3-nzl.vault.net.nz
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
      description: ''
      title: CCL Vault v2
    CRDCloudAccount:
      description: Cloud account eligible for Cloud Resource Discovery
      properties:
        client:
          $ref: '#/components/schemas/IdName'
        subscriptionId:
          description: Subscription Id of the cloud account
          type: string
      title: CRDCloudAccount
      type: object
    CacheConfigurations:
      properties:
        enable:
          description: Tells if cache configuration is enabled for this storage
          type: boolean
        metadataCache:
          items:
            $ref: '#/components/schemas/MetadataCache'
          type: array
      title: CacheConfigurations
      type: object
    CategoryList:
      properties:
        category:
          $ref: '#/components/schemas/IdName'
        permissions:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      type: object
    Ceph:
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Ceph Object Gateway (S3-compatible)
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
          type: object
        - $ref: '#/components/schemas/DedupeStorageList'
      description: ''
      title: Ceph Object Gateway (S3-compatible)
    CephBucket:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Ceph Object Gateway (S3-compatible)
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
      description: ''
      title: Ceph Object Gateway (S3-compatible)
    CephBucketContent:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Ceph Object Gateway (S3-compatible)
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
      description: ''
      title: Ceph Object Gateway (S3-compatible)
    ChinaMobileOnest:
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - properties:
            cloudType:
              description: Name of cloud vendor
              enum:
                - China Mobile oNest
              type: string
            container:
              description: Name of container
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - container
          type: object
        - $ref: '#/components/schemas/DedupeStorageList'
      description: ''
      title: China Mobile oNest
    ChinaMobileOnestBucket:
      allOf:
        - properties:
            cloudType:
              description: Name of cloud vendor
              enum:
                - China Mobile oNest
              type: string
            container:
              description: Name of container
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - container
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
      description: ''
      title: China Mobile oNest
    ChinaMobileOnestBucketContent:
      allOf:
        - properties:
            cloudType:
              description: Name of cloud vendor
              enum:
                - China Mobile oNest
              type: string
            container:
              description: Name of container
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
      description: ''
      title: China Mobile oNest
    ClientListForStorageResp:
      description: Client List for storage entity.
      properties:
        clients:
          description: List of Client Id and Name.
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      title: ClientListForStorageResp
      type: object
    ClientScopeDetails:
      properties:
        clientScopeType:
          $ref: '#/components/schemas/ClientScopeType'
        entityInfo:
          $ref: '#/components/schemas/IdName'
      type: object
    ClientScopeType:
      enum:
        - COMMCELL
        - COMPANY
        - USER
        - USERGROUP
      format: ''
      type: string
    CloudAccessPathsResp:
      properties:
        access:
          description: Type of access provided to the cloud storage are Read and Read/Write
          type: string
        accessPathId:
          description: Id of cloud access path
          format: int32
          type: integer
        accessible:
          description: Accessibility status of cloud storage
          type: string
        bucket:
          description: Name of the bucket
          type: string
        mediaAgent:
          $ref: '#/components/schemas/IdNameDisplayName'
        username:
          description: Username used to connect to cloud Storage
          type: string
      title: CloudAccessPathsResp
      type: object
    CloudBucketConfiguration:
      properties:
        enable:
          description: 'When true, means mount path is enabled'
          type: boolean
        prepareForRetirement:
          description: 'When true, the deduplicated blocks in the mount path will not be referenced when there are multiple mount paths in the library.'
          type: boolean
        preventNewDataWritesToBackupLocation:
          description: 'When true, prevents new data writes to backup location by changing number of writers to zero'
          type: boolean
        storageAcceleratorCredentials:
          $ref: '#/components/schemas/IdName'
      title: CloudBucketConfiguration
      type: object
    CloudCredentialContent:
      description: 'Applicable only for credentials with Cloud Account and Vendor Type as Cloud Object Storage Service, Amazon Glacier, CCL Vault V2, Ceph Object Gateway, China, Cloudian HyperStore, Dell EMC ECS, Fujitsu Storage ETERNUS CD10000, Google Cloud, Hitachi Content Platform for Cloud Scale, Huawei Object Storage, IBM Cloud Object Storage (S3-compatible), Inspur Cloud Object Storage, Iron Mountain Iron Cloud, Kingsoft Standard Storage Service, NetApp StorageGRID, Nutanix Objects, Quantum ActiveScale, S3 Compatible Storage, Scality RING, Telefonica Open Cloud Object Storage, Verizon Cloud Storage or Wasabi Hot Cloud Storage '
      properties:
        accessKeyId:
          description: Access Key ID of Credential. If updated the updated Access Key ID is considered else the existing Access Key ID is considered.
          type: string
        description:
          description: Updated description of Credential
          type: string
        newName:
          description: Updated name of credential
          type: string
        newSecretAccessKey:
          description: Secret Access Key of Credential and must be in base64 encoded format.
          type: string
        security:
          $ref: '#/components/schemas/UpdateCredentialSecurity'
      title: CloudCredentialContent
      type: object
    CloudCredentialContentWithAPIKey:
      description: 'Applicable only for credentials with Cloud Account and Vendor Type as IBM Cloud Object Storage, OpenStack Object Storage or Rackspace Cloud Files'
      properties:
        description:
          description: Updated description of Credential
          type: string
        newApiKey:
          description: Updated API Key of Credential and must be in base64 encoded format.
          type: string
        newName:
          description: Updated name of credential
          type: string
        security:
          $ref: '#/components/schemas/UpdateCredentialSecurity'
        userAccount:
          description: User account of Credential. If updated the updated user account is considered else the existing user account is considered.
          type: string
      title: CloudCredentialContentWithAPIKey
      type: object
    CloudCredentialContentWithTokenId:
      description: Applicable only for credentials with Cloud Account and Vendor Type as AT&T Synaptic Storage or EMC Atmos
      properties:
        description:
          description: Updated description of Credential
          type: string
        newName:
          description: Updated name of credential
          type: string
        newSharedSecret:
          description: Updated Shared secret of Credential and must be in base64 encoded format.
          type: string
        security:
          $ref: '#/components/schemas/UpdateCredentialSecurity'
        tokenId:
          description: Token ID of Credential. If updated the updated token Id is considered else the existing token Id is considered.
          type: string
      title: CloudCredentialContentWithTokenId
      type: object
    CloudCredentialInfo:
      allOf:
        - $ref: '#/components/schemas/CreateCredential'
        - properties:
            accessKeyId:
              description: Access Key ID of Credential
              type: string
            secretAccessKey:
              description: Secret Access Key of Credential and must be in base64 encoded format.
              type: string
          required:
            - accessKeyId
            - secretAccessKey
          type: object
        - $ref: '#/components/schemas/CommonCredentialInfo'
      description: 'Applicable only for credentials with Cloud Account and Vendor Type as Cloud Object Storage Service, Amazon Glacier, CCL Vault V2, Ceph Object Gateway, China, Cloudian HyperStore, Dell EMC ECS, Fujitsu Storage ETERNUS CD10000, Google Cloud, Hitachi Content Platform for Cloud Scale, Huawei Object Storage, IBM Cloud Object Storage (S3-compatible), Inspur Cloud Object Storage, Iron Mountain Iron Cloud, Kingsoft Standard Storage Service, NetApp StorageGRID, Nutanix Objects, Quantum ActiveScale, S3 Compatible Storage, Scality RING, Telefonica Open Cloud Object Storage, Verizon Cloud Storage or Wasabi Hot Cloud Storage '
      title: CloudCredentialInfo
    CloudCredentialInfoWithAPIKey:
      allOf:
        - $ref: '#/components/schemas/CreateCredential'
        - properties:
            apiKey:
              description: API Key of Credential and must be in base64 encoded format.
              type: string
            userAccount:
              description: User account of Credential
              type: string
          required:
            - userAccount
            - apiKey
          type: object
        - $ref: '#/components/schemas/CommonCredentialInfo'
      description: 'Applicable only for credentials with Cloud Account and Vendor Type as IBM Cloud Object Storage, OpenStack Object Storage or Rackspace Cloud Files'
      title: CloudCredentialInfoWithAPIKey
    CloudCredentialInfoWithTokenId:
      allOf:
        - $ref: '#/components/schemas/CreateCredential'
        - properties:
            sharedSecret:
              description: Shared secret of Credential and must be in base64 encoded format.
              type: string
            tokenId:
              description: Token ID of Credential
              type: string
          required:
            - tokenId
            - sharedSecret
          type: object
        - $ref: '#/components/schemas/CommonCredentialInfo'
      description: Applicable only for credentials with Cloud Account and Vendor Type as AT&T Synaptic Storage or EMC Atmos
      title: CloudCredentialInfoWithTokenId
    CloudNetwork:
      properties:
        label:
          description: Cloud network label
          type: string
        networkName:
          description: Cloud network name
          type: string
        subnetNames:
          description: Subnet names of cloud network
          items:
            type: string
          type: array
      title: CloudNetwork
      type: object
    CloudStorage:
      description: ''
      properties:
        mediaAgent:
          $ref: '#/components/schemas/IdName'
        name:
          description: Name of the cloud storage library
          type: string
      required:
        - name
        - cloudType
        - mediaAgent
      title: CloudStorage
      type: object
    CloudStorageAdvanced:
      properties:
        access:
          description: The access type for the cloud access path can be either read (writing to path not allowed) or read and write (writing to path allowed)
          enum:
            - Read
            - Read/Write
          type: string
        enable:
          description: Enable/Disable access of bucket to a media Agent
          type: boolean
      title: CloudStorageAdvanced
      type: object
    CloudStorageDetails:
      allOf:
        - $ref: '#/components/schemas/IdName'
        - properties:
            associatedPlans:
              items:
                $ref: '#/components/schemas/IdName'
              type: array
            bucket:
              items:
                $ref: '#/components/schemas/IdNameStatus'
              type: array
            cacheConfigurations:
              $ref: '#/components/schemas/CacheConfigurations'
            encryption:
              $ref: '#/components/schemas/Encryption'
            general:
              $ref: '#/components/schemas/CloudStorageGeneralInfo'
            security:
              items:
                $ref: '#/components/schemas/SecurityAssoc'
              type: array
          type: object
      description: ''
      title: Cloud Storage Details
    CloudStorageGeneralInfo:
      properties:
        deduplicationSavings:
          description: Specifies the savings in percentage that occurred due to deduplication. Only available for dedupe cloud storage pools
          type: string
        freeSpace:
          description: Free space available on this cloud storage
          format: int32
          type: integer
        sizeOnDisk:
          description: Amount of space consumed
          format: int32
          type: integer
        totalCapacity:
          description: Total capacity of this cloud storage
          format: int32
          type: integer
        type:
          description: Type of the cloud storage server
          type: string
        vendorType:
          description: Cloud server type
          type: string
      title: CloudStorageGeneralInfo
      type: object
    CloudStorageProxy:
      properties:
        password:
          description: Password for proxy configuration (Should be in Base64 format)
          format: password
          type: string
        port:
          description: Port for proxy configuration
          format: int32
          type: integer
        proxyAddress:
          description: 'If the MediaAgent accesses the mount path using a proxy then proxy server address needs to be provided. If you want to remove proxy information, pass empty string in proxyAddress.'
          type: string
        username:
          description: Username for proxy configuration
          type: string
      title: CloudStorageProxy
      type: object
    CloudStorageResp:
      allOf:
        - $ref: '#/components/schemas/IdName'
        - $ref: '#/components/schemas/GenericResp'
      title: CloudStorageResp
    CloudVendorType:
      description: Cloud vendor types appilcable only for Cloud Account type
      enum:
        - ALICLOUD_OSS
        - AMAZON_GLACIER
        - AMAZON
        - ATT_SYNAPTIC
        - REVERA_VAULT
        - CEPH_OBJECT_GATEWAY_S3
        - CMCC_ONEST
        - CLOUDIAN_HYPERSTORE
        - DELL_EMC_ECS_S3
        - EMC_ATMOS
        - FUJITSU_STORAGE_ETERNUS
        - GOOGLE_CLOUD
        - HDS_HCP
        - HITACHI_VANTARA_HCP_S3
        - HUAWEI_OSS
        - IBM_CLOUD
        - IBM_CLOUD_S3
        - INSPUR_CLOUD
        - IRON_MOUNTAIN_CLOUD
        - KINGSOFT_KS3
        - MICROSOFT_AZURE_TYPE
        - NETAPP_STORAGEGRID
        - NUTANIX_BUCKETS
        - OPENSTACK
        - AMPLIDATA
        - RACKSPACE_CLOUD_FILES
        - S3_COMPATIBLE
        - SALESFORCE_CONNECTED_APP
        - SCALITY_RING
        - TELEFONICA_OPEN_CLOUD_OBJECT_STORAGE
        - VERIZON_CLOUD
        - WASABI_HOT_CLOUD_STORAGE
      title: CloudVendorType
      type: string
    CloudianHyperStore:
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Cloudian HyperStore
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
          type: object
        - $ref: '#/components/schemas/DedupeStorageList'
      description: ''
      title: Cloudian HyperStore
    CloudianHyperStoreBucket:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Cloudian HyperStore
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
      description: ''
      title: Cloudian HyperStore
    CloudianHyperStoreBucketContent:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Cloudian HyperStore
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
      description: ''
      title: Cloudian HyperStore
    ClusterListResp:
      properties:
        clientActivityControl:
          $ref: '#/components/schemas/ActivityControlOptionsProp'
        clusterType:
          $ref: '#/components/schemas/VSVendor'
        displayName:
          description: This gives the name of the cluster as it shown on the admin console or GUI.
          type: string
        hostName:
          description: This give the host name of the cluster.
          type: string
        id:
          description: This gives the id of the cluster.
          format: int32
          type: integer
        instance:
          $ref: '#/components/schemas/IdName'
        name:
          description: This give the name of the cluster.
          type: string
        status:
          description: status of the cluster
          type: string
      type: object
    CommCellNameHostName:
      properties:
        hostName:
          description: CommServer host name
          type: string
        name:
          description: CommServer name
          type: string
      title: CommCellNameHostName
      type: object
    CommcellInfo:
      nullable: true
      properties:
        name:
          description: Name of the commcell the entity belongs to.
          type: string
      title: CommcellInfo
      type: object
    CommcellNameDisplayNameInfo:
      nullable: true
      properties:
        displayName:
          description: Display name of the commcell the entity belongs to.
          type: string
        name:
          description: Name of the commcell the entity belongs to.
          type: string
      title: CommcellNameDisplayNameInfo
      type: object
    CommonCredentialInfo:
      description: ''
      properties:
        description:
          description: Description of Credential
          type: string
        security:
          $ref: '#/components/schemas/CredentialSecurity'
          x-terraform-include: false
      title: CommonCredentialInfo
      type: object
    Company:
      description: Used to return details of a company whose companyId has been provided
      properties:
        contacts:
          items:
            $ref: '#/components/schemas/ContactResp'
          type: array
        creationTime:
          description: The date and time of the creation of the company.
          format: int32
          type: integer
        emailSettings:
          $ref: '#/components/schemas/EmailSettings'
        fileExceptions:
          $ref: '#/components/schemas/FileExceptions'
        general:
          $ref: '#/components/schemas/General'
        id:
          format: int32
          type: integer
        operatorsOperationType:
          format: int32
          type: integer
        plans:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        security:
          items:
            $ref: '#/components/schemas/SecurityAssoc'
          type: array
        sites:
          $ref: '#/components/schemas/Sites'
        tenantOperators:
          items:
            $ref: '#/components/schemas/TenantOperator'
          type: array
      type: object
    CompanyListResponse:
      description: List of existing companies
      properties:
        companies:
          items:
            $ref: '#/components/schemas/CompanySummary'
          type: array
        companyCount:
          description: Total number of companies
          format: int32
          type: integer
      type: object
    CompanyOperator:
      description: Details of the company operator
      properties:
        fullName:
          description: Full name of the operator
          type: string
        role:
          $ref: '#/components/schemas/IdName'
        user:
          $ref: '#/components/schemas/IdName'
        userGroup:
          $ref: '#/components/schemas/IdName'
      type: object
    CompanyStatus:
      properties:
        deactivate:
          description: Used to activate or deactivate the company.
          type: boolean
        options:
          $ref: '#/components/schemas/DeactivationOptions'
      type: object
    CompanySummary:
      properties:
        GUID:
          description: GUID of the company
          type: string
        alias:
          description: The company domain or NetBIOS name
          type: string
        associatedEntitiesCount:
          description: Gives the number of entities associated with the company
          format: int32
          type: integer
        commcell:
          $ref: '#/components/schemas/CommcellNameDisplayNameInfo'
        id:
          description: Company Id
          format: int32
          type: integer
        isReseller:
          description: 'Enable reseller mode. A reseller is a user or user groups who can operate multiple tenant environments. The service provider can assign one or more resellers as the tenant operator for a company. The reseller can switch to any of their assigned tenant environment and operate on the company as a tenant user. Once enabled, the reseller mode cannot be disabled.'
          type: boolean
        name:
          description: Company name
          type: string
        operators:
          description: List of operators configured for the company
          items:
            $ref: '#/components/schemas/CompanyOperator'
          type: array
        primaryContacts:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        status:
          description: Gives the company status
          enum:
            - UNKNOWN
            - ACTIVE
            - DEACTIVATED
            - DELETED
          type: string
        tags:
          $ref: '#/components/schemas/IdNameValue'
      type: object
    CompanyWithUserGroupAssocDetails:
      description: This object will hold company and selected user group for saml.
      properties:
        companyInfo:
          $ref: '#/components/schemas/IdName'
        userGroupInfo:
          $ref: '#/components/schemas/IdName'
      title: CompanyWithUserGroupAssocDetails
      type: object
    CompareXMLReq:
      description: This is the data model to compare two objects
      properties:
        NewXML:
          description: second xml object in string format
          type: string
        OldXML:
          description: first xml object in string format
          type: string
      title: CompareXmlRequestObjects
      type: object
    CompareXMLResp:
      description: This is the result of two objects comparision
      properties:
        result:
          description: difference details in json format
          type: string
      title: CompareXmlResponse
      type: object
    ConfigureSMTPServerReq:
      properties:
        SMTPPort:
          description: The port number that connects to the mail server.
          format: int32
          type: integer
        SMTPServerName:
          description: 'The name of the mail server that sends alerts, scheduled reports, log files, and additional information.'
          type: string
        encryptionAlgorithm:
          $ref: '#/components/schemas/SMTPServerEncryptionAlgorithm'
        password:
          description: 'Password must be in base64 encoded format. Similar to username, if authentication on the mail server is required, this option is required.'
          type: string
        senderEmail:
          description: The sender email address used for emails sent from the software.
          type: string
        senderName:
          description: The sender name used for emails sent from the software.
          type: string
        username:
          description: This option is used when authentication on the mail server is required
          type: string
      required:
        - SMTPServerName
        - SMTPPort
        - senderEmail
        - senderName
      title: ConfigureSMTPServerReq
      type: object
    ConsoleTypes:
      enum:
        - COMMANDCENTER
        - WEBCONSOLE
        - COMMCELLCONSOLE
        - API
        - MOBILE
      title: ConsoleTypes
      type: string
    ContactResp:
      properties:
        email:
          type: string
        fullname:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
    ContinuousReplicationGroup:
      description: Replication group details pertaining to a continuous replication group
      properties:
        recoveryOptions:
          $ref: '#/components/schemas/RecoveryOptions'
        replicationConfiguration:
          description: replication configuration of a continuous group
          items:
            $ref: '#/components/schemas/ReplicationConfigurationVMware'
          type: array
        summary:
          $ref: '#/components/schemas/ReplicationGroupSummary'
      required:
        - recoveryOptions
      title: ContinuousReplicationGroup
      type: object
    CreateArchivePlanBackupDestination:
      properties:
        backupDestinationName:
          description: Backup destination details. Enter the name during creation.
          type: string
        region:
          $ref: '#/components/schemas/IdName'
        retentionPeriodDays:
          description: Retention period in days. -1 can be specified for infinite retention.
          format: int32
          maximum: 9999
          minimum: 1
          type: integer
        sourceCopy:
          $ref: '#/components/schemas/IdName'
        storagePool:
          $ref: '#/components/schemas/IdName'
      required:
        - backupDestinationName
        - storagePool
      type: object
    CreateArchivePlanBackupDestinations:
      properties:
        destinations:
          description: List of backup destinations to create
          items:
            $ref: '#/components/schemas/CreateArchivePlanBackupDestination'
          nullable: true
          type: array
        region:
          $ref: '#/components/schemas/IdName'
      required:
        - destinations
      type: object
    CreateArray:
      description: Request body for creating Array
      properties:
        accessNodes:
          description: MAs that can access the array
          items:
            $ref: '#/components/schemas/ArrayAccessNodes'
          type: array
        general:
          $ref: '#/components/schemas/VendorDetails'
        snapConfigurations:
          description: Configurations related to a snap engine
          items:
            $ref: '#/components/schemas/ArrayConfigsBasic'
          type: array
      title: CreateArray
      type: object
    CreateAzureADClient:
      description: Request Message for Azure active directory app creation
      properties:
        azureApp:
          $ref: '#/components/schemas/Office365ConnectionsSettings'
        name:
          description: Unique Azure AD app name
          type: string
        serverPlan:
          $ref: '#/components/schemas/IdName'
      required:
        - name
        - serverPlan
        - azureApp
      title: CreateAzureADClient
      type: object
    CreateBackupLocation:
      description: 'If adding a network access path, Please add credentials or saved credentials. If both are provided, credentials will be taken into consideration.'
      properties:
        backupLocation:
          description: The mount path on the media agent where the data is to be backed up.
          type: string
        credentials:
          $ref: '#/components/schemas/UserNamePassword'
        mediaAgent:
          $ref: '#/components/schemas/IdName'
        savedCredentials:
          $ref: '#/components/schemas/IdName'
      required:
        - mediaAgent
        - backupLocation
      type: object
    CreateBlackoutWindow:
      description: betweenDates refers to the dates where the blackout window will be in effect. Dates have to be given in unix time format. time has to be provided in seconds. company refers to company to which the blackout window is associated.Id is given first preference if both are id and name are provided.
      properties:
        allDays:
          description: Days of the week along with the time on which the black out window will be in effect.
          items:
            $ref: '#/components/schemas/DaysAndTimes'
          type: array
        backupOperations:
          description: Refers to backup types to include in the blackout window
          items:
            enum:
              - FULL
              - INCREMENTAL_AND_DIFFERENTIAL
              - SYNTHETIC_FULL
              - TRANSACTION_LOG
              - ALL_OPERATIONS
            type: string
          type: array
        betweenDates:
          $ref: '#/components/schemas/StartEnd'
        company:
          $ref: '#/components/schemas/IdName'
        doNotSubmitJob:
          description: 'Allows or Denies submitting a job when the blackout window is in effect. If set to false, the job is submitted and resumed once the blackout window ends.'
          type: boolean
        name:
          description: Name of the blackout window to be created.
          type: string
        weeks:
          description: Refers to the weeks of the month that the blackout window will be in effect.
          items:
            $ref: '#/components/schemas/WeekOfMonth'
          type: array
      required:
        - name
      type: object
    CreateCDMPlan:
      properties:
        backupDestinations:
          description: Copy destinations for the plan. Specify where you want to store your data.
          items:
            $ref: '#/components/schemas/CreatePlanBackupDestination'
          type: array
        databaseOptions:
          $ref: '#/components/schemas/ServerPlanDatabaseOptions'
        planName:
          description: Name of the new plan
          type: string
        rpo:
          $ref: '#/components/schemas/ServerBackupPlanRPO'
        snapshotOptions:
          $ref: '#/components/schemas/CreatePlanSnapshotOptions'
      required:
        - planName
        - backupDestinations
      type: object
    CreateClusterResp:
      properties:
        clusterId:
          format: int32
          type: integer
        clusterName:
          description: Name of the cluster created
          type: string
        errorCode:
          default: 0
          format: int32
          type: integer
        errorMessage:
          description: Response message
          type: string
        etcdSubclientResponse:
          items:
            $ref: '#/components/schemas/CreateETCDSubclientResp'
          type: array
        warningCode:
          default: 0
          format: int32
          type: integer
        warningMessage:
          default: ''
          description: Response message
          type: string
      type: object
    CreateCompany:
      description: Used to create a new company
      properties:
        alias:
          description: The company domain or NetBIOS name
          type: string
        contactName:
          description: 'Name of the tenant administrator. If provided, email also needs to be provided.'
          type: string
        email:
          description: 'Email address for the tenant administrator. If provided, contactName for the tenant administrator also needs to be provided'
          type: string
        emailSuffix:
          description: Supported domains for the company
          type: string
        name:
          description: name of the company to be created.
          type: string
        plans:
          description: Select data protection plans to use for the company. The plans that are selected are the plans that the tenant administrator can choose from.
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        primaryDomain:
          description: The primary domain name of the company being created. Can be added only if an external domain is already present.
          type: string
        sendWelcomeEmail:
          description: send a welcome email on company creation to the tenant administrator.
          type: boolean
        serviceCommcells:
          description: 'Used to add service commcells to the master commcell. Either id or name can be provided. If both are provided, id will be taken into consideration.'
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      required:
        - name
        - alias
      type: object
    CreateCredential:
      description: To create a new Credential
      properties:
        accountType:
          $ref: '#/components/schemas/CredentialAccountType'
        name:
          description: Name of Credential
          type: string
        vendorType:
          $ref: '#/components/schemas/CloudVendorType'
      required:
        - accountType
        - name
      title: CreateCredential
      type: object
    CreateDiskStorage:
      properties:
        deduplicationDBStorage:
          description: A list of dedupe locations can be provided for the storage pool being created. This provides an efficient way to save/store data by eliminating duplicate blocks of data during backups.
          items:
            $ref: '#/components/schemas/DedupePath'
          type: array
        enableDeduplication:
          description: enables or disables deduplication
          type: boolean
        name:
          description: Name of the Disk Storage to be created.
          type: string
        storage:
          description: A list of backup locations can be provided for the storage pool being created.
          items:
            $ref: '#/components/schemas/Path'
          type: array
      required:
        - name
        - storage
        - enableDeduplication
      type: object
    CreateDynamics365Client:
      description: Request Message for Dynamics365 app creation
      properties:
        azureApp:
          $ref: '#/components/schemas/Dynamics365ConnectionsSettings'
        name:
          description: Unique Dynamics365 app name
          type: string
        serverPlan:
          $ref: '#/components/schemas/IdName'
      required:
        - name
        - serverPlan
        - azureApp
      title: CreateDynamics365Client
      type: object
    CreateETCDSubclientResp:
      properties:
        errorCode:
          default: 0
          format: int32
          type: integer
        errorMessage:
          default: ''
          description: Response message
          type: string
        subclientId:
          format: int32
          type: integer
      type: object
    CreateHypervisorGroupAliCloud:
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - description: Create a hypervisor group with Ali Baba as the destination vendor
          type: object
          properties:
            accessKey:
              description: Access key of alibaba cloud
              type: string
            hypervisorType:
              enum:
                - ALIBABA_CLOUD
              type: string
              x-terraform-constant: ALIBABA_CLOUD
              example: ALIBABA_CLOUD
            secretKey:
              description: secret key of alibaba cloud
              type: string
          required:
            - accessKey
            - hypervisorType
            - secretKey
    CreateExchangeClient:
      description: Request Message for exchange app creation
      properties:
        azureApp:
          $ref: '#/components/schemas/Office365ConnectionsSettings'
        name:
          description: Unique Exchange app name
          type: string
        serverPlan:
          $ref: '#/components/schemas/IdName'
      required:
        - name
        - serverPlan
        - azureApp
      title: CreateExchangeClient
      type: object
    CreateHypervisorGroupAmazon:
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - description: Create a hypervisor group with Amazon as the destination vendor
          properties:
            Region:
              description: AWS region if Iam role is used
              type: string
            RoleARN:
              description: Role ARN for STS assume role with IAM policy
              type: string
            accessKey:
              description: Access Key of Amazon login
              type: string
            hypervisorType:
              enum:
                - Amazon
              type: string
              x-terraform-constant: AMAZON
            secretKey:
              description: secret Key of Amazon login
              type: string
            useIamRole:
              description: if Iam Role is used
              type: boolean
            useServiceAccount:
              description: Clientname to be used as Admin Account
              type: string
          required:
            - hypervisorType
            - accessKey
            - secretKey
            - regionEndPoints
            - useIamRole
          type: object
      title: Amazon
    CreateHypervisorGroupAzure:
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - description: Create a hypervisor group with Azure as the destination vendor
          properties:
            ApplicationId:
              description: Application id of Azure login Application
              type: string
            ApplicationPassword:
              description: Application Password of Azure login Application
              type: string
            hypervisorType:
              enum:
                - Azure_V2
              type: string
              x-terraform-constant: AZURE_V2
            subscriptionId:
              description: 'subscription id of Azure '
              type: string
            tenantId:
              description: Tenant id of Azure login Application
              type: string
            workloadRegion:
              $ref: '#/components/schemas/IdName'
          required:
            - hypervisorType
            - tenantId
            - serverName
            - subscriptionId
            - userName
            - password
          type: object
      title: Azure
    CreateHypervisorGroupAzureStack:
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - description: Create a hypervisor group with Azure as the destination vendor
          properties:
            ApplicationId:
              description: Application id of Azure login Application
              type: string
            ApplicationPassword:
              description: Application Password of Azure login Application
              type: string
            hypervisorType:
              enum:
                - Azure_V2
              type: string
            resourceManagerURL:
              description: resource Manager URL for Azure Stack
              type: string
            subscriptionId:
              description: 'subscription id of Azure '
              type: string
            tenantId:
              description: Tenant id of Azure login Application
              type: string
          required:
            - hypervisorType
            - tenantId
            - serverName
            - subscriptionId
            - userName
            - password
          type: object
      title: AzureStack
    CreateHypervisorGroupDocker:
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - description: Create a hypervisor group with Docker as the destination vendor
          properties:
            hypervisorType:
              enum:
                - DOCKER
              type: string
              x-terraform-constant: DOCKER
            password:
              description: 'Docker password '
              type: string
            serverName:
              description: 'Docker hostname '
              type: string
            userName:
              description: 'Docker userName '
              type: string
          required:
            - hypervisorType
            - serverName
            - userName
            - password
          type: object
      title: Docker
    CreateHypervisorGroupGoogleCloud:
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - description: Create a hypervisor group with Google Cloud as the destination vendor
          properties:
            hypervisorType:
              enum:
                - GOOGLE_CLOUD
              type: string
              x-terraform-constant: GOOGLE_CLOUD
            serviceAccountId:
              description: service account id of google cloud
              type: string
            userName:
              description: username of GCP login Application
              type: string
          required:
            - hypervisorType
            - serviceAccountId
            - userName
          type: object
      title: GoogleCloud
    CreateHypervisorGroupHyperV:
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - description: Create a hypervisor group with VMWare as the destination vendor
          properties:
            hypervisorType:
              enum:
                - Hyper-V
              type: string
              x-terraform-constant: Hyper-V
            password:
              description: 'Hyper-V password '
              type: string
            serverName:
              description: 'Hyper-V hostname '
              type: string
            userName:
              description: 'Hyper-V userName '
              type: string
          required:
            - hypervisorType
            - serverName
            - userName
            - password
          type: object
      title: HyperV
    CreateHypervisorGroupNutanix:
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - description: Create a hypervisor group with Nutanix as the destination vendor
          properties:
            hostName:
              description: 'Nutanix hostname '
              type: string
            hypervisorType:
              enum:
                - NUTANIX
              type: string
            password:
              description: 'Nutanix password '
              type: string
            userName:
              description: 'Nutanix userName '
              type: string
          required:
            - hypervisorType
            - hostName
            - userName
            - password
          type: object
      title: Nutanix
    CreateHypervisorGroupOpenstack:
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - description: Create a hypervisor group with OpenStack as the destination vendor
          properties:
            hypervisorType:
              enum:
                - OPENSTACK
              type: string
              x-terraform-constant: OPENSTACK
            keynoteAddress:
              description: 'OpenStack KeyNote address '
              type: string
            openstackDomain:
              description: 'OpenStack Domain Name '
              type: string
            password:
              description: 'OpenStack password '
              type: string
            userName:
              description: 'OpenStack userName '
              type: string
          required:
            - hypervisorType
            - keynoteAddress
            - userName
            - password
          type: object
      title: Openstack
    CreateHypervisorGroupOracleCloud:
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - description: Create a hypervisor group with oracleCloud as the destination vendor
          properties:
            fingerPrint:
              description: Finger print for the private key
              type: string
            hypervisorType:
              enum: 
                - ORACLE_CLOUD_INFRASTRUCTURE
              type: string
              x-terraform-constant: ORACLE_CLOUD_INFRASTRUCTURE
            privateKeyFileName:
              description: File Name for the private key
              type: string
            privateKeyPassword:
              description: password for the private key.This is the passphrase that was used to encrypt the private key.
              type: string
            regionName:
              description: home region for the tenant
              type: string
            tenancyOCId:
              description: OCID for the tenant.
              type: string
            userOCId:
              description: OCID for the admin user for the hypervisor
              type: string
          required:
            - tenancyOCId
            - userOCId
            - fingerPrint
            - privateKeyFileName
            - regionName
          type: object
      title: OracleCloud
    CreateHypervisorGroupOracleVM:
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - description: Create a hypervisor group with Oracle VM as the destination vendor
          properties:
            hypervisorType:
              enum:
                - ORACLE_VM
              type: string
              x-terraform-constant: ORACLE_VM
            oracleVMManager:
              description: oracle VM Manager
              type: string
            password:
              description: password of the oracle VM info
              type: string
            userName:
              description: Username of the oracle VM info
              type: string
          required:
            - hypervisorType
            - oracleVMManager
            - userName
            - password
          type: object
    CreateHypervisorGroupProxmox:
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - description: Create a hypervisor group with Proxmox as the destination vendor
          properties:
            hostName:
              description: 'Proxmox hostname '
              type: string
            hypervisorType:
              enum:
                - PROXMOX
              type: string
            password:
              description: 'proxmox password '
              type: string
            userName:
              description: 'proxmox userName '
              type: string
          required:
            - hypervisorType
            - hostName
            - userName
            - password
          type: object
    CreateHypervisorGroupRedHatOpenShift:
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - description: Create a hypervisor group with openShift as the destination vendor
          properties:
            glusterHostCredentials:
              $ref: '#/components/schemas/RedHatOpenShiftGluster'
            hypervisorType:
              enum:
                - REDHAT_OPENSHIFT
              type: string
              x-terraform-constant: REDHAT_OPENSHIFT
            password:
              description: 'redHatOpenShift password '
              type: string
            serverName:
              description: 'redHatOpenShift hostname '
              type: string
            userName:
              description: 'redHatOpenShift userName '
              type: string
          required:
            - hypervisorType
            - glusterHostCredentials
            - userName
            - password
            - hostName
          type: object
    CreateHypervisorGroupReq:
      description: Create a hypervisor group
      properties:
        accessNodes:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        credentials:
          $ref: '#/components/schemas/IdName'
        etcdProtection:
          default: false
          description: Flag to create an application group etcd (system generated) with pre-defined content
          type: boolean
        name:
          description: The name of the hypervisor group being created
          type: string
        planEntity:
          $ref: '#/components/schemas/IdName'
        skipCredentialValidation:
          default: true
          description: if credential validation has to be skipped.
          type: boolean
      required:
        - accessNodes
        - name
        - hypervisorType
      type: object
      title: ''
    CreateHypervisorGroupRhev:
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - description: Create a hypervisor group with Rhev  as the destination vendor
          properties:
            RhevMManager:
              description: 'Rhev Manager '
              type: string
            hypervisorType:
              enum:
                - REDHAT
              type: string
              x-terraform-constant: REDHAT
            password:
              description: 'Rhev password '
              type: string
            userName:
              description: 'Rhev userName '
              type: string
          required:
            - hypervisorType
            - RhevMManager
            - userName
            - password
          type: object
      title: Rhev
    CreateHypervisorGroupVMWare:
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - description: Create a hypervisor group with VMWare as the destination vendor
          properties:
            hypervisorType:
              enum:
                - VMW
              type: string
              x-terraform-constant: VMW
            password:
              description: Vcenter password
              type: string
            userName:
              description: Vcenter username
              type: string
            vcenterHostName:
              description: Vcenter hostname
              type: string
          required:
            - hypervisorType
            - vcenterHostName
            - userName
            - password
          type: object
      title: VMWare
    CreateHypervisorGroupVCloud:
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - description: Create a hypervisor group with VMware Cloud Director as the destination vendor
          properties:
            autoCompany:
              description: indicates the mode for company association
              enum:
                - AUTO_CREATE_NEW
                - USE_EXISTING
                - DO_NOT_AUTO_CREATE
              type: string
            companyId:
              description: company id is required if use existing mode is selected for org client
              format: int32
              type: integer
            companyName:
              description: company name is required for org client
              type: string
            createOrgAccount:
              default: false
              description: True if organization account to be used
              type: boolean
            hostName:
              description: VMware Cloud Director hostname or organization guid if org client
              type: string
            hypervisorType:
              enum:
                - VCLOUD
              type: string
            password:
              description: VMware Cloud Director password
              type: string
            userName:
              description: VMware Cloud Director username
              type: string
            vCloudDirector:
              description: VMware Cloud Director Name
              type: string
            vOrganizationGuid:
              description: Organization Guid of VMware Cloud Director
              type: string
            vOrganizationName:
              description: Organization name of VMware Cloud Director
              type: string
          required:
            - hypervisorType
            - hostname
          type: object
      title: VCloud
    CreateHypervisorGroupXen:
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - description: Create a hypervisor group with Google Cloud as the destination vendor
          properties:
            hypervisorType:
              enum:
                - XEN_SERVER
              type: string
              x-terraform-constant: XEN_SERVER
            password:
              description: 'Xen password '
              type: string
            serverName:
              description: 'Xen hostname '
              type: string
            userName:
              description: 'Xen userName '
              type: string
          required:
            - hypervisorType
            - serverName
            - userName
            - password
          type: object
      title: Xen Hypervisor
    CreateHypervisorResp:
      properties:
        errorCode:
          default: 0
          format: int32
          type: integer
        errorMessage:
          description: Response message
          type: string
        hypervisorId:
          format: int32
          type: integer
          x-terraform-id: true
        warningCode:
          default: 0
          format: int32
          type: integer
        warningMessage:
          default: ''
          description: Response message
          type: string
      type: object
    CreateKubernetesCluster:
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - properties:
            endpointurl:
              description: Endpoint url to connect
              type: string
            hypervisorType:
              enum:
                - KUBERNETES
              type: string
            k8ServiceType:
              enum:
                - ONPREM
                - AZURE
              type: string
            password:
              description: Username to connect in case authentication mode is Username and password
              type: string
            secretKey:
              description: SecretKey to connect in case authentication mode is service account
              type: string
            serviceName:
              description: Service Name to connect in case authentication mode is service account
              type: string
            userName:
              description: Username to connect in case authentication mode is Username and password
              type: string
          type: object
      required:
        - hypervisorType
        - endpointurl
    CreateLaptopOwnerInfo:
      description: This is the data model for creating a laptop owner info
      properties:
        company:
          $ref: '#/components/schemas/IdName'
        host:
          description: Host name of the laptop
          type: string
        laptopName:
          description: Display name of the laptop
          type: string
        osType:
          description: Operating system of the owner
          type: string
        ownerEmail:
          description: Email address of the owner
          type: string
        ownerUPN:
          description: UPN of the owner
          type: string
        serialNumber:
          description: Serial number of the laptop
          type: string
      title: CreateLaptopOwnerInfo
      type: object
    CreateLaptopOwnerMapping:
      description: 'POST request for adding new laptop owner mapping, The mandotary fields are combination of multiple properties SerialNumber AND (host OR laptopName) AND (ownerEmail OR ownerUPN)'
      properties:
        laptopOwnerMapping:
          items:
            $ref: '#/components/schemas/CreateLaptopOwnerInfo'
          type: array
      title: CreateLaptopOwnerMapping
      type: object
    CreateMetadataCacheConfigurations:
      description: 'If adding a network access path, Please add credentials or saved credentials. If both are provided, credentials will be taken into consideration.'
      properties:
        credentials:
          $ref: '#/components/schemas/UserNamePassword'
        mediaAgent:
          $ref: '#/components/schemas/IdName'
        path:
          description: Metadata cache will be stored on this path
          type: string
        savedCredentials:
          $ref: '#/components/schemas/IdName'
      required:
        - mediaAgent
        - path
      title: CreateMetadataCacheConfigurations
      type: object
    CreateOnedriveClient:
      description: Request Message for onedrive app creation
      properties:
        azureApp:
          $ref: '#/components/schemas/Office365ConnectionsSettings'
        name:
          description: Unique Onedrive app name
          type: string
        serverPlan:
          $ref: '#/components/schemas/IdName'
      required:
        - name
        - serverPlan
        - azureApp
      title: CreateOnedriveClient
      type: object
    CreatePlanBackupDestination:
      properties:
        backupDestinationName:
          description: Backup destination details. Enter the name during creation.
          nullable: true
          type: string
        backupStartTime:
          description: Backup start time in seconds. The time is provided in unix time format.
          format: int32
          type: integer
        backupsToCopy:
          $ref: '#/components/schemas/PlanFullBackupType'
        extendedRetentionRules:
          $ref: '#/components/schemas/ExtendedRetentionRules'
        fullBackupTypesToCopy:
          $ref: '#/components/schemas/PlanFullBackupTypeToCopy'
        isMirrorCopy:
          description: Is this a mirror copy? Only considered when isSnapCopy is true.
          type: boolean
        isSnapCopy:
          description: 'Is this a snap copy? If isMirrorCopy is not set, then default is Vault/Replica.'
          type: boolean
        mappings:
          items:
            $ref: '#/components/schemas/SnapshotCopyMapping'
          type: array
        netAppCloudTarget:
          description: Only for snap copy. Enabling this changes SVM Mapping  to NetApp cloud targets only.
          type: boolean
        optimizeForInstantClone:
          description: Flag to specify if primary storage is copy data management enabled.
          type: boolean
        overrideRetentionSettings:
          description: Tells if this copy should use storage pool retention period days or the retention defined for this copy. Set as true to use retention defined on this copy.
          type: boolean
        region:
          $ref: '#/components/schemas/IdName'
        retentionPeriodDays:
          default: 30
          description: 'Retention period in days. -1 can be specified for infinite retention. If this and snapRecoveryPoints both are not specified, this takes  precedence.'
          format: int32
          maximum: 9999
          minimum: 1
          type: integer
        retentionRuleType:
          $ref: '#/components/schemas/RetentionRuleTypes'
        snapRecoveryPoints:
          description: Number of snap recovery points for snap copy for retention. Can be specified instead of retention period in Days for snap copy.
          format: int32
          minimum: 1
          type: integer
        sourceCopy:
          $ref: '#/components/schemas/IdName'
        storagePool:
          $ref: '#/components/schemas/IdName'
        storageType:
          $ref: '#/components/schemas/StorageType'
        useExtendedRetentionRules:
          description: Use extended retention rules
          type: boolean
      required:
        - backupDestinationName
        - storagePool
      type: object
    CreatePlanBackupDestinations:
      properties:
        destinations:
          description: List of backup destinations to create
          items:
            $ref: '#/components/schemas/CreatePlanBackupDestination'
          nullable: true
          type: array
        region:
          $ref: '#/components/schemas/IdName'
        snapshotOptions:
          $ref: '#/components/schemas/CreatePlanSnapshotOptions'
      required:
        - destinations
      type: object
    CreatePlanEntityRule:
      description: 'This object will send details to create new plan rule. User can provide all rule options or can specify a specific rule group. Be default, for rule to be applicable for association to a workload,  ALL specified rules in that Rule need to be matched.'
      properties:
        company:
          $ref: '#/components/schemas/IdName'
        plan:
          $ref: '#/components/schemas/IdName'
        rank:
          description: 'Optional field to suggest priority/rank of the rule. If not present, we will process rule in the same order they are created.'
          format: int32
          type: integer
        regions:
          description: This will include list of regions that should be evaluated against workload region for plan association.
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        serverGroups:
          description: This will include list of Server groups that should be evaluated against workload server group for plan association.
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        solutions:
          description: This will include list of solutions that should be evaluated against workload for plan association
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        tags:
          description: This will include list of tags that should be evaluated against workload for plan association
          items:
            $ref: '#/components/schemas/PlanEntityRuleTag'
          type: array
        workloads:
          description: This will include list of apptypes that should be evaluated against workload apptype for plan association.
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      required:
        - plan
      title: CreatePlanEntityRule
      type: object
    CreatePlanSnapshotOptions:
      description: This feature applies only to File System Agents
      properties:
        backupCopyRPOMins:
          default: 240
          description: Backup copy RPO in minutes
          format: int32
          type: integer
        enableBackupCopy:
          description: Flag to enable backup copy
          type: boolean
        retentionPeriodDays:
          default: 30
          description: 'Retention period in days. -1 can be specified for infinite retention. If this and snapRecoveryPoints both are not specified, this takes precedence.'
          format: int32
          type: integer
        snapRecoveryPoints:
          description: Number of snap recovery points for default snap copy for retention. Can be specified instead of retention period in Days for default snap copy.
          format: int32
          minimum: 1
          type: integer
      type: object
    CreateRegion:
      description: Details of the new region
      properties:
        locations:
          description: List of locations which are part of the region
          items:
            $ref: '#/components/schemas/LocationDetails'
          minItems: 1
          type: array
          uniqueItems: true
        name:
          description: Region name
          type: string
        type:
          default: USER_CREATED
          description: Type of the region
          enum:
            - USER_CREATED
            - AWS
            - AZURE
            - OCI
            - GCP
          type: string
      required:
        - name
        - locations
      title: CreateRegion
      type: object
    CreateReplicationGroup:
      description: SourceHypervisor is the hypervisor that has the VM's to be backed up. This should be already configured. Recovery target contains the replication options that will be applied to the selected VM's. This should be already configured. ID is mandatory for sourceHypervisor and recovery target. Provide both the id and the name for the storage and the vms.
      properties:
        frequencyInMinutes:
          default: 240
          description: The field denotes the frequency of replication.
          format: int32
          type: integer
        name:
          description: The name of the replication group being created
          type: string
        recoveryTarget:
          $ref: '#/components/schemas/IdName'
        sourceHypervisor:
          $ref: '#/components/schemas/IdName'
        storage:
          description: 'The primary and an optional secondary storage that will be used for storing the source VM data for replication. The secondary storage if provided, will be the default source for replication.'
          items:
            $ref: '#/components/schemas/StorageCopyCreate'
          type: array
        vms:
          description: A list of name and GUID of all the virtual machines that have to be replicated
          items:
            $ref: '#/components/schemas/NameGUID'
          type: array
      required:
        - name
        - sourceHypervisor
        - vms
        - recoveryTarget
        - storage
      type: object
    CreateReplicationGroupAmazon:
      allOf:
        - $ref: '#/components/schemas/CreateReplicationGroup'
        - description: Create a replication group with Amazon as the destination vendor. SourceHypervisor is the hypervisor that has the VM's to be backed up. Recovery target contains the replication options that will be applied to the selected VM's. ID is mandatory for sourceHypervisor and recovery target. Provide both the id and the name for the storage and the vms.
          properties:
            advancedOptions:
              $ref: '#/components/schemas/ReplicationGroupAdvOptionsAmazon'
            destVendor:
              enum:
                - Amazon
              type: string
            overrideReplicationOptions:
              description: 'The replication options per instance, if provided, will override the replication options from the target. For the instances not in this list, the options are applied from the target.'
              items:
                $ref: '#/components/schemas/OverrideReplicationOptionsAmazonCreate'
              type: array
          required:
            - destVendor
          type: object
      description: Create a Virtualization replication group with the destination as Amazon vendor.
    CreateReplicationGroupAzure:
      allOf:
        - $ref: '#/components/schemas/CreateReplicationGroup'
        - description: Create a replication group with Azure as the destination vendor. SourceHypervisor is the hypervisor that has the VM's to be backed up. Recovery target contains the replication options that will be applied to the selected VM's. ID is mandatory for sourceHypervisor and recovery target. Provide both the id and the name for the storage and the vms.
          properties:
            advancedOptions:
              $ref: '#/components/schemas/ReplicationGroupAdvOptionsAzure'
            destVendor:
              enum:
                - Azure
              type: string
            overrideReplicationOptions:
              description: 'The replication options per instance, if provided, will override the replication options from the target. For the instances not in this list, the options are applied from the target.'
              items:
                $ref: '#/components/schemas/OverrideReplicationOptionsAzureCreate'
              type: array
          required:
            - destVendor
          type: object
      description: Create a Virtualization replication group with the destination as Azure vendor.
    CreateReplicationGroupHyperV:
      allOf:
        - $ref: '#/components/schemas/CreateReplicationGroup'
        - description: Create a replication group with HyperV as the destination vendor. SourceHypervisor is the hypervisor that has the VM's to be backed up. Recovery target contains the replication options that will be applied to the selected VM's. ID is mandatory for sourceHypervisor and recovery target. Provide both the id and the name for the storage and the vms.
          properties:
            advancedOptions:
              $ref: '#/components/schemas/ReplicationGroupAdvOptionsHyperV'
            destVendor:
              enum:
                - HyperV
              type: string
            overrideReplicationOptions:
              description: 'The replication options per instance, if provided, will override the replication options from the target. For the instances not in this list, the options are applied from the target.'
              items:
                $ref: '#/components/schemas/OverrideReplicationOptionsHyperVCreate'
              type: array
          required:
            - destVendor
          type: object
      description: Create a Virtualization replication group with the destination as HyperV vendor
    CreateReplicationGroupVMWare:
      allOf:
        - $ref: '#/components/schemas/CreateReplicationGroup'
        - description: Create a replication group with VMWare as the destination vendor. SourceHypervisor is the hypervisor that has the VM's to be backed up. Recovery target contains the replication options that will be applied to the selected VM's. ID is mandatory for sourceHypervisor and recovery target. Provide both the id and the name for the storage and the vms.
          properties:
            advancedOptions:
              $ref: '#/components/schemas/ReplicationGroupAdvOptionsVMWareCreate'
            destVendor:
              enum:
                - VMware
              type: string
            overrideReplicationOptions:
              description: 'The replication options per instance, if provided, will override the replication options from the target. For the instances not in this list, the options are applied from the target.'
              items:
                $ref: '#/components/schemas/OverrideReplicationOptionsVMWareCreate'
              type: array
            recoveryOptions:
              $ref: '#/components/schemas/RecoveryOptionsCreate'
            replicationType:
              $ref: '#/components/schemas/ReplicationType'
            snapEngine:
              $ref: '#/components/schemas/IdName'
          required:
            - destVendor
          type: object
      description: Create a Virtualization replication group with the destination as VMWare vendor. Snapengine and advanced options are applicable only for Periodic replication type. Recovery options is applicable only for Continuous replication type. Only one storage is applicable Continuous replication type.
      x-examples:
        VMWare Continuous:
          destVendor: VMware
          name: string
          overrideReplicationOptions:
            - datastore: string
              destinationHost: string
              ipAddressSettings:
                - destinationAlternateDNS: string
                  destinationAlternateWINS: string
                  destinationIP: string
                  destinationPreferredDNS: string
                  destinationPreferredWINS: string
                  destinationSubnetMask: string
                  destinationdefaultGateway: string
                  hostname: string
                  sourceDefaultGateway: string
                  sourceIP: string
                  sourceSubnetMask: string
                  useDhcp: false
              networkSettings:
                - destination: string
                  source: string
              resourcePool: string
              sourceVM:
                GUID: string
                name: string
              vmDisplayName: string
              vmFolder: string
          recoveryOptions:
            recoveryPointInterval:
              applicationConsistentRpInterval: 0
              crashConsistentRpInterval: 300
            recoveryPointRetention:
              mergeRecoveryPoints: true
              mergeRecoveryPointsOlderThan: 172800
              pruneAndMergeDuringOffPeak: false
              recoveryPointIntervalAtEndofRetention: 21600
              retainRecoveryPointsFor: 604800
              rpStoreOfflineFor: 0
            recoveryPointStore:
              id: 0
              name: string
            recoveryType: POINT_IN_TIME_RECOVERY
          recoveryTarget:
            id: 0
            name: string
          replicationType: Continuous
          sourceHypervisor:
            id: 0
            name: string
          storage:
            - isDedupe: true
              storagePool:
                id: 0
                name: string
          vms:
            - GUID: string
              name: string
        VMWare Periodic:
          advancedOptions:
            SnapshotsToRetain: 0
            diskProvisioning: ORIGINAL
            transportMode: AUTO
            unconditionalOverwrite: false
            validateDestinationVM: true
          destVendor: VMware
          frequencyInMinutes: 240
          name: string
          overrideReplicationOptions:
            - datastore: string
              destinationHost: string
              ipAddressSettings:
                - destinationAlternateDNS: string
                  destinationAlternateWINS: string
                  destinationIP: string
                  destinationPreferredDNS: string
                  destinationPreferredWINS: string
                  destinationSubnetMask: string
                  destinationdefaultGateway: string
                  hostname: string
                  sourceDefaultGateway: string
                  sourceIP: string
                  sourceSubnetMask: string
                  useDhcp: false
              networkSettings:
                - destination: string
                  source: string
              resourcePool: string
              sourceVM:
                GUID: string
                name: string
              vmDisplayName: string
              vmFolder: string
          recoveryTarget:
            id: 0
            name: string
          replicationType: Periodic
          snapEngine:
            id: 0
            name: string
          sourceHypervisor:
            id: 0
            name: string
          storage:
            - isDedupe: true
              storagePool:
                id: 0
                name: string
          vms:
            - GUID: string
              name: string
    CreateRole:
      description: Create a new role.
      properties:
        enabled:
          description: 'Used to determine if the role is enabled or disabled. If not provided, role will be enabled by default.'
          type: boolean
        name:
          description: Name of the new role
          type: string
        permissionList:
          description: Used to provide the list of permissions associated with the role.
          items:
            $ref: '#/components/schemas/Permissions'
          type: array
        visibleToAll:
          description: 'Determines if the role is visible to everyone. if not provided, it will be set to false by default.'
          type: boolean
      required:
        - name
        - permissionList
      type: object
    CreateServerGroup:
      description: 'Create a new server group, operation supported for three ServerGroupTypes MANUAL, AUTOMATIC, VIRTUAL_MACHINE'
      properties:
        automaticAssociation:
          $ref: '#/components/schemas/AutomaticServerGroupAssociationDetails'
        description:
          type: string
        manualAssociation:
          $ref: '#/components/schemas/ManualServerGroupAssociationDetails'
        name:
          type: string
        serverGroupType:
          $ref: '#/components/schemas/ServerGroupType'
        virtualAssociation:
          $ref: '#/components/schemas/VirtualServerGroupAssociationDetails'
      type: object
    CreateServerGroupPreviewResp:
      description: List of servers affected by create server group operation
      properties:
        servers:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      type: object
    CreateServerGroupResp:
      properties:
        serverGroupInfo:
          $ref: '#/components/schemas/IdName'
      type: object
    CreateServerPlan:
      properties:
        additionalProperties:
          $ref: '#/components/schemas/PlanAdditionalProperties'
        allowPlanOverride:
          description: Flag to enable overriding of plan. Plan cannot be overriden by default.
          type: boolean
        backupContent:
          $ref: '#/components/schemas/PlanContent'
        backupDestinations:
          description: Backup destinations for the plan. Specify where you want to store your backup data.
          items:
            $ref: '#/components/schemas/CreatePlanBackupDestination'
          type: array
        databaseOptions:
          $ref: '#/components/schemas/ServerPlanDatabaseOptions'
        filesystemAddon:
          description: flag to enable backup content association for applicable file system workload.
          type: boolean
        overrideRestrictions:
          $ref: '#/components/schemas/PlanOverrideSettings'
        parentPlan:
          $ref: '#/components/schemas/IdName'
        planName:
          description: Name of the new plan
          type: string
        rpo:
          $ref: '#/components/schemas/ServerBackupPlanRPO'
        settings:
          $ref: '#/components/schemas/ServerPlanSettings'
        snapshotOptions:
          $ref: '#/components/schemas/CreatePlanSnapshotOptions'
        workload:
          $ref: '#/components/schemas/PlanWorkloads'
      required:
        - planName
        - backupDestinations
      type: object
    CreateServerPlanBackupContent:
      properties:
        backupContent:
          $ref: '#/components/schemas/PlanContent'
      required:
        - rpo
      type: object
    CreateServerPlanBackupContentResponse:
      properties:
        backupContent:
          $ref: '#/components/schemas/PlanContent'
        error:
          $ref: '#/components/schemas/GenericResp'
      type: object
    CreateServerPlanRPO:
      properties:
        databaseOptions:
          $ref: '#/components/schemas/ServerPlanDatabaseOptions'
        rpo:
          $ref: '#/components/schemas/ServerBackupPlanRPO'
      required:
        - rpo
      type: object
    CreateServerPlanRPOResponse:
      properties:
        error:
          $ref: '#/components/schemas/GenericResp'
        rpo:
          $ref: '#/components/schemas/ServerBackupPlanRPO'
      type: object
    CreateSharepointClient:
      description: Request Message for sharepoint app creation
      properties:
        azureApp:
          $ref: '#/components/schemas/Office365ConnectionsSettings'
        name:
          description: Unique Sharepoint app name
          type: string
        serverPlan:
          $ref: '#/components/schemas/IdName'
        tenantAdminSiteURL:
          description: SharePoint Online tenant admin site URL
          type: string
      required:
        - name
        - serverPlan
        - tenantAdminSiteURL
        - azureApp
      title: CreateSharepointClient
      type: object
    CreateTaskRespforBackup:
      description: Create task response for backup
      properties:
        jobIds:
          description: JobIds for the immediate run request
          items:
            type: string
          type: array
        taskId:
          format: int32
          type: integer
      type: object
    CreateTeamsClient:
      description: Request Message for teams app creation
      properties:
        azureApp:
          $ref: '#/components/schemas/TeamsConnectionsSettings'
        name:
          description: Unique Teams app name
          type: string
        serverPlan:
          $ref: '#/components/schemas/IdName'
      required:
        - name
        - serverPlan
        - azureApp
      title: CreateTeamsClient
      type: object
    CreateUser:
      properties:
        company:
          $ref: '#/components/schemas/IdName'
        email:
          description: Used to provide an email-id to the new user. This email-id is used for logging in the user. Please note that email ids are compulsory for company and local users and optional for external users.
          type: string
        externalProviderId:
          description: Please provide this entity only when creating an AD user. Not needed for local and company users.
          format: int32
          type: integer
          x-terraform-include: false
        fullName:
          description: Used to provide a name to the new user.
          type: string
        inviteUser:
          description: User will receive an email to install backup software package on their device if this is set to true.
          type: boolean
        name:
          description: 'Used to provide the new user with a username. This username can be used for logging in the user instead of email-id when duplicate email-ids are present. For external user, it is necessary to provide the domain name along with the username (domainName\\username). To create a company user, the company id or name needs to be provided in the company entity.'
          type: string
        password:
          description: Used to provide a password to the user being created. This will be accepted when the useSystemGeneratePassword tag is false. The password has to be provided in Base64 format.
          type: string
          x-terraform-sensitive: true
        plan:
          $ref: '#/components/schemas/IdName'
          x-terraform-computed: false
        useSystemGeneratePassword:
          description: 'Choose to provide a system generated password to the user instead of providing your own password. An email will be sent to the user to reset the password. If it is set to true, password tag need not be provided. If it is set to false, password needs to be provided in the password tag in Base64 format.'
          type: boolean
        userGroups:
          description: Provide a list of userGroups that the user should be a part of. Either id or name or both can be provided.
          items:
            $ref: '#/components/schemas/IdName'
          type: array
          x-terraform-include: false
      required:
        - email
      type: object
    CreateUserGroup:
      properties:
        description:
          type: string
        enforceFSQuota:
          description: Used to determine if a backup data limit will be set for the user group being created
          type: boolean
        localUserGroups:
          description: This option is for AD user groups being created. Local user groups can be added to the active directory user groups.
          items:
            $ref: '#/components/schemas/IdName'
          type: array
          x-terraform-include: false
        name:
          description: 'To create an active directory usergroup, the domain name should be mentioned along with the usergroup name (domainName\\usergroupName) and localUserGroup value must be given.'
          type: string
        quotaLimitInGB:
          description: 'if enforceFSQuota is set to true, the quota limit can be set in GBs'
          format: int32
          type: integer
      required:
        - name
      type: object
    CreateUserResp:
      properties:
        users:
          items:
            $ref: '#/components/schemas/IdNameGUID'
          type: array
          x-terraform-id: Id
      type: object
    CreateUsers:
      description: Used to create single or multiple users.
      properties:
        users:
          items:
            $ref: '#/components/schemas/CreateUser'
          type: array
          x-terraform-flatten: true
      required:
        - users
      type: object
    CreateVMGroupResp:
      properties:
        errorCode:
          default: 0
          format: int32
          type: integer
        errorMessage:
          description: Response message
          type: string
        subclientId:
          format: int32
          type: integer
          x-terraform-id: true
        warningCode:
          default: 0
          format: int32
          type: integer
        warningMessage:
          default: ''
          description: Response message
          type: string
      type: object
    CreatevmGroupReq:
      description: ''
      properties:
        Hypervisor:
          $ref: '#/components/schemas/IdName'
        Meditech:
          $ref: '#/components/schemas/meditechPropResp'
        content:
          $ref: '#/components/schemas/vmContent'
        enableIntellisnap:
          default: false
          description: True if Intellisnap has to be  enabled
          type: boolean
        name:
          description: 'subclient name '
          type: string
        plan:
          $ref: '#/components/schemas/IdName'
        storage:
          $ref: '#/components/schemas/IdName'
      required:
        - name
        - Hypervisor
        - vmContent
      title: CreatevmGroupReq
      type: object
    CredentialAccountType:
      description: ''
      enum:
        - WINDOWSACCOUNT
        - LINUXACCOUNT
        - STORAGE_ARRAY_ACCOUNT
        - CLOUD_ACCOUNT
      title: CredentialAccountType
      type: string
    CredentialContent:
      description: 'Applicable for Credentials with Linux Account, Windows Account, Storage Array Account or Cloud Account with Vendor Type as Hitachi Content Platform. '
      properties:
        description:
          description: Updated description of Credential
          type: string
        newName:
          description: Updated name of credential
          type: string
          x-terraform-mapping: name
        newPassword:
          description: Updated password of credential. The password has to be provided in Base64 format.
          type: string
          x-terraform-mapping: password
        security:
          $ref: '#/components/schemas/UpdateCredentialSecurity'
          x-terraform-include: false
        userAccount:
          description: User account of Credential. If updated the updated user account is considered else the existing user account is considered.
          type: string
      title: CredentialContent
      type: object
    CredentialInfo:
      allOf:
        - $ref: '#/components/schemas/CreateCredential'
        - properties:
            password:
              description: Password of Credential. Password must be in base64 encoded format.
              type: string
            userAccount:
              description: User account of Credential
              type: string
          required:
            - userAccount
            - password
          type: object
        - $ref: '#/components/schemas/CommonCredentialInfo'
      description: 'Applicable for Credentials with Linux Account, Windows Account, Storage Array Account or Cloud Account with Vendor Type as Hitachi Content Platform '
      title: CredentialInfo
    CredentialManagerListResp:
      properties:
        credentialManager:
          items:
            $ref: '#/components/schemas/CredentialSummary'
          type: array
      title: CredentialManagerListResp
      type: object
    CredentialOwner:
      description: Owner of a credential can be a user or user group
      properties:
        user:
          $ref: '#/components/schemas/IdName'
        userGroup:
          $ref: '#/components/schemas/IdName'
      title: CredentialOwner
      type: object
    CredentialSecurity:
      description: Security association of a list of users and user groups
      properties:
        associations:
          items:
            $ref: '#/components/schemas/CredentialSecurityAssociations'
          type: array
        owner:
          $ref: '#/components/schemas/CredentialOwner'
      required:
        - owner
      title: CredentialSecurity
      type: object
    CredentialSecurityAssociations:
      description: Reference to a user and user group
      properties:
        isCreatorAssociation:
          description: To check if the user/user group associated is the owner.
          type: boolean
        permissions:
          $ref: '#/components/schemas/PermissionResp'
        user:
          $ref: '#/components/schemas/IdName'
        userGroup:
          $ref: '#/components/schemas/IdName'
      title: CredentialSecurityAssociations
      type: object
    CredentialSummary:
      description: Summary of a credential
      properties:
        accountType:
          $ref: '#/components/schemas/CredentialAccountType'
        authType:
          description: Aunthentication type applicable only for Cloud Accounts with Amazon Web Services or Microsoft Azure as vendor.
          enum:
            - AMAZON_S3
            - AMAZON_STS_IAM_ROLE
            - MICROSOFT_AZURE
            - AZUREACCOUNT
          type: string
        commcell:
          $ref: '#/components/schemas/IdName'
        company:
          $ref: '#/components/schemas/IdName'
        description:
          description: Description of Credential
          type: string
        id:
          description: Id of Credential
          format: int32
          type: integer
        name:
          description: Name of Credential
          type: string
        vendorType:
          $ref: '#/components/schemas/CloudVendorType'
      title: CredentialSummary
      type: object
    Credentials:
      description: Credentials for source client and destination client
      properties:
        destinationCredentials:
          $ref: '#/components/schemas/IdName'
        sourceCredentials:
          $ref: '#/components/schemas/IdName'
      title: Credentials
      type: object
    DROperation:
      description: The names of DR operations
      enum:
        - PlannedFailover
        - UnplannedFailover
        - Failback
        - RevertFailover
        - UndoFailover
        - TestBoot
        - PITFailover
        - ReverseReplication
        - CleanupDestinationVM
        - TestFailover
        - UndoTestFailover
      type: string
    DROperationScript:
      description: DR operation scripting information
      properties:
        guestCredentials:
          $ref: '#/components/schemas/guestCredentialInfo'
        path:
          description: The path of the script to be executed. Can be local path on VM or UNC path accessible by access node
          type: string
        reset:
          description: 'On set to true, resets the script to empty'
          type: boolean
        scriptCredentials:
          $ref: '#/components/schemas/guestCredentialInfo'
        type:
          $ref: '#/components/schemas/DROperationScriptPathType'
      type: object
    DROperationScriptPathType:
      description: The type of path being used for DR operation script
      enum:
        - UNC
        - LOCAL
      type: string
    DataSourceType:
      enum:
        - NONE
        - JDBC
        - WEB
        - EXE
        - CSV
        - FILE
        - NAS
        - ELOQUA
        - SALESFORCE
        - LDAP
        - FEDERATED
        - BLANK
        - HTTP
        - CAMEL
        - FACEBOOK
        - FLA
        - EDGE
        - EXCHANGE
        - REVIEWSET
        - TWITTER
        - COMPLIANCEAUDIT
        - FSINDEX
        - NFS
        - CLOUDORACLE
        - SYSTEMDEFAULT
        - DOWNLOADCENTERAUDIT
        - VM
        - ONEDRIVE
        - SHAREPOINT
        - EMAIL
        - DBANALYSIS
        - CLOUDPAAS
        - GOOGLEDRIVE
        - GMAIL
        - ACTIVEDIRECTORY
        - ONEDRIVEINDEX
        - MULTINODEFEDERATED
        - DYNAMIC365
        - IDXLOGS
        - TEAMS
        - CLOUDSTORAGE
      title: DataSourceType
      type: string
      x-stoplight:
        id: 5rxx51vvj3h2q
    DatabaseEngine:
      description: 'Name of database engine which is the underlying software component that a database management system uses to create, read, update and delete data from the database.'
      enum:
        - AURORA_MYSQL
        - DB2
        - DB2_MULTINODE
        - DOCUMENT_DB
        - DYNAMO_DB
        - INFORMIX
        - MARIA_DB
        - MYSQL
        - ORACLE
        - ORACLE_RAC
        - POSTGRESQL
        - RDS
        - REDSHIFT
        - SAP_FOR_ORACLE
        - SAP_HANA
        - SQL_SERVER
        - SYBASE
      type: string
    DatabaseListResp:
      properties:
        databases:
          description: List of databases
          items:
            $ref: '#/components/schemas/DatabaseSummary'
          type: array
      type: object
    DatabaseSummary:
      description: Returns the database summary.
      properties:
        SLAStatus:
          description: SLA status for last backup of database
          enum:
            - MET
            - MISSED
            - EXCLUDED
          type: string
        applicationId:
          description: Application Id of database
          format: int32
          type: integer
        commcell:
          $ref: '#/components/schemas/CommcellInfo'
        company:
          $ref: '#/components/schemas/IdName'
        databaseEngine:
          $ref: '#/components/schemas/DatabaseEngine'
        instance:
          $ref: '#/components/schemas/IdName'
        lastBackupSize:
          description: Size of last backup of database in bytes
          format: int32
          type: integer
        lastBackupTime:
          description: Time of last backup of database. It is given in UNIX time.
          format: int32
          type: integer
        name:
          description: This gives the name of the database.
          type: string
        plan:
          $ref: '#/components/schemas/IdName'
        recoveryModel:
          description: 'SQL recovery model is a database configuration option that determines the type of backup that one could perform, and provides the ability to restore the data or recover it from a failure.'
          enum:
            - FULL
            - SIMPLE
          type: string
        server:
          $ref: '#/components/schemas/IdName'
        vendor:
          $ref: '#/components/schemas/Vendors'
      type: object
    DatasourceJobHistory:
      properties:
        jobs:
          items:
            $ref: '#/components/schemas/DatasourceJobSummary'
          type: array
      title: DatasourceJobHistory
      type: object
    DatasourceJobSummary:
      properties:
        endTime:
          format: int32
          minimum: 0
          type: integer
        numAdded:
          format: int64
          minimum: 0
          type: integer
        numFailed:
          format: int64
          minimum: 0
          type: integer
        startTime:
          format: int32
          minimum: 0
          type: integer
        status:
          $ref: '#/components/schemas/DcubeJobState'
        totalCount:
          format: int64
          minimum: 0
          type: integer
      title: DatasourceJobSummary
      type: object
    DatastoreInventoryResponse:
      description: Inventory response of hypervisor for datastore entity
      properties:
        dataCenterName:
          description: dataCenter Name of the datastore.
          type: string
        dataStore:
          items:
            $ref: '#/components/schemas/dataStoreentityResponse'
          type: array
        dnsHostName:
          description: dns Hostname  of the datastore.
          type: string
        esxServerName:
          description: esx server name  of the datastore.
          type: string
      type: object
    DatastoreInventoryResponseList:
      description: To display the list of Inventory response of Datastore
      properties:
        hostInfo:
          items:
            $ref: '#/components/schemas/DatastoreInventoryResponse'
          type: array
      title: DatastoreInventoryResponseList
      type: object
    DayAndTime:
      properties:
        dayOfWeek:
          items:
            $ref: '#/components/schemas/DayOfTheWeek'
          nullable: true
          type: array
        endTime:
          description: Time in seconds since the beginning of the day
          format: int64
          type: integer
        startTime:
          description: Time in seconds since the beginning of the day
          format: int64
          type: integer
      type: object
    DayOfTheWeek:
      description: Specific day of the week
      enum:
        - SUNDAY
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
      format: ''
      type: string
    DayOfWeek:
      enum:
        - SUNDAY
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
        - DAY
        - WEEKDAY
        - WEEKEND_DAYS
      format: ''
      type: string
    DaysAndTimes:
      description: Days of the week along with the time on which the black out window will be in effect
      properties:
        days:
          description: Days of the week when the blackout window will be in effect.
          items:
            $ref: '#/components/schemas/DayOfTheWeek'
          type: array
        time:
          $ref: '#/components/schemas/StartEnd'
      type: object
    DcubeJobState:
      enum:
        - IDLE
        - STARTING
        - RUNNING
        - FINISHING
        - FINISHED
        - STOPPING
        - STOPPED
        - ABORTING
        - ABORTED
        - EXCEPTION
        - UNKNOWN
        - SYNCING
        - PENDING
        - COMPLETED_WITH_ERRORS
      title: DcubeJobState
      type: string
    DeactivationOptions:
      properties:
        disableBackup:
          description: Enable or disable backup. This option can only be set or unset for a deactivated company.
          type: boolean
        disableLogin:
          description: Enable or disable login. This option can only be set or unset for a deactivated company.
          type: boolean
        disableRestore:
          description: Enable or disable restore. This option can only be set or unset for a deactivated company.
          type: boolean
      type: object
    DedupePath:
      properties:
        mediaAgent:
          $ref: '#/components/schemas/IdName'
        path:
          type: string
      type: object
    DedupeStorageList:
      description: A list of dedupe locations can be provided for the storage pool being created. This provides an efficient way to save/store data by eliminating duplicate blocks of data during backups
      properties:
        deduplicationDBLocation:
          description: A list of dedupe locations can be provided for the storage pool being created. This provides an efficient way to save/store data by eliminating duplicate blocks of data during backups
          items:
            $ref: '#/components/schemas/DedupePath'
          type: array
        useDeduplication:
          default: false
          description: Enables or disables deduplication on the storage
          type: boolean
      title: Dedupe Storage List
      type: object
    DefaultPlan:
      description: Refers to default data protection plans to use for the company. There can be a default plan for each subtype.
      properties:
        id:
          description: 'Id of the default plan. Either id or name can be provided. If both id and name are provided, id is given first preference.'
          format: int32
          type: integer
        name:
          description: 'Name of the default plan. Either id or name can be provided. If both id and name are provided, id is given first preference.'
          type: string
        subtype:
          $ref: '#/components/schemas/SubTypes'
      type: object
    DeleteLaptopOwnerMapping:
      description: This model accepts the list of laptop owner mapping to be deleted
      properties:
        laptopOwnerMapping:
          description: Accepts list of laptop owner mapping ids to be deleted
          items:
            format: int32
            type: integer
          type: array
      required:
        - laptopOwnerMapping
      title: DeleteLaptopOwnerMapping
      type: object
    DeleteMultipleUserGroups:
      properties:
        userGroups:
          description: 'List of userGroups that have to be deleted. Either name or id can be provided. If name and id are both provided, id will be taken into consideration.'
          items:
            $ref: '#/components/schemas/DeleteUserGroups'
          type: array
      type: object
    DeleteMultipleUsers:
      description: Used to delete multiple users and carry out property transfership of deleted users
      properties:
        users:
          items:
            $ref: '#/components/schemas/DeleteUsers'
          type: array
      type: object
    DeleteSnapReq:
      description: Request template of delete snapshots
      properties:
        volumes:
          description: Volumes of the snaps you want to delete
          items:
            $ref: '#/components/schemas/VolumeSnap'
          type: array
      title: DeleteSnapReq
      type: object
    DeleteUserGroups:
      properties:
        newUser:
          $ref: '#/components/schemas/IdName'
        newUserGroup:
          $ref: '#/components/schemas/IdName'
        skipOwnerTransfer:
          type: boolean
        userGroup:
          $ref: '#/components/schemas/IdName'
      type: object
    DeleteUsers:
      properties:
        newUser:
          $ref: '#/components/schemas/IdName'
        newUserGroup:
          $ref: '#/components/schemas/IdName'
        skipOwnerTransfer:
          type: boolean
        user:
          $ref: '#/components/schemas/IdName'
      type: object
    DellEMC:
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Dell EMC ECS (S3-compatible)
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
          type: object
        - $ref: '#/components/schemas/DedupeStorageList'
      description: ''
      title: Dell EMC ECS (S3-compatible)
    DellEMCBucket:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Dell EMC ECS (S3-compatible)
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
      description: ''
      title: Dell EMC ECS (S3-compatible)
    DellEMCBucketContent:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Dell EMC ECS (S3-compatible)
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
      description: ''
      title: Dell EMC ECS (S3-compatible)
    DestinationMount:
      description: Model for destination clients id and path during Snap operations
      properties:
        id:
          description: Id of the MA where the Snap is mounted
          format: int32
          type: integer
        path:
          description: Path where the snap is mounted
          type: string
      title: DestinationMount
      type: object
    DestinationOptions:
      properties:
        dataStore:
          description: 'Datastore for the destination VM to store the disks and its config files. In-case of Microsoft Hyper-V, datastore refers to the destination folder for restore when default folder is not set.'
          type: string
        destinationHost:
          description: Destination host for the VM to deploy
          type: string
        iamRole:
          $ref: '#/components/schemas/IdName'
        resourcePoolPath:
          description: Resource pool for the destination VM
          type: string
        vmFolder:
          description: 'Folder path where the destination VM will be located,'
          type: string
      title: DestinationOptions
      type: object
    DestinationVendor:
      description: Vendor used as destination for replication.
      enum:
        - Amazon
        - Azure
        - HyperV
        - VMware
      type: string
    DiskStorage:
      properties:
        associatedPlanList:
          description: Provides the list of plans associated with the storage pool.
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        backupLocations:
          description: Gives backup location/mount path details for the storage pool.
          items:
            $ref: '#/components/schemas/IdNameStatus'
          type: array
        encryption:
          $ref: '#/components/schemas/Encryption'
        general:
          $ref: '#/components/schemas/DiskStorageGeneralInfo'
        id:
          description: Id of the Disk Storage Pool
          format: int32
          type: integer
        name:
          description: Name of the Disk Storage Pool
          type: string
        security:
          $ref: '#/components/schemas/SecurityAssoc'
      type: object
    DiskStorageGeneralInfo:
      properties:
        capacity:
          description: specifies the capacity of the storage pool
          format: int32
          type: integer
        dedupeSavingsPercent:
          description: specifies the savings that occurred due to deduplication. Only available for dedupe storage pools.
          format: int32
          type: integer
        freeSpace:
          description: specifies the available space on the storage pool
          format: int32
          type: integer
        sizeOnDisk:
          description: Size on disk refers to the actual amount of space being taken by the storage pool on the disk.
          format: int32
          type: integer
      type: object
    DistributedStorageListResp:
      description: List of distributed storages
      properties:
        distributedStorage:
          description: List of distributed storages
          items:
            $ref: '#/components/schemas/DistributedStorageSummary'
          type: array
      type: object
    DistributedStorageSummary:
      description: Summary of a distributed storage
      properties:
        canManage:
          description: Denotes if the user can manage the cluster
          type: boolean
        clusterURL:
          description: URL of the distributed storage cluster
          format: uri
          type: string
        id:
          format: int32
          type: integer
        name:
          type: string
        username:
          description: Username of the distributed storage user
          type: string
      type: object
    DistributedSystemComponent:
      properties:
        applicationId:
          description: Application id of the distributed system component
          format: int32
          type: integer
      type: object
    DistributedSystemSummary:
      description: This returns the distributed system summary.
      properties:
        components:
          description: Provides a list of components of a distributed system.
          items:
            $ref: '#/components/schemas/DistributedSystemComponent'
          type: array
        id:
          description: This gives the id of the distributed system.
          format: int32
          type: integer
        name:
          description: This give the name of the distributed system.
          type: string
      title: ''
      type: object
    DistributedSystemsListResp:
      description: Used to return a list of distributed systems.
      properties:
        distributedSystems:
          description: This returns the distributed systems list.
          items:
            $ref: '#/components/schemas/DistributedSystemSummary'
          type: array
      title: ''
      type: object
    DrivePoolDetailsResp:
      allOf:
        - $ref: '#/components/schemas/IdName'
        - properties:
            firmwareRevision:
              description: drive firmwareRevision.
              type: string
            hoursUsedSinceLastClean:
              description: drive hours used from last clean.
              format: int32
              type: integer
            manufacturer:
              description: drive manufacturer.
              type: string
            model:
              description: drive model.
              type: string
            serialNumber:
              description: drive serial Number.
              type: string
            status:
              $ref: '#/components/schemas/DriveStatus'
              properties: null
              type: object
          type: object
    DriveStatus:
      properties:
        enable:
          description: drive is enabled or not.
          type: boolean
        maintenanceMode:
          description: drive maintenance mode
          type: boolean
        markForReadOnly:
          description: drive mark for read only.
          type: boolean
        offlineReason:
          description: drive offline reason.
          type: string
      type: object
    DriveSummary:
      allOf:
        - $ref: '#/components/schemas/IdName'
        - properties:
            activeMediaAgent:
              description: media Agent of the drive.
              type: string
            barCode:
              description: barCode of a drive.
              type: string
            driveAttributes:
              description: if  the drive attribute is 1 then the drive is cleanable.
              format: int32
              type: integer
            mountStatus:
              description: mountStatus of a drive.
              enum:
                - MEDIA_MOUNTED
                - MEDIA_IS_BEING_MOUNTED
                - MEDIA_IS_BEING_UNMOUNTED
                - MEDIA_IS_UNUSABLE
              type: string
            online:
              description: status of a drive.
              type: string
            status:
              description: access of a drive.
              type: string
            type:
              description: drive type.
              type: string
          type: object
    Dynamics365ConnectionsSettings:
      allOf:
        - $ref: '#/components/schemas/AzureAdAppToken'
        - properties:
            azureDirectoryId:
              description: Azure directory (tenant) ID
              type: string
          required:
            - azureDirectoryId
          type: object
      title: Dynamics365ConnectionsSettings
      type: object
    Dynamics365ContentReq:
      description: Request Message to add content to dynamics 365 app
      properties:
        dynamics365plan:
          $ref: '#/components/schemas/IdName'
        type:
          default: ALL_ENVIRONMENTS
          enum:
            - ALL_ENVIRONMENTS
          type: string
      required:
        - type
        - dynamics365plan
      title: Dynamics365ContentReq
      type: object
    EMCAtmos:
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - properties:
            cloudType:
              description: Name of cloud vendor
              enum:
                - EMC Atmos
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            rootFolder:
              description: Root folder for the account
              type: string
            serviceHost:
              default: accesspoint.atmosonline.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - credentials
            - rootFolder
          type: object
        - $ref: '#/components/schemas/DedupeStorageList'
      description: ''
      title: EMC Atmos
    EMCAtmosBucket:
      allOf:
        - properties:
            cloudType:
              description: Name of cloud vendor
              enum:
                - EMC Atmos
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            rootFolder:
              description: Root folder for the account
              type: string
            serviceHost:
              default: accesspoint.atmosonline.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - credentials
            - rootFolder
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
      description: ''
      title: EMC Atmos
    EMCAtmosBucketContent:
      allOf:
        - properties:
            cloudType:
              description: Name of cloud vendor
              enum:
                - EMC Atmos
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            rootFolder:
              description: Root folder for the account
              type: string
            serviceHost:
              default: accesspoint.atmosonline.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
      description: ''
      title: EMC Atmos
    ESXServerMapping:
      description: An entity to represent one-one ESX server mapping rule
      properties:
        destinationServer:
          description: The name of destination ESX server
          type: string
        networkSettings:
          description: The list of all source network interface to destination network interface mapping
          items:
            $ref: '#/components/schemas/NetworkSetting'
          type: array
        sourceServer:
          description: The name of source ESX server
          type: string
      type: object
    EdgeDriveSettings:
      properties:
        auditDriveOperations:
          description: 'Enable auditing which logs the activities based on user interaction like creating, editing, moving, renaming, downloading or deleting files.'
          type: boolean
        edgeDriveQuota:
          description: Maximum number of gigabytes that you can store in the Edge Drive. Value as -1 means no quota is set.
          format: int32
          type: integer
        indexServer:
          $ref: '#/components/schemas/IdName'
        notificationsForShares:
          description: Enables alert notification feature which allows the share user or share owner to subscribe for share notifications when any activities are performed on the Edge Drive or the Collaborative share. The user can receive the notifications on the Web Console or as an email notification.
          type: boolean
      title: ''
      type: object
    EdgeDriveSettingsPlan:
      properties:
        auditDriveOperations:
          default: true
          description: 'Enable auditing which logs the activities based on user interaction like creating, editing, moving, renaming, downloading or deleting files.'
          type: boolean
        client:
          $ref: '#/components/schemas/IdName'
        createNewIndexServer:
          description: 'If set to false, uses existing edge index server and requires IndexServer IdName to be passed. If set to true, requires client IdName and indexCachePath to create a new Index Server.'
          type: boolean
        edgeDriveQuota:
          default: -1
          description: Maximum number of gigabytes that you can store in the Edge Drive. Giving value as -1 means no quota.
          format: int32
          type: integer
        indexCachePath:
          type: string
        indexServer:
          $ref: '#/components/schemas/IdName'
        notificationsForShares:
          default: true
          description: Enables alert notification feature which allows the share user or share owner to subscribe for share notifications when any activities are performed on the Edge Drive or the Collaborative share. The user can receive the notifications on the Web Console or as an email notification.
          type: boolean
      required:
        - createNewIndexServer
      title: ''
      type: object
    EditArray:
      description: Request to pass for Edit Array
      properties:
        accessNodes:
          items:
            $ref: '#/components/schemas/ArrayAccessNodes'
          type: array
        general:
          $ref: '#/components/schemas/EditArrayInfo'
        security:
          $ref: '#/components/schemas/UpdateSecurityAssoc'
        snapConfigurations:
          description: Configurations related to a snap engine
          items:
            $ref: '#/components/schemas/ArrayConfigsEdit'
          type: array
      title: EditArray
      type: object
    EditArrayInfo:
      description: Template for the editable generic information of an array. Region depicts the workload region which is only applicable to NetApp arrays as of now.
      properties:
        controlHost:
          description: Host name of the array
          type: string
        credential:
          $ref: '#/components/schemas/ArrayUserPassword'
        description:
          description: Description about the Array
          type: string
        flags:
          description: Flags to be set for array
          format: int32
          type: integer
        region:
          $ref: '#/components/schemas/IdName'
        savedCredential:
          $ref: '#/components/schemas/IdName'
      title: EditArrayInfo
      type: object
    EmailSettings:
      properties:
        senderEmail:
          description: Email id of the sender
          type: string
        senderName:
          description: Name of the sender sending the email
          type: string
      type: object
    Encryption:
      description: Different ways in which data can be encrypted.
      properties:
        cipher:
          $ref: '#/components/schemas/EncryptionTypes'
        encrypt:
          type: boolean
        keyLength:
          description: 'Different keylengths are present for different kinds of ciphers. Blowfish,Twofish,AES and Serpent all accept both 128 and 256. DES3 accepts only 192. GOST accepts only 256. '
          format: int32
          type: integer
        keyProvider:
          $ref: '#/components/schemas/IdName'
      type: object
    EncryptionTypes:
      description: The different types of encryption keys that can be used for encrypting the data. The values are case sensitive
      enum:
        - BlowFish
        - AES
        - DES3
        - GOST
        - Serpent
        - Twofish
      format: ''
      type: string
    EntityAuditInformation:
      properties:
        messages:
          description: All the audit messages for this entry
          items:
            type: string
          type: array
        operation:
          description: Operation performed
          type: string
        severity:
          $ref: '#/components/schemas/AuditLevel'
        time:
          description: Unix epoch time representation of audit entry
          format: int32
          type: integer
        user:
          description: Name of the user
          type: string
      title: EntityAuditInformation
      type: object
    EntityAuditList:
      description: ''
      properties:
        auditDetails:
          description: List of audit information for an entity
          items:
            $ref: '#/components/schemas/EntityAuditInformation'
          type: array
      title: EntityAuditList
      type: object
    EntityDetails:
      properties:
        entities:
          items:
            $ref: '#/components/schemas/IdName'
          nullable: true
          type: array
      type: object
    EntityRegion:
      properties:
        entityId:
          format: int32
          type: integer
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      type: object
    EntityRegionInfo:
      description: ''
      properties:
        entityRegionType:
          $ref: '#/components/schemas/EntityRegionTypes'
        region:
          $ref: '#/components/schemas/IdName'
      type: object
    EntityRegionTypes:
      enum:
        - BACKUP
        - WORKLOAD
      format: ''
      type: string
    EntitySettingsListItem:
      properties:
        acceptableValues:
          description: Specifies values which are acceptable when modifying the setting value. This will only be returned if there are specific set of values which can be accepted.
          items:
            type: string
          type: array
        category:
          description: Category to which setting belongs
          type: string
        defaultValue:
          description: Value used to get default system behaviour
          type: string
        description:
          description: Description of the setting
          type: string
        isModified:
          description: Specifies if the setting is already modified by the user
          type: boolean
        isRestartRequired:
          description: Specifies if it is required to restart the services for any changes to take effect
          type: boolean
        maxValue:
          description: Specifies maximum value that can be set to modify specified global setting. It is only returned if the setting type is Integer
          format: int32
          type: integer
        minValue:
          description: Specifies minimum value that can be set to modify specified global setting. It is only returned if the setting type is Integer
          format: int32
          type: integer
        name:
          description: Name of the setting
          type: string
        type:
          description: Type of the setting
          enum:
            - Integer
            - String
            - Boolean
            - Multi String
          type: string
        values:
          $ref: '#/components/schemas/EntitySettingsValueArray'
      title: EntitySettingsListItem
      type: object
    EntitySettingsResponse:
      properties:
        entitySettings:
          items:
            $ref: '#/components/schemas/EntitySettingsListItem'
          type: array
      title: EntitySettingsResponse
      type: object
    EntitySettingsValue:
      properties:
        comment:
          description: Comment set by user while modifying the specified entity setting for the given entity
          type: string
        entity:
          $ref: '#/components/schemas/IdNameType'
        value:
          description: Value set for the specified setting linked to the specified entity
          type: string
      title: EntitySettingsValue
      type: object
    EntitySettingsValueArray:
      items:
        $ref: '#/components/schemas/EntitySettingsValue'
      title: EntitySettingsValueArray
      type: array
    EntityTypes:
      enum:
        - COMMCELL
        - CLIENT
        - Instances
        - BACKUPSET
        - SUBCLIENT
        - CLIENT_GROUP
        - USER
        - USER_GROUP
        - LIBRARY
        - MEDIAAGENT
        - RESOURCEPOOL
        - STORAGE_POOL
        - STORAGE_POLICY
        - SCHEDULE_POLICY
        - SUBCLIENT_POLICY
        - ALERT
        - PLAN
        - VIRTUAL_MACHINE
        - ROLE
        - DEVICE
        - REGION
        - NETWORK_TOPOLOGY
        - COMPANY
      format: ''
      type: string
    ErrorMessage:
      description: errorMessage if the commcell failed to sync
      items:
        $ref: '#/components/schemas/NameMessage'
      title: ErrorMessage
      type: array
      x-tags:
        - ServiceCommcells
    ExchangeContentReq:
      description: Request Message to add content to exchange app
      properties:
        office365plan:
          $ref: '#/components/schemas/IdName'
        type:
          default: ALL_MAILBOXES
          enum:
            - ALL_MAILBOXES
            - ALL_PUBLIC_FOLDERS
            - ALL_GROUP_MAILBOXES
          type: string
      required:
        - type
        - office365plan
      title: ExchangeContentReq
      type: object
    ExcludeEntitiesFromPlanRuleEvaluation:
      description: Entities that need to be excluded from plan rule evaluation
      properties:
        subclients:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      title: ExcludeEntitiesFromPlanRuleEvaluation
      type: object
    ExecutePlanRules:
      description: Message object to hold information of entities against which plan rule need to be analyzed
      properties:
        backupsets:
          description: List of backupsets against which plan rules need to be  executed and evaluated.
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        clients:
          description: List of clients against which plan rules need to be  executed and evaluated.
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        ignorePreviousPlanAssociation:
          description: Boolean to indicate if we want to evaluate rule for entities associated to plan. Default is false. Only entities with no plan associated will be evaluated.
          type: boolean
        instances:
          description: List of instances against which plan rules need to be  executed and evaluated.
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        isPreviewOnly:
          description: Boolean to indicate if request is to preview list of subclients that will be associated via plan rules
          type: boolean
        subclients:
          description: List of subclients against which plan rules need to be  executed and evaluated.
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      title: ExecutePlanRules
      type: object
    ExpirationTime:
      properties:
        daysRetainUntil:
          description: Expiration Time if in days
          type: string
        minutesRetainUntil:
          description: Expiration Time if in minutes
          type: string
      title: ExpirationTime
      type: object
    ExtendedRetentionRules:
      description: 'If you want to update, specify the whole object. Extended retention rules should be bigger than retention period.'
      properties:
        firstExtendedRetentionRule:
          $ref: '#/components/schemas/PlanRetentionRule'
        secondExtendedRetentionRule:
          $ref: '#/components/schemas/PlanRetentionRule'
        thirdExtendedRetentionRule:
          $ref: '#/components/schemas/PlanRetentionRule'
      title: ExtendedRetentionRules
      type: object
    FailoverGroupArrayReplicationPair:
      description: An array replication pair for failover group
      properties:
        GUID:
          description: The GUID of the source of array replication pair
          type: string
        destinationName:
          description: The name of the destination machine
          type: string
        hostname:
          description: The hostname specified for the destination machine
          type: string
        id:
          description: The ID of the array replication pair
          format: int32
          type: integer
        ipSettings:
          description: The settings for IP address mapping
          items:
            $ref: '#/components/schemas/IpAddressSettingVMWareCreate'
          type: array
        priority:
          description: The priority of the array replication pair for DR operation in failover group. The lower values signify higher priority
          format: int32
          type: integer
        sourceName:
          description: The name of the source machine
          type: string
      type: object
    FailoverGroupAutomaticFailover:
      description: The failover group automatic failover information of access nodes and monitoring status
      nullable: true
      properties:
        machines:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        monitoringStatus:
          $ref: '#/components/schemas/AutomaticFailoverMonitoringStatus'
        outageDelayTimeInMinutes:
          description: Delay time before declaring outage (in minutes)
          format: int32
          minimum: 0
          type: integer
        status:
          $ref: '#/components/schemas/AutomaticFailoverStatus'
      type: object
    FailoverGroupDetails:
      description: Failover group details
      properties:
        arrayReplicationPairs:
          description: List of all array replication pairs for failover group
          items:
            $ref: '#/components/schemas/FailoverGroupArrayReplicationPair'
          nullable: true
          type: array
        automaticFailover:
          $ref: '#/components/schemas/FailoverGroupAutomaticFailover'
        continueDROnFailure:
          description: Whether to continue to next priority on DR job failure
          type: boolean
        copy:
          $ref: '#/components/schemas/IdName'
        destinationHypervisor:
          $ref: '#/components/schemas/FailoverGroupHypervisor'
        esxServerMappings:
          description: The list of all ESX server mappings
          items:
            $ref: '#/components/schemas/ESXServerMapping'
          nullable: true
          type: array
        id:
          description: Failover group Id
          format: int32
          type: integer
        isApprovalRequired:
          description: Whether a user approval is required for DR operations
          type: boolean
        name:
          description: Failover group name
          type: string
        operationType:
          $ref: '#/components/schemas/FailoverGroupOperationType'
        plannedFailoverSchedules:
          description: The list of all planned failover schedules
          items:
            $ref: '#/components/schemas/PlanSchedule'
          type: array
        priorityIntervalInMinutes:
          description: The interval between DR operations of different priorities
          format: int32
          minimum: 1
          type: integer
        recoveryTarget:
          $ref: '#/components/schemas/IdName'
        replicationPairs:
          description: List of all replication pairs that are part of the failover group
          items:
            $ref: '#/components/schemas/FailoverGroupReplicationPair'
          nullable: true
          type: array
        source:
          $ref: '#/components/schemas/FailoverGroupSource'
        sourceHypervisor:
          $ref: '#/components/schemas/FailoverGroupHypervisor'
        storagePolicy:
          $ref: '#/components/schemas/IdName'
        subclient:
          $ref: '#/components/schemas/IdName'
        testBootSchedules:
          description: The list of all test boot schedules
          items:
            $ref: '#/components/schemas/PlanSchedule'
          type: array
        usersToNotify:
          description: Users to notify/for approval of DR operations
          items:
            $ref: '#/components/schemas/IdNameDisplayNameCompany'
          type: array
      title: FailoverGroupDetails
      type: object
    FailoverGroupEligibleMachineList:
      description: The list of all machines that are eligible to be added to failover group
      properties:
        arrayReplicationPairs:
          description: List of all array replication pairs for failover group that are eligible to be added
          items:
            $ref: '#/components/schemas/FailoverGroupArrayReplicationPair'
          nullable: true
          type: array
        replicationPairs:
          description: The list of all replication pairs eligible to be added to failover group with replication source
          items:
            $ref: '#/components/schemas/FailoverGroupReplicationPair'
          nullable: true
          type: array
      title: FailoverGroupEligibleMachineList
      type: object
    FailoverGroupHypervisor:
      description: The hypervisor client/client group information for failover groups
      properties:
        id:
          description: The Id of client/client group
          format: int32
          type: integer
        name:
          description: The name of the hypervisor client/client group
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/FailoverGroupHypervisorType'
        vendor:
          $ref: '#/components/schemas/VSVendor'
      type: object
    FailoverGroupHypervisorType:
      description: The type of entity is used
      enum:
        - CLIENT_GROUP
        - CLIENT
      nullable: true
      type: string
    FailoverGroupOperationType:
      description: Failover group operation type
      enum:
        - LIVE_MOUNT
        - LIVE_SYNC
        - RESTORE
        - LIVE_RECOVERY
        - FAILOVER
        - VIRTUAL_LAB
        - ORACLE_EBS_APP
        - GENERIC_ENTERPRISE_APP
        - TEST_FAILOVER
      nullable: true
      type: string
    FailoverGroupReplicationPair:
      description: A replication pair for failover group
      properties:
        GUID:
          description: The GUID of the source of replication pair
          type: string
        copyPrecedence:
          description: The copy precedence of replication pair
          format: int32
          minimum: 0
          nullable: true
          type: integer
        destinationName:
          description: The name of the destination machine
          type: string
        id:
          description: The ID of the replication pair
          format: int32
          type: integer
        postFailoverScript:
          $ref: '#/components/schemas/DROperationScript'
        preFailoverScript:
          $ref: '#/components/schemas/DROperationScript'
        priority:
          description: The priority of the replication pair for DR operation in failover group. The lower values signify higher priority
          format: int32
          type: integer
        sourceName:
          description: The name of the source machine
          type: string
      type: object
    FailoverGroupSource:
      description: Failover group type
      enum:
        - ARRAY_REPLICATION_TEST_FAILOVER
        - ARRAY_REPLICATION_FAILOVER
        - REPLICATION
        - BACKUP
      type: string
    FailoverGroupSummary:
      description: Failover groups summary
      properties:
        id:
          description: Failover group ID
          format: int32
          type: integer
        name:
          description: Failover group name
          type: string
        numberOfVirtualMachines:
          description: The number of VM pairs of failover groups
          format: int32
          type: integer
        source:
          $ref: '#/components/schemas/FailoverGroupSource'
      title: FailoverGroupSummary
      type: object
    FailoverGroupsList:
      description: The list of all failover groups
      properties:
        failoverGroups:
          items:
            $ref: '#/components/schemas/FailoverGroupSummary'
          type: array
      title: FailoverGroupsList
      type: object
    FailoverStatus:
      description: The types of failover statuses
      enum:
        - NONE
        - FAILOVER_COMPLETE
        - FAILOVER_RUNNING
        - FAILOVER_PAUSED
        - FAILOVER_FAILED
        - FAILBACK_COMPLETE
        - FAILBACK_RUNNING
        - FAILBACK_PAUSED
        - FAILBACK_FAILED
        - FAILBACK_PARTIAL
        - FAILOVER_PARTIAL
        - FAILOVER_SKIPPED
        - FAILBACK_SKIPPED
        - REVERT_FAILOVER_COMPLETE
        - REVERT_FAILOVER_RUNNING
        - REVERT_FAILOVER_FAILED
        - REVERT_FAILOVER_PAUSED
      type: string
    FileExceptions:
      properties:
        unix:
          description: Unix file paths to be excluded.Comma separated string.
          type: string
        useCompanyGlobalFilter:
          description: 'Enable or disable the use of the file path filters on all subclients. By default, it is enabled when filters are added for either Windows or Unix or both.'
          type: boolean
        windows:
          description: Window file paths to be excluded.Comma separated string.
          type: string
      type: object
    FileServerAsset:
      properties:
        countryCode:
          description: Country code to which the server belongs
          type: string
        hostName:
          description: Fully qualified domain name of the server
          format: hostname
          type: string
        ipAddress:
          description: Ip Address of the server
          format: ipv4
          type: string
        name:
          description: Display name of the file server
          type: string
        operatingSystem:
          description: Operating system of the server
          enum:
            - Mac and Linux
            - NAS
            - Windows
          type: string
      required:
        - name
        - hostName
        - ipAddress
        - operatingSystem
      title: FileServerAsset
      type: object
    FileServerListResp:
      description: Used to return a list of file servers.
      properties:
        fileServerCount:
          description: This returns the total number of file servers.
          format: int32
          type: integer
        fileServers:
          description: This returns the file server list.
          items:
            $ref: '#/components/schemas/FileServerSummary'
          type: array
      title: ''
      type: object
    FileServerStatus:
      description: Gives the status of the file server.
      enum:
        - OFFLINE
        - ONLINE
        - UNKNOWN
        - NOT_APPLICABLE
      format: ''
      type: string
    FileServerSummary:
      description: This returns the file server summary.
      properties:
        GUID:
          description: This returns the Globally Unique Identifier of the file server.
          type: string
        SLA:
          $ref: '#/components/schemas/SLADetails'
        applicationSize:
          description: Provides the application size of the file server. It is provided in bytes.
          format: int32
          type: integer
        commcellName:
          description: This returns the CommCell the file server is connected to.
          nullable: true
          type: string
        company:
          $ref: '#/components/schemas/IdName'
        configured:
          description: This returns if the file server is configured or deconfigured.
          type: boolean
        displayName:
          description: This gives the name of the file server as it shown on the admin console or GUI.
          type: string
        id:
          description: This gives the id of the file server.
          format: int32
          type: integer
        lastBackup:
          $ref: '#/components/schemas/LastBackupJobInfo'
        name:
          description: This give the name of the file server.
          type: string
        plan:
          $ref: '#/components/schemas/IdName'
        status:
          $ref: '#/components/schemas/FileServerStatus'
        tags:
          description: Tags associated to file server
          items:
            $ref: '#/components/schemas/IdNameValue'
          type: array
        type:
          description: 'This returns the type of the file server. Example: Windows, Qumulo'
          type: string
      title: ''
      type: object
    FirewallFwGroupType:
      enum:
        - INTERNAL
        - EXTERNAL
        - PROXIES
        - PROXY_PERIMETER
      title: FirewallFwGroupType
      type: string
    FirewallGroupAdvancedOptions:
      properties:
        keepAliveInterval:
          description: 'The interval in seconds for sending keep-alive packets, to maintain the session if backup traffic has an extended pause.'
          format: int32
          type: integer
        tunnelPort:
          description: The port defined for communications
          format: int32
          type: integer
      title: ''
      type: object
    FirewallGroupMnemonic:
      description: Custom names(mnemonics) given to pre-defined smart client groups
      enum:
        - MY_COMMSERVE
        - MY_MEDIAAGENTS
        - MY_COMMSERVE_AND_MEDIAAGENTS
        - NONE
      title: FirewallGroupMnemonic
      type: string
    FirewallTopology:
      properties:
        clientType:
          $ref: '#/components/schemas/firewallClientType'
        topology:
          $ref: '#/components/schemas/IdName'
        topologyType:
          $ref: '#/components/schemas/firewallTopologyTypes'
      title: ''
      type: object
    FirewallTopologyCreateReq:
      properties:
        clientType:
          $ref: '#/components/schemas/firewallClientType'
        encryptTraffic:
          description: Flag determining if we want the data from tunnel to use HTTPS protocol
          type: boolean
        firewallGroups:
          items:
            $ref: '#/components/schemas/FirewallTopologyGroups'
          type: array
        topologyName:
          type: string
        topologyType:
          $ref: '#/components/schemas/firewallTopologyTypes'
        tunnelProtocol:
          $ref: '#/components/schemas/FirewallTopologyTunnelProtocol'
        tunnelsPerRoute:
          description: The number of tunnel connections per route
          format: int32
          type: integer
        useWildCardProxy:
          description: Flag determining wether network gateways are used to connect all infrastructure machines
          type: boolean
      title: FirewallTopologyReq
      type: object
    FirewallTopologyCreateResp:
      properties:
        error:
          $ref: '#/components/schemas/GenericResp'
        topologyId:
          type: integer
      title: FirewallTopologyCreateResp
      type: object
    FirewallTopologyDetails:
      properties:
        clientType:
          $ref: '#/components/schemas/firewallClientType'
        encryptTraffic:
          description: Flag determining if we want the data from tunnel to use HTTPS protocol
          type: boolean
        firewallGroups:
          items:
            $ref: '#/components/schemas/FirewallTopologyGroups'
          type: array
        topology:
          $ref: '#/components/schemas/IdName'
        topologyType:
          $ref: '#/components/schemas/firewallTopologyTypes'
        tunnelProtocol:
          $ref: '#/components/schemas/FirewallTopologyTunnelProtocol'
        tunnelsPerRoute:
          description: The number of tunnel connections per route
          format: int32
          type: integer
        useWildCardProxy:
          description: Flag determining wether network gateways are used to connect all infrastructure machines
          type: boolean
      title: FirewallTopologyDetails
      type: object
    FirewallTopologyGroups:
      properties:
        advancedOptions:
          $ref: '#/components/schemas/FirewallGroupAdvancedOptions'
        clientGroupId:
          description: The id of the client group
          format: int32
          type: integer
        groupType:
          $ref: '#/components/schemas/FirewallFwGroupType'
        mnemonic:
          $ref: '#/components/schemas/FirewallGroupMnemonic'
      title: ''
      type: object
    FirewallTopologyTunnelProtocol:
      description: The protocol for outgoing communication
      enum:
        - REGULAR
        - ENCRYPTED
        - AUTHENTICATED
        - RAW
      title: FirewallTopologyTunnelProtocol
      type: string
    Fujitsu:
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Fujitsu Storage ETERNUS CD10000
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
          type: object
        - $ref: '#/components/schemas/DedupeStorageList'
      description: ''
      title: Fujitsu Storage ETERNUS CD10000
    FujitsuBucket:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Fujitsu Storage ETERNUS CD10000
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
      description: ''
      title: Fujitsu Storage ETERNUS CD10000
    FujitsuBucketContent:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Fujitsu Storage ETERNUS CD10000
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
      description: ''
      title: Fujitsu Storage ETERNUS CD10000
    GCPDatabaseList:
      properties:
        databases:
          items:
            $ref: '#/components/schemas/GCPDatabases'
          type: array
        error:
          $ref: '#/components/schemas/GenericResp'
      title: GCPDatabaseList
      type: object
    GCPDatabases:
      properties:
        name:
          description: the google spanner database name
          type: string
      title: ''
      type: object
    GCPInstanceList:
      properties:
        error:
          $ref: '#/components/schemas/GenericResp'
        instances:
          items:
            $ref: '#/components/schemas/GCPInstances'
          type: array
      title: GCPInstanceList
      type: object
    GCPInstances:
      properties:
        displayName:
          description: 'Returns the name to be displayed on UI in the format: instanceName [projectName]'
          type: string
        instanceName:
          description: the google spanner instance name
          type: string
        projectName:
          description: google cloud project the instance belongs to
          type: string
      title: ''
      type: object
    General:
      properties:
        assignLaptopOwners:
          $ref: '#/components/schemas/OwnerAssignmentTypes'
        authcodeForInstallation:
          description: Enable or disable authcode for installation.
          type: boolean
        autoDiscoverApp:
          description: 'Enable or Disable Auto Discover Applications.When Auto discover applications is enabled, each member server of this company is searched once every 24 hours to discover any applications that need to be backed up. For any newly-discovered and unprotected applications, the agent software is automatically installed on the server.'
          type: boolean
        emailSuffix:
          description: Supported domains for the company
          type: string
        enableDataEncryption:
          description: Enable or disable data encryption
          type: boolean
        infrastructureType:
          $ref: '#/components/schemas/InfrastructureTypes'
        newAlias:
          description: The company domain or NetBIOS name
          type: string
        resellerMode:
          description: 'Enable reseller mode. A reseller is a user or user groups who can operate multiple tenant environments. The service provider can assign one or more resellers as the tenant operator for a company. The reseller can switch to any of their assigned tenant environment and operate on the company as a tenant user. Once enabled, the reseller mode cannot be disabled.'
          type: boolean
        serviceCommcells:
          description: Service commcells associated with the master commcell.
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        supportedSolutions:
          items:
            $ref: '#/components/schemas/SupportedSolution'
          type: array
        twoFactorAuth:
          $ref: '#/components/schemas/TwoFactorAuth'
        upnInsteadOfEmail:
          description: Enable or disable the use of User Pricipal Name in place of an email address.
          type: boolean
      type: object
    GenericResp:
      properties:
        errorCode:
          format: int32
          type: integer
        errorMessage:
          nullable: true
          type: string
      type: object
    GenericRespWithWarning:
      properties:
        errorCode:
          format: int32
          type: integer
        errorMessage:
          description: Tells about the error occured
          type: string
        warningCode:
          format: int32
          type: integer
        warningMessage:
          description: Tells about the warning occured
          type: string
      type: object
    GetAllApplicableAgentResp:
      description: List of associated agents
      properties:
        agentDetails:
          items:
            $ref: '#/components/schemas/AgentDetails'
          type: array
      title: GetAllApplicableAgentResp
      type: object
    GetArraysResp:
      description: Get list of all arrays
      properties:
        arrays:
          description: List of arrays
          items:
            $ref: '#/components/schemas/ArrayLevel'
          type: array
      title: GetArraysResp
      type: object
    GetAssociationsForCompanyResp:
      description: Response template for list of associationsfor  a company
      properties:
        associatedEntities:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      title: GetAssociationsForCompanyResp
      type: object
    GetCRDCloudAccountsResponse:
      description: Contains the list of cloud accounts eligible for Cloud Resource Discovery
      properties:
        cloudAccounts:
          description: Array of cloud accounts eligible for Cloud Resource Discovery
          items:
            $ref: '#/components/schemas/CRDCloudAccount'
          type: array
        error:
          $ref: '#/components/schemas/GenericResp'
      title: GetCRDCloudAccountsResponse
      type: object
    GetEmailServerDetails:
      description: ''
      properties:
        SMTPPort:
          description: The port number that connects to the mail server.
          format: int32
          type: integer
        SMTPServerName:
          description: 'The name of the mail server that sends alerts, scheduled reports, log files, and additional information.'
          type: string
        encryptionAlgorithm:
          $ref: '#/components/schemas/SMTPServerEncryptionAlgorithm'
        senderEmail:
          description: The sender email address used for emails sent from the software.
          type: string
        senderName:
          description: The sender name used for emails sent from the software.
          type: string
        useAuthentication:
          description: The option to use authentication on the mail server. This is typically used in external or internet mail server configurations.
          type: boolean
        username:
          description: 'only when useAuthentication is true, username would be populated'
          type: string
      type: object
    GetEntityRegionResp:
      properties:
        entityType:
          $ref: '#/components/schemas/EntityTypes'
        error:
          $ref: '#/components/schemas/GenericResp'
        regionType:
          $ref: '#/components/schemas/EntityRegionTypes'
        regions:
          items:
            $ref: '#/components/schemas/EntityRegion'
          type: array
      title: GetEntityRegionResp
      type: object
    GetGlobalExceptions:
      description: Get list of global windows and unix execptions
      properties:
        unixGlobalExceptions:
          description: List of global unix execptions
          items:
            type: string
          nullable: true
          type: array
        useGlobalExceptionsOnAllSubclients:
          description: Boolean which signifies application of global execption on all subclients
          type: boolean
        windowsGlobalExceptions:
          description: gives list of all the windowsglobal execptions
          items:
            type: string
          nullable: true
          type: array
      title: GetGlobalExceptions
      type: object
    GetJobsOnStorageResp:
      description: Job List for storage entity.
      properties:
        jobs:
          items:
            $ref: '#/components/schemas/JobDetailForStorage'
          type: array
      title: GetJobsOnStorageResp
      type: object
    GetLaptopAdminsResp:
      description: Response of get laptop admins
      properties:
        error:
          $ref: '#/components/schemas/GenericResp'
        laptopAdmins:
          description: List of laptop admins (users or user groups).
          items:
            $ref: '#/components/schemas/IdNameType'
          type: array
      title: GetLaptopAdminsResp
      type: object
    GetMountPathContentResp:
      properties:
        hasSubclientLogCacheDump:
          description: Indicates if mountpath has any subclient lLog cache dump
          type: boolean
        isRequiredByAuxiliaryCopy:
          description: This indicates if any of the jobs on this mountpath is required for auxiliary copy.
          type: boolean
        isSingleInstanced:
          description: Indicates if mountpath has any DDB references
          type: boolean
        jobInfoList:
          description: Jobs on mountpath
          items:
            $ref: '#/components/schemas/MountPathJobInfo'
          type: array
        mountpathName:
          description: Name of mountpath
          type: string
        retainDataUntil:
          description: Maximum DateTime upto which the jobs on this mountpath is retained
          format: int64
          type: integer
        totalDataWritten:
          description: Total amount of data written on mountpath
          format: int64
          type: integer
        totalSizeOnMedia:
          description: 'Total size of the data stored on the mountpath. This is the size of the data after deduplication and compression, if employed. This amount also includes metadata information, so in some cases, it could be larger than the actual size of the backed up data.'
          format: int64
          type: integer
      title: GetMountPathContentResp
      type: object
    GetPseudoClientsForCompanyResp:
      description: Response template for list of servers with no packages a company
      properties:
        clients:
          items:
            $ref: '#/components/schemas/IdNameDisplayName'
          type: array
      title: GetPseudoClientsForCompanyResp
      type: object
    GetRecoveryTargetListResponse:
      description: To display the list of recovery targets
      properties:
        recoveryTargets:
          items:
            $ref: '#/components/schemas/GetRecoveryTargetListSummary'
          type: array
      title: GetRecoveryTargetListResponse
      type: object
    GetRecoveryTargetListSummary:
      properties:
        applicationType:
          description: Recovery target application type
          enum:
            - REPLICATION
            - REGULAR
            - AUTO_SCALE_MANAGEMENT
          type: string
        destinationHypervisor:
          $ref: '#/components/schemas/IdName'
        id:
          description: Recovery Target Id
          format: int32
          type: integer
        name:
          description: Recovery Target name
          type: string
        policyType:
          description: Recovery target policy type name
          type: string
      title: GetRecoveryTargetListSummary
      type: object
    GetServerGroupsResp:
      description: Returns a list of existing server groups which are present.
      properties:
        serverGroupCount:
          description: This returns the total number of server groups.
          format: int32
          type: integer
        serverGroups:
          items:
            $ref: '#/components/schemas/serverGroupList'
          type: array
      type: object
    GetSetWindowsMSSQLPatchingMsg:
      description: Response message for install job options
      properties:
        DiagsInCSCache:
          format: int32
          type: integer
        EligibleForMSSQLPatching:
          format: int32
          type: integer
        EligibleForWindowsOSPatching:
          format: int32
          type: integer
        HSXStorageUpdatesPatching:
          format: int32
          type: integer
        HyperScaleOSPatching:
          format: int32
          type: integer
        MSSQLPatching:
          format: int32
          type: integer
        UnixOSPatching:
          format: int32
          type: integer
        WindowsPatching:
          format: int32
          type: integer
        clientId:
          format: int32
          type: integer
        option:
          format: int32
          type: integer
      title: GetSetWindowsMSSQLPatchingMsg
      type: object
    GetSnapConfig:
      description: Get snap configs for vendors
      properties:
        configList:
          description: snap configs of snap vendor with default values
          items:
            $ref: '#/components/schemas/ArrayConfigsGet'
          type: array
        vendor:
          description: vendor Name
          type: string
      title: GetSnapConfig
      type: object
    GetVMGroupProperties:
      description: This is used to store VM group details cache
      properties:
        filterQueryCount:
          description: total count
          format: int32
          type: integer
        vmGroups:
          items:
            $ref: '#/components/schemas/GetVMGroupResp'
          type: array
      title: GetVMGroupProperties
      type: object
    GetVMGroupResp:
      description: ''
      properties:
        accessNodeList:
          $ref: '#/components/schemas/accessNodeListModel'
        activityControl:
          $ref: '#/components/schemas/ActivityControlOptions'
        applicationValidation:
          $ref: '#/components/schemas/vmAppValidation'
        commonProperties:
          $ref: '#/components/schemas/VMGroupCommonProperties'
        content:
          items:
            $ref: '#/components/schemas/vmContent'
          type: array
        diskFilters:
          items:
            $ref: '#/components/schemas/vmDiskFilterProp'
          type: array
        filters:
          items:
            $ref: '#/components/schemas/vmContent'
          type: array
        id:
          format: int32
          type: integer
          x-terraform-id: true
        lastBackup:
          $ref: '#/components/schemas/LastBackupJobInfo'
        meditechSystems:
          $ref: '#/components/schemas/meditechPropResp'
        name:
          nullable: true
          type: string
        securityAssociations:
          items:
            $ref: '#/components/schemas/SecurityAssoc'
          type: array
        settings:
          $ref: '#/components/schemas/vmGroupSettings'
        snapshotManagement:
          $ref: '#/components/schemas/snapCopyInfo'
        status:
          description: subclient entity status
          format: int32
          type: integer
        summary:
          $ref: '#/components/schemas/vmGroupDetailsSummary'
        vmBackupInfo:
          $ref: '#/components/schemas/vmBackupInfo'
      title: GetVMGroupResp
      type: object
    GlobalEntityAggregationValueResp:
      description: this is the data model for return aggregate API
      properties:
        aggregation:
          items:
            $ref: '#/components/schemas/GroupByAggregationValue'
          nullable: true
          type: array
      title: GlobalEntityAggregationValueResp
      type: object
    GlobalExceptionOperation:
      description: Information conatins the operation to be done on exceptions
      properties:
        exceptions:
          description: Array of exceptions which will be operated upon based on the operation type
          items:
            type: string
          type: array
        operationType:
          default: OVERWRITE
          description: The operations on global exceptions provided would be executed based on the operation type provided
          enum:
            - NONE
            - OVERWRITE
            - ADD
            - DELETE
            - CLEAR
          type: string
      title: GlobalExceptionOperation
      type: object
    GlobalSettingsItem:
      properties:
        acceptableValues:
          description: Specifies values which are acceptable when modifying the setting value. This will only be returned if there are specific set of values which can be accepted.
          items:
            type: string
          type: array
        category:
          description: Category to which setting belongs
          type: string
        comment:
          description: Comment set by the user while modifying the setting
          type: string
        defaultValue:
          description: Value used to get default system behaviour
          type: string
        description:
          description: Description of the setting
          type: string
        displayLabel:
          description: Display Label of the setting
          type: string
        isModified:
          description: Specifies if the setting is already modified by the user
          type: boolean
        isRestartRequired:
          description: Specifies if it is required to restart the services for any changes to take effect
          type: boolean
        maxValue:
          description: Specifies maximum value that can be set to modify specified global setting. It is only returned if the setting type is Integer
          format: int32
          type: integer
        minValue:
          description: Specifies minimum value that can be set to modify specified global setting. It is only returned if the setting type is Integer
          format: int32
          type: integer
        name:
          description: Name of the setting
          type: string
        type:
          description: Type of the setting
          enum:
            - Integer
            - String
            - Boolean
            - Multi String
          type: string
        value:
          description: Value of the setting if the setting was modified.
          type: string
      title: GlobalSettingsItem
      type: object
    GlobalSettingsResponse:
      properties:
        globalSettings:
          items:
            $ref: '#/components/schemas/GlobalSettingsItem'
          type: array
      title: GlobalSettingsResponse
      type: object
    GoogleCloud:
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Google Cloud Storage
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              default: storage.googleapis.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - credentials
            - bucket
          type: object
        - $ref: '#/components/schemas/DedupeStorageList'
      description: ''
      title: Google Cloud Storage
    GoogleCloudBucket:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Google Cloud Storage
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              default: storage.googleapis.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - credentials
            - bucket
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
      description: ''
      title: Google Cloud Storage
    GoogleCloudBucketContent:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Google Cloud Storage
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              default: storage.googleapis.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
      description: ''
      title: Google Cloud Storage
    GoogleCredentialContent:
      description: 'Applicable only for credentials with Cloud Account, Vendor Type as Google and Auth Type as Access and Secret key'
      properties:
        accessKeyId:
          description: 'Access key ID of Credential, applicable only if authType is Access Secret Key.'
          type: string
        certificate:
          description: Certificate of Credential
          type: string
        connectString:
          description: Connect String for Credential
          type: string
        dbName:
          description: DB Name for Credential
          type: string
        description:
          description: Updated description of Credential
          type: string
        newName:
          description: Updated name of credential
          type: string
        projectId:
          description: Project ID of credential
          type: string
        secretAccessKey:
          description: Secret Access Key of Credential and must be in base64 encoded format.
          type: string
        security:
          $ref: '#/components/schemas/CredentialSecurity'
      title: GoogleCredentialContent
      type: object
    GoogleCredentialInfo:
      allOf:
        - $ref: '#/components/schemas/CreateCredential'
        - properties:
            accessKeyId:
              description: 'Access key ID of Credential, applicable only if authType is Access Secret Key.'
              type: string
            authType:
              description: Aunthentication type applicable only for Cloud Accounts with Google as vendor.
              enum:
                - GOOGLE_SERVICE_ACCOUNT
                - GOOGLE_CLOUD
              type: string
            certificate:
              description: Certificate of Credential
              type: string
            connectString:
              description: Connect String for Credential
              type: string
            dbName:
              description: DB Name for Credential
              type: string
            projectId:
              description: Project ID of credential
              type: string
            secretAccessKey:
              description: Secret Access Key of Credential and must be in base64 encoded format.
              type: string
          required:
            - authType
            - accessKeyId
            - secretAccessKey
            - connectString
            - dbName
            - certificate
            - projectId
          type: object
        - $ref: '#/components/schemas/CommonCredentialInfo'
      description: 'Applicable only for credentials with Cloud Account, Vendor Type as Google and Auth Type as Access and Secret key'
      title: GoogleCredentialInfo
    GoogleServiceAccountCredentialContent:
      description: 'Applicable only for credentials with Cloud Account, Vendor Type as Google and Auth Type as Service Account'
      properties:
        certificate:
          description: Certificate of Credential
          type: string
        connectString:
          description: Connect String for Credential
          type: string
        dbName:
          description: DB Name for Credential
          type: string
        description:
          description: Updated description of Credential
          type: string
        newName:
          description: Updated name of credential
          type: string
        projectId:
          description: Project ID of credential
          type: string
        security:
          $ref: '#/components/schemas/CredentialSecurity'
        userAccount:
          description: User Account of Credential
          type: string
      title: GoogleServiceAccountCredentialContent
      type: object
    GoogleServiceAccountCredentialInfo:
      allOf:
        - $ref: '#/components/schemas/CreateCredential'
        - properties:
            authType:
              description: Aunthentication type applicable only for Cloud Accounts with Google as vendor.
              enum:
                - GOOGLE_SERVICE_ACCOUNT
                - GOOGLE_CLOUD
              type: string
            certificate:
              description: Certificate of Credential
              type: string
            connectString:
              description: Connect String for Credential
              type: string
            dbName:
              description: DB Name for Credential
              type: string
            projectId:
              description: Project ID of credential
              type: string
            userAccount:
              description: User Account of Credential
              type: string
          required:
            - authType
            - userAccount
            - connectString
            - dbName
            - certificate
            - projectId
          type: object
        - $ref: '#/components/schemas/CommonCredentialInfo'
      description: 'Applicable only for credentials with Cloud Account, Vendor Type as Google and Auth Type as Service Account'
      title: GoogleServiceAccountCredentialInfo
    GroupByAggregationValue:
      description: This is the data model for return aggregation result for single group
      properties:
        funcValue:
          description: value returned by aggregation function for global search entities for a particular group
          type: string
        groupByVals:
          description: list of groupby attribute's Name and value pair.
          items:
            $ref: '#/components/schemas/NameValue'
          nullable: true
          type: array
      title: GroupByAggregationValue
      type: object
    GuestCredentialsCreate:
      description: Faster performance can be achieved during replication by using the VSA access node running on the Amazon instance. Applicable only if the source VM is Windows and the source hypervisor is not Amazon vendor.
      properties:
        computerName:
          description: The name of the computer
          type: string
        password:
          description: The password of the user in Base64 format
          type: string
        userName:
          description: The user to be used to access the computer
          type: string
      title: Guest credentials
      type: object
    HDSContent:
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - properties:
            StorageNamespace:
              description: Namespace for the user account
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Hitachi Content Platform
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - StorageNamespace
          type: object
        - $ref: '#/components/schemas/DedupeStorageList'
      description: ''
      title: Hitachi Content Platform
    HDSContentBucket:
      allOf:
        - properties:
            StorageNamespace:
              description: Namespace for the user account
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Hitachi Content Platform
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - StorageNamespace
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
      description: ''
      title: Hitachi Content Platform
    HDSContentBucketContent:
      allOf:
        - properties:
            StorageNamespace:
              description: Namespace for the user account
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Hitachi Content Platform
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            deduplicationDBLocation:
              description: 'To enable deduplication on this storage, provide path of the Deduplication database (DDB)'
              type: string
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
      description: ''
      title: Hitachi Content Platform
    HFSShareStatusResp:
      description: 'Some common status are 0 - All Okay, 2 - HFS File Server is not up, 11 - HFS not ready'
      properties:
        statusCode:
          format: int32
          type: integer
        statusMessage:
          description: Status message telling information about HFS status
          type: string
      title: HFSShareStatusResp
      type: object
    HPECatalyst:
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - properties:
            cloudType:
              enum:
                - HPE Catalyst Storage
              type: string
            password:
              description: Password used to access StoreOnce management console (Should be in Base64 format)
              format: password
              type: string
            store:
              description: Name of the store that is created on the StoreOnce management console
              type: string
            storeOnceHost:
              description: IP address or COFC identifier in case of Fibre Channel associated with the HPE StoreOnce device
              type: string
            username:
              description: Username used to access StoreOnce management console
              type: string
          required:
            - cloudType
            - storeOnceHost
            - store
            - username
            - password
          type: object
      description: ''
      title: HPE Catalyst Storage
    HPECatalystBucketContent:
      allOf:
        - properties:
            cloudType:
              description: Name of cloud vendor
              enum:
                - HPE Catalyst Storage
              type: string
            password:
              description: Password used to access StoreOnce management console (Should be in Base64 format)
              format: password
              type: string
            store:
              description: Name of the store that is created on the StoreOnce management console
              type: string
            storeOnceHost:
              description: IP address or COFC identifier in case of Fibre Channel associated with the HPE StoreOnce device
              type: string
            username:
              description: Username used to access StoreOnce management console
              type: string
          required:
            - cloudType
          type: object
        - $ref: '#/components/schemas/CloudStorageAdvanced'
      description: ''
      title: HPE Catalyst Storage
    HitachiContentCloud:
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Hitachi Content Platform for Cloud Scale
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
          type: object
        - $ref: '#/components/schemas/DedupeStorageList'
      description: ''
      title: Hitachi Content Platform for Cloud Scale
    HitachiContentCloudBucket:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Hitachi Content Platform for Cloud Scale
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
      description: ''
      title: Hitachi Content Platform for Cloud Scale
    HitachiContentCloudBucketContent:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Hitachi Content Platform for Cloud Scale
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
      description: ''
      title: Hitachi Content Platform for Cloud Scale
    Huawei:
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Huawei Object Storage
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              default: obs.myhwclouds.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
            storageClass:
              description: Appropriate storage class for your account
              enum:
                - Standard
                - Cold
                - Standard - Infrequent access
              type: string
          required:
            - cloudType
            - credentials
            - bucket
            - storageClass
          type: object
        - $ref: '#/components/schemas/DedupeStorageList'
      description: ''
      title: Huawei Object Storage
    HuaweiBucket:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Huawei Object Storage
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              default: obs.myhwclouds.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
            storageClass:
              description: Appropriate storage class for your account
              enum:
                - Standard
                - Cold
                - Standard - Infrequent access
              type: string
          required:
            - cloudType
            - credentials
            - bucket
            - storageClass
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
      description: ''
      title: Huawei Object Storage
    HuaweiBucketContent:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Huawei Object Storage
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            deduplicationDBLocation:
              description: 'To enable deduplication on this storage, provide path of the Deduplication database (DDB)'
              type: string
            serviceHost:
              default: obs.myhwclouds.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
            storageClass:
              description: Appropriate storage class for your account
              enum:
                - Standard
                - Cold
                - Standard - Infrequent access
              type: string
          required:
            - cloudType
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
      description: ''
      title: Huawei Object Storage
    HybridFileStoreSummary:
      description: Summary of a hybrid file store
      properties:
        fileServer:
          $ref: '#/components/schemas/IdName'
        id:
          format: int32
          type: integer
        indexServer:
          $ref: '#/components/schemas/IdName'
        name:
          type: string
        plan:
          $ref: '#/components/schemas/IdName'
        status:
          description: Status of the hybrid file store
          enum:
            - READY
            - IN_PROCESS
          type: string
        statusSummary:
          description: A summary of the current status
          type: string
      type: object
    HybridFileStoresListResp:
      description: List of hybrid file stores
      properties:
        hybridFileStores:
          description: Hybrid file stores list
          items:
            $ref: '#/components/schemas/HybridFileStoreSummary'
          type: array
      type: object
    HyperScaleDiskInfo:
      properties:
        fileSystem:
          description: The file system on the node
          type: string
        product:
          description: The name of the product
          type: string
        status:
          description: The status of the node - whether the node is online or offline and is healthy
          type: string
        vendor:
          description: The name of the vendor
          type: string
      title: HyperScaleDiskInfo
      type: object
    HyperScaleNodeDetails:
      properties:
        diskInformation:
          $ref: '#/components/schemas/HyperScaleDiskInfo'
        disks:
          items:
            $ref: '#/components/schemas/HyperScaleNodeDisk'
          type: array
        node:
          $ref: '#/components/schemas/IdName'
        serverInformation:
          $ref: '#/components/schemas/HyperScaleServerInfo'
      title: HyperScaleNodeDetails
      type: object
    HyperScaleNodeDisk:
      properties:
        capacity:
          description: The total capacity of the mount path
          format: int32
          type: integer
        diskStatus:
          description: The status of the mount path
          type: string
        id:
          description: Id of disk
          format: int32
          type: integer
        mountpath:
          description: The physical path of the mount path in the file system
          type: string
        serialNumber:
          description: The serial number associated with the mount path
          type: string
      title: HyperScaleNodeDisk
      type: object
    HyperScaleServerInfo:
      properties:
        cacheDrive:
          description: The status of the cache drive
          type: string
        cpu:
          description: The CPU related information
          type: string
        cpuUsage:
          description: The CPU performance
          type: string
        fan:
          description: The status of the fan
          type: string
        memoryUsage:
          description: The amount of physical memory currently used
          type: string
        nicStatus:
          description: The status of the NIC cards in the mount path
          type: string
        powerSupply:
          description: The status of the power supply
          type: string
      title: HyperScaleServerInfo
      type: object
    HyperScaleStorage:
      properties:
        name:
          description: Name of HyperScale Storage
          type: string
        nodes:
          description: List of Nodes (MediaAgents) of the HyperScale Storage
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      required:
        - name
        - nodes
      title: HyperScaleStorage
      type: object
    HyperScaleStorageDetails:
      allOf:
        - $ref: '#/components/schemas/IdName'
        - properties:
            associatedPlans:
              description: List of plans associated with this HyperScale storage
              items:
                $ref: '#/components/schemas/IdName'
              type: array
            encryption:
              $ref: '#/components/schemas/Encryption'
            general:
              $ref: '#/components/schemas/HyperScaleStorageGeneralInfo'
            nodes:
              description: List of disks with the Linux MediaAgent
              items:
                $ref: '#/components/schemas/IdNameStatus'
              type: array
            security:
              description: List of users or user groups each having a specific set of roles that determine the kind of operations they can perform on hyperscale storage
              items:
                $ref: '#/components/schemas/SecurityAssoc'
              type: array
          type: object
      title: HyperScaleStorageDetails
    HyperScaleStorageGeneralInfo:
      properties:
        deduplicationSavings:
          description: Specifies the savings in percentage that occurred due to deduplication.
          type: string
        devicePath:
          description: The path of the disk storage area in which the data will be stored.
          type: string
        libraryName:
          description: Library Name of HyperScale Storage
          type: string
        resiliency:
          description: Resiliency or redundancy of this HyperScale storage
          type: string
        sizeOndisk:
          description: The total amount of data stored on the disk after deduplication and compression
          format: int32
          type: integer
        status:
          description: The status of the hyperscale storage pool - whether the storage pool is online or offline
          type: string
        totalCapacity:
          description: The total storage capacity of the selected HyperScale Storage Pool
          format: int32
          type: integer
        totalFreeSpace:
          description: The total free space available in the HyperScale storage pool
          format: int32
          type: integer
      title: HyperScaleStorageGeneralInfo
      type: object
    HyperScaleStorageResp:
      allOf:
        - $ref: '#/components/schemas/IdName'
        - properties:
            copyId:
              description: Id of Storage Policy Copy
              format: int32
              type: integer
          type: object
        - $ref: '#/components/schemas/GenericResp'
      title: HyperScaleStorageResp
    HyperVReplicationGroup:
      allOf:
        - $ref: '#/components/schemas/ReplicationGroup'
        - properties:
            advancedOption:
              $ref: '#/components/schemas/ReplicationGroupAdvOptionsHyperV'
            replicationConfiguration:
              description: Replication configuration for a hyperv replication group
              items:
                $ref: '#/components/schemas/ReplicationConfigurationHyperV'
              type: array
            vendor:
              description: Vendor type of this replication group. Values in enum are case sensitive
              enum:
                - HyperV
              type: string
          required:
            - vendor
          type: object
      description: Replication group details pertaining to hyperV
      title: HyperVReplicationGroup
    HypervisorListResp:
      properties:
        HypervisorType:
          $ref: '#/components/schemas/VSVendor'
        clientActivityControl:
          $ref: '#/components/schemas/ActivityControlOptionsProp'
        commcell:
          $ref: '#/components/schemas/CommcellInfo'
        displayName:
          description: This gives the name of the Hypervisor as it shown on the admin console or GUI.
          type: string
        hostName:
          description: This give the host name of the Hypervisor.
          type: string
        id:
          description: This gives the id of the Hypervisor.
          format: int32
          type: integer
        instance:
          $ref: '#/components/schemas/IdName'
        manageSnapshot:
          $ref: '#/components/schemas/IdName'
        name:
          description: This give the name of the Hypervisor.
          type: string
        status:
          $ref: '#/components/schemas/RetireClientPhase'
        tags:
          description: Array of all the tags associated with hypervisor.
          items:
            $ref: '#/components/schemas/IdNameValue'
          type: array
        version:
          description: VMware Vcenter Version
          type: string
      type: object
    HypervisorPropertiesResp:
      properties:
        accessNodeList:
          $ref: '#/components/schemas/accessNodeListModel'
        accountDetails:
          $ref: '#/components/schemas/hypervisorAccountDetails'
        activityControl:
          $ref: '#/components/schemas/ActivityControlOptions'
        displayName:
          description: Display Name
          type: string
        general:
          $ref: '#/components/schemas/hypervisorGeneralProperties'
        hypervisorCommonProperties:
          $ref: '#/components/schemas/hypervisorCommonProps'
        id:
          format: int32
          type: integer
          x-terraform-id: true
        instance:
          $ref: '#/components/schemas/IdName'
        manageSnapshot:
          $ref: '#/components/schemas/IdName'
        name:
          description: Hypervisor Name
          nullable: true
          type: string
        settings:
          $ref: '#/components/schemas/hypervisorSettings'
      type: object
    IBM:
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - IBM Cloud Object Storage (S3-compatible)
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
          type: object
        - $ref: '#/components/schemas/DedupeStorageList'
      description: ''
      title: IBM Cloud Object Storage (S3-compatible)
    IBMBucket:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - IBM Cloud Object Storage (S3-compatible)
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
      description: ''
      title: IBM Cloud Object Storage (S3-compatible)
    IBMBucketContent:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - IBM Cloud Object Storage (S3-compatible)
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
      description: ''
      title: IBM Cloud Object Storage (S3-compatible)
    IdName:
      properties:
        id:
          format: int32
          type: integer
          x-terraform-omitempty: true
          x-terraform-set-key: true
        name:
          nullable: true
          type: string
      type: object
    IdNameCompany:
      properties:
        company:
          $ref: '#/components/schemas/IdName'
        id:
          format: int32
          type: integer
          x-terraform-omitempty: true
        name:
          type: string
      type: object
    IdNameCount:
      properties:
        count:
          format: int32
          type: integer
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      type: object
    IdNameDisplayName:
      properties:
        displayName:
          nullable: true
          type: string
        id:
          format: int32
          type: integer
          x-terraform-omitempty: true
        name:
          nullable: true
          type: string
      type: object
    IdNameDisplayNameCompany:
      properties:
        company:
          $ref: '#/components/schemas/IdName'
        displayName:
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      type: object
    IdNameFullName:
      properties:
        fullName:
          type: string
        id:
          format: int32
          type: integer
          x-terraform-omitempty: true
        name:
          type: string
      title: IdNameFullName
      type: object
    IdNameGUID:
      properties:
        GUID:
          type: string
        id:
          format: int32
          type: integer
          x-terraform-omitempty: true
        name:
          type: string
      type: object
    IdNameProvider:
      properties:
        id:
          format: int32
          type: integer
          x-terraform-omitempty: true
        name:
          type: string
        provider:
          $ref: '#/components/schemas/IdName'
      type: object
    IdNameStatus:
      properties:
        id:
          format: int32
          type: integer
          x-terraform-omitempty: true
        name:
          type: string
        status:
          type: string
      type: object
    IdNameType:
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        type:
          type: string
      type: object
    IdNameValue:
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        value:
          type: string
      type: object
    IdType:
      properties:
        id:
          format: int32
          type: integer
        type:
          type: string
      title: IdType
      type: object
    IdentityServer:
      description: Get identity server response
      properties:
        company:
          $ref: '#/components/schemas/IdName'
        configured:
          description: Boolean to indicate whether Identity server is configured.
          type: boolean
        id:
          description: Identity server id
          format: int32
          type: integer
        name:
          description: Identity server name
          type: string
        samlType:
          description: Name of the IdP. Available only if type is SAML.
          enum:
            - UNKNOWN
            - AZURE
            - ADFS
            - OKTA
          type: string
        type:
          description: Identity server service type in Enum string
          enum:
            - SAML
            - ACTIVE_DIRECTORY
            - APPLE_DIRECTORY_SERVICE
            - ORACLE_DIRECTORY
            - OPEN_LDAP
            - LDAP_SERVER
            - OTHER
          type: string
      title: IdentityServer
      type: object
    IdentityServerAsset:
      properties:
        identityServers:
          description: List of identity server names
          items:
            type: string
          type: array
        startDataCollection:
          default: false
          description: Flag to signify if data collection job needs to be invoked after addition of identity server
          type: boolean
      required:
        - identityServers
      title: IdentityServerAsset
      type: object
    IdentityServersListResp:
      description: List of identity servers
      properties:
        identityServers:
          description: Identity servers list
          items:
            $ref: '#/components/schemas/IdentityServer'
          type: array
      type: object
    IncludeEntitiesForPlanRuleEvaluation:
      description: Entities that need to be included for plan rule evaluation
      properties:
        subclients:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      title: IncludeEntitiesForPlanRuleEvaluation
      type: object
    IndexCache:
      properties:
        logsCache:
          $ref: '#/components/schemas/MediaAgentLogsCache'
        path:
          description: Path where the index cache is maintained.
          type: string
      type: object
    IndexServerSummary:
      description: Summary of an index server
      properties:
        OS:
          description: Operating system of the index server
          type: string
        cloudId:
          description: Id of the index server cloud
          format: int32
          type: integer
        displayName:
          description: Display name for the index server
          type: string
        id:
          format: int32
          type: integer
        name:
          type: string
      type: object
    IndexServersListResp:
      description: List of index servers
      properties:
        indexServers:
          items:
            $ref: '#/components/schemas/IndexServerSummary'
          type: array
      type: object
    IndexingStatusType:
      default: NOT_APPLICABLE
      description: Type of indexing status.
      enum:
        - NOT_APPLICABLE
        - ENABLED
        - SETUP_IN_PROGRESS
      type: string
    InfrastructureTypes:
      description: 'These are different types of infrastructure provided for storage in companies. It can be rented from the provider, owned or can be a hybrid. Cannot move back to rented storage from owned storage and cannot move back to rented storage/owned storage from rented and owned storage.'
      enum:
        - RENTED_STORAGE
        - OWN_STORAGE
        - RENTED_AND_OWN_STORAGE
      format: ''
      type: string
    InstallMediaAgent:
      properties:
        OSType:
          $ref: '#/components/schemas/MediaAgentInstallOSType'
        SSHKeyFilePassphrase:
          description: Applicable only for Unix OSType and should be in base64 encoded string
          type: string
        SSHKeyPath:
          description: Applicable only for Unix OSType. Path provided should be valid on the CommServ Client
          type: string
        hostNames:
          description: Host names where MediaAgent package is required to be installed
          items:
            minLength: 1
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        installLocation:
          description: Holds install path according to the chosen OSType
          type: string
        password:
          description: password should be in base64 encoded string. password is optional only if SSHKeyFilePassphrase is specified
          type: string
        rebootIfRequired:
          default: false
          type: boolean
        username:
          description: Username to access hostnames
          type: string
      required:
        - hostNames
        - username
      type: object
    InstanceListResp:
      description: Gives the list of instances.
      properties:
        instances:
          items:
            $ref: '#/components/schemas/InstanceSummary'
          type: array
      type: object
    InstanceStatus:
      description: 'The status of the instance. If the instance isn''t ready, the reason is also provided.'
      enum:
        - READY
        - NOT_READY
      type: string
    InstanceSummary:
      description: Gives the summary of each instance.
      properties:
        SLA:
          $ref: '#/components/schemas/SLADetails'
        applicationSize:
          description: Gives the application size of the instance. It is returned in bytes.
          format: int32
          type: integer
        client:
          $ref: '#/components/schemas/IdName'
        commcell:
          $ref: '#/components/schemas/CommcellInfo'
        company:
          $ref: '#/components/schemas/IdName'
        databaseEngine:
          $ref: '#/components/schemas/DatabaseEngine'
        id:
          description: Gives the id of the instance.
          format: int32
          type: integer
        lastBackup:
          $ref: '#/components/schemas/LastBackupJobInfo'
        name:
          description: Gives the name of the instance.
          type: string
        notReadyReason:
          description: 'If the instance isn''t ready, this provides the reason as to why the instance isn''t ready.'
          type: string
        plan:
          $ref: '#/components/schemas/IdName'
        server:
          description: Gives the server to which the instance belongs to.
          type: string
        status:
          $ref: '#/components/schemas/InstanceStatus'
        vendor:
          $ref: '#/components/schemas/Vendors'
      title: ''
      type: object
    InstantClonesListResp:
      properties:
        instantClones:
          items:
            $ref: '#/components/schemas/InstantClonesSummary'
          type: array
      type: object
    InstantClonesSummary:
      description: Source Client - The server where the database was backed up from. Source instance - The backed up database instance. Mounted host - The server where the DB snapshot has been mounted to bring up the clone. Target instance - The DB instance name which was clone target.
      properties:
        cloneJobId:
          description: Job id for clone operation
          format: int32
          type: integer
        commcell:
          $ref: '#/components/schemas/CommcellInfo'
        creationTime:
          description: The time when the database clone was created. The time is provided in unix time format.
          format: int32
          type: integer
        databaseAsOfTime:
          description: The Point in time up to which the database has been recovered using the backups. The time is provided in unix time format.
          format: int32
          type: integer
        expirationDate:
          description: The time till which the clone is kept active and will get cleaned up automatically after that. The time is provided in unix time format.
          format: int32
          type: integer
        mountedHost:
          $ref: '#/components/schemas/IdName'
        sourceClient:
          $ref: '#/components/schemas/IdName'
        sourceInstance:
          $ref: '#/components/schemas/IdName'
        sqlRecoveryId:
          description: Id of sql recovery point for SQL Agent
          format: int32
          type: integer
        status:
          description: Status of instant clone
          enum:
            - CREATED
            - DELETING
            - EXPIRED
          type: string
        targetInstance:
          $ref: '#/components/schemas/IdName'
      type: object
    IntelliSnapClients:
      description: Response template to get IntelliSnap enabled Clients
      properties:
        client:
          $ref: '#/components/schemas/IdName'
        enableIntelliSnap:
          default: true
          description: Whether IntelliSnap is enabled or not for the client
          type: boolean
      title: IntelliSnapClients
      type: object
    IntelliSnapSubclients:
      description: Response Template to get IntelliSnap enabled Subclients
      properties:
        backupset:
          $ref: '#/components/schemas/IdName'
        client:
          $ref: '#/components/schemas/IdName'
        enableIntelliSnap:
          default: true
          description: Whether IntelliSnap is enabled or not
          type: boolean
        subclient:
          $ref: '#/components/schemas/IdName'
      title: IntelliSnapSubclients
      type: object
    InventoryAssetCreateRequest:
      allOf:
        - $ref: '#/components/schemas/IdentityServerAsset'
        - $ref: '#/components/schemas/FileServerAsset'
        - $ref: '#/components/schemas/ObjectStorageAsset'
        - properties:
            assetType:
              $ref: '#/components/schemas/InventoryAssetType'
          type: object
      description: ''
      title: InventoryAssetCreateRequest
      x-internal: true
    InventoryAssetDetails:
      allOf:
        - $ref: '#/components/schemas/InventoryAssetSummary'
        - properties:
            properties:
              items:
                $ref: '#/components/schemas/NameValue'
              type: array
          type: object
    InventoryAssetList:
      properties:
        assets:
          items:
            $ref: '#/components/schemas/InventoryAssetSummary'
          type: array
      title: InventoryAssetList
      type: object
    InventoryAssetSummary:
      properties:
        createdAt:
          format: int32
          type: integer
        id:
          type: string
        lastCollectionTime:
          format: int32
          type: integer
        name:
          type: string
        status:
          $ref: '#/components/schemas/DcubeJobState'
        type:
          $ref: '#/components/schemas/InventoryAssetType'
      title: InventoryAssetSummary
      type: object
    InventoryAssetType:
      enum:
        - NONE
        - IDENTITY_SERVER
        - FILE_SERVER
        - OBJECT_STORAGE
      title: InventoryAssetType
      type: string
    InventoryAssociatedDatasource:
      properties:
        application:
          $ref: '#/components/schemas/ActivateApplication'
        id:
          format: int32
          minimum: 0
          type: integer
        name:
          type: string
        plan:
          $ref: '#/components/schemas/IdName'
        type:
          $ref: '#/components/schemas/DataSourceType'
      title: InventoryAssociatedDatasource
      type: object
      x-stoplight:
        id: ij6y2evo02j07
    InventoryAssociatedDatasourceList:
      description: List of data sources associated to the inventory
      properties:
        dataSources:
          items:
            $ref: '#/components/schemas/InventoryAssociatedDatasource'
          type: array
      title: InventoryAssociatedDatasourceList
      type: object
      x-stoplight:
        id: vwkeeh852x1ws
    InventoryCreateRequest:
      description: ''
      properties:
        identityServers:
          description: List of AD servers to be analyzed
          items:
            type: string
          type: array
        indexServer:
          $ref: '#/components/schemas/IndexServerSummary'
        name:
          description: Name of the inventory
          type: string
      required:
        - name
        - indexServer
      title: InventoryCreateRequest
      type: object
    InventoryDetails:
      properties:
        createdOn:
          description: Inventory creation time in unix epoch format
          format: int32
          type: integer
        displayName:
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        indexServer:
          $ref: '#/components/schemas/IndexServerSummary'
        name:
          nullable: true
          type: string
        owner:
          description: Inventory Owner
          type: string
      title: InventoryDetails
      type: object
    InventoryList:
      properties:
        inventories:
          description: List of inventories
          items:
            $ref: '#/components/schemas/InventoryDetails'
          type: array
      title: InventoryList
      type: object
    IpAddressSetting:
      properties:
        SubnetMaskNoDhcp:
          description: Subnet mask when dhcp is not selected
          type: string
        defaultGateway:
          description: Default gateway
          type: string
        defaultGatewayNoDhcp:
          description: Defaault gateway when dhcp is not selected
          type: string
        destinationIp:
          description: Destination IP
          type: string
        hostName:
          description: Hostname
          type: string
        sourceIp:
          description: Source IP
          type: string
        subnetMask:
          description: Subnet mask
          type: string
        useDhcp:
          description: Use DHCP
          type: boolean
      title: IpAddressSetting
      type: object
    IpAddressSettingVMWareCreate:
      description: A mapping of IP between the source and the destination VM with an option to configure either a dynamic or a static IP.
      properties:
        destinationAlternateDNS:
          description: The alternate DNS server for the destination VM.  Provide only if DHCP is not enabled
          type: string
        destinationAlternateWINS:
          description: The alternate WINS server for the destination VM.  Provide only if DHCP is not enabled
          type: string
        destinationIP:
          description: The full IP address or an IP address pattern for the destination VM. Provide only if DHCP is not enabled.
          type: string
        destinationPreferredDNS:
          description: The preferred DNS server for the destination VM.  Provide only if DHCP is not enabled
          type: string
        destinationPreferredWINS:
          description: The preferred WINS server for the destination VM.  Provide only if DHCP is not enabled
          type: string
        destinationSubnetMask:
          description: The subnet mask for the destination VM.  Provide only if DHCP is not enabled.
          type: string
        destinationdefaultGateway:
          description: The default gateway for the destination VM.  Provide only if DHCP is not enabled.
          type: string
        hostname:
          description: The host name to be applied for the destination VM.
          type: string
        sourceDefaultGateway:
          description: The default gateway of the source VM.
          type: string
        sourceIP:
          description: The full IP address or an IP address pattern of the source VM.
          type: string
        sourceSubnetMask:
          description: The subnet mask of the source VM.
          type: string
        useDhcp:
          default: false
          description: Automatically assigns available IP addresses to be used with the specified destination network.
          type: boolean
      title: IpAddressSetting
      type: object
    IsoInfo:
      description: Info for the Windows/Unix ISO files
      properties:
        isoPath:
          description: Path for the Windows/Unix ISO files
          type: string
        osType:
          description: OS Type name
          enum:
            - UNIX
            - WINDOWS
          type: string
      title: IsoInfo
      type: object
    JobDetailForStorage:
      description: Details of a Job on storage.
      properties:
        agentType:
          $ref: '#/components/schemas/IdName'
        avgThroughput:
          description: Average throughput of the job
          format: float
          type: number
        backupSet:
          $ref: '#/components/schemas/IdName'
        copiedTime:
          description: Auxcopied time
          format: int64
          type: integer
        dataVerificationStatus:
          description: 'Specify if Job data is verified by periodic DV jobs. Possible values [0 = unchecked, 1 = expired, 2 = do not check, 3 = to be checked, 4 = partial checked, 5 = successful, 6 = failed]'
          format: int32
          type: integer
        dataWritten:
          description: Size of the data stored on the media.
          format: int64
          type: integer
        deduplicated:
          description: Set to true if Job is deduplicated.
          type: boolean
        description:
          description: Job description
          type: string
        duration:
          description: The time duration for which the job ran
          format: int64
          type: integer
        encrypted:
          description: Set to true if Job is encrypted
          type: boolean
        endTime:
          description: The date and time the job ended
          format: int64
          type: integer
        hardwareEncrypted:
          description: Set to true if Job is hardware encrypted
          type: boolean
        instance:
          $ref: '#/components/schemas/IdName'
        isAged:
          description: Set to true if Job is marked as aged.
          type: boolean
        isSoftAged:
          description: Indicates if job is soft aged or not.
          type: boolean
        jobId:
          description: The system-generated Id assigned to the job
          format: int32
          type: integer
        jobType:
          description: Backup level of the Job
          type: string
        lastVerifiedOn:
          description: Last DataVerification time
          type: string
        parentJobId:
          description: Parent JobId in a linked job
          format: int64
          type: integer
        region:
          $ref: '#/components/schemas/IdName'
        requiredByJobs:
          description: Comma separated list of linked Jobs
          type: string
        retainUntil:
          description: The date and time until job should be retained
          format: int64
          type: integer
        retainedBy:
          description: Reason for retention
          format: int32
          type: integer
        retentionReason:
          description: Reason for retaining the job
          type: string
        savingPercentage:
          description: 'The percentage of space saved due to deduplication and compression, if employed'
          format: float
          type: number
        server:
          $ref: '#/components/schemas/IdName'
        sizeOfApplication:
          description: The amount of application data that was protected during the job
          format: int64
          type: integer
        startTime:
          description: The date and time the job started
          format: int64
          type: integer
        status:
          description: The status of the job
          type: string
        statusId:
          description: The status id of the job
          format: int32
          type: integer
        strDataVerificationStatus:
          description: 'Specify if Job data is verified by periodic DV jobs. Possible values [unchecked, expired, do not check, to be checked, partial checked, successful, failed]'
          enum:
            - Not Picked
            - Expired
            - Picked
            - Partial
            - Successful
            - Failed
            - Invalid data received.
          type: string
        strRetainedBy:
          description: String defining reason for retention
          enum:
            - No Data Available
            - User
            - Extended Retention
            - Basic Retention
          type: string
        subClient:
          $ref: '#/components/schemas/IdName'
        username:
          description: User who initiated the job
          type: string
      title: JobDetailForStorage
      type: object
    JobId:
      properties:
        jobId:
          type: string
      title: ''
      type: object
    JobOperationOnCopyReq:
      properties:
        commcellId:
          description: ID for chosen commcell
          format: int32
          type: integer
        copyId:
          description: ID for chosen copy
          format: int32
          type: integer
        jobIds:
          description: Comma separated Job IDs to run job operation on
          format: int32
          items:
            format: int32
            type: integer
          type: array
        loadArchiverJobs:
          default: false
          description: Defines whether archiver jobs need to be computed.
          type: boolean
        loadDependentJobs:
          default: false
          description: Defines whether dependent jobs need to be computed.
          type: boolean
        opType:
          $ref: '#/components/schemas/JobOperationType'
        retainUntilTime:
          description: Job will be retained till specified time. The time is provided in unix time format.
          format: int32
          type: integer
        storagePolicyId:
          description: ID for chosen storage policy
          format: int32
          type: integer
      required:
        - storagePolicyId
        - copyId
        - opType
        - jobIds
        - commcellId
      title: JobOperationOnCopyReq
      type: object
    JobOperationOnCopyResp:
      properties:
        archiverJobsExist:
          description: Whether archiver jobs were found
          type: boolean
        dependentJobsExist:
          description: Whether dependent jobs were found
          type: boolean
        error:
          $ref: '#/components/schemas/GenericResp'
        jobInfo:
          description: List of jobs being run due to specified job operation
          items:
            $ref: '#/components/schemas/JobDetailForStorage'
          type: array
      title: JobOperationOnCopyResp
      type: object
    JobOperationType:
      enum:
        - DELETE
        - RETAIN
        - DO_NOT_RETAIN
        - DISALLOW_COPY
        - DISALLOW_COPY_ALL
        - ALLOW_COPY
      type: string
    JobStatus:
      description: Status of the last backup job performed.
      enum:
        - NEVER_BACKED_UP
        - COMPLETED
        - FAILED
        - COMPLETED_WITH_ERRORS
        - KILLED
        - SUSPENDED
        - INTERRUPTED
        - ANY_STATUS
        - SKIPPED
        - FAILED_TO_START
        - SYNCHRONIZED
        - NOT_SYNCHRONIZED
        - NOT_ATTEMPTED
        - STARTED
        - COMPLETED_WITH_WARNINGS
        - SYSTEM_FAILED
        - COMMITTED
      format: ''
      type: string
    K8sRestoreModifierAPIReq:
      description: Request body for K8s Modifier
      properties:
        modifierYAML:
          description: Restore Modifier YAML
          type: string
      type: object
    K8sRestoreModifierAPIResp:
      description: Response body for K8s Modifier
      properties:
        outputYAML:
          description: Output YAML
          type: string
        resp:
          $ref: '#/components/schemas/GenericResp'
      type: object
    KeyManagementServer:
      description: ''
      properties:
        id:
          description: Gives the key management server id
          format: int32
          type: integer
        name:
          description: Gives the name of the key management server
          type: string
        type:
          description: Gives the key provider type for the key management server
          enum:
            - NONE
            - COMMVAULT
            - KMIP
            - AWS_KMS
            - AZURE_KEY_VAULT
            - SAFENET
            - PASSPHRASE
          type: string
      title: KeyManagementServer
      type: object
      x-tags:
        - KeyManagementServer
    LDAPAttribute:
      description: Attribute of an LDAP server
      properties:
        defaultValue:
          description: Default value of the attribute
          type: string
        id:
          description: ID of the attribute
          format: int32
          type: integer
        isOverridden:
          description: Denotes if the value of the attribute is overridden
          type: boolean
        name:
          description: Name of the attribute
          type: string
        value:
          description: Current value of the attribute
          type: string
      required:
        - id
        - value
      type: object
    LDAPAttributes:
      description: Provider attributes for LDAP app
      properties:
        baseDN:
          default: base DN
          description: Custom attribute string of LDAP query paramters
          type: string
        uniqueIdentifier:
          default: sAMAccountName
          description: Custom attribute string of LDAP query paramters
          type: string
        userFilter:
          default: (&(objectCategory=User)(sAMAccountName=*))
          description: Custom attribute string of LDAP query paramters
          type: string
        userGroupFilter:
          default: (objectClass=group)
          description: Custom attribute string of LDAP query paramters
          type: string
      title: ''
      type: object
      x-tags:
        - IdentityServer
    LDAPRequest:
      description: Create LDAP request
      properties:
        accessViaClient:
          description: Denotes if the domain is accessed via a proxy
          type: boolean
        doNotValidateNetBIOSName:
          description: 'If true, the NetBIOS name will not be validated. Providing a custom name without validation may cause problems during Single Sign-On.'
          type: boolean
        id:
          description: Required when configuring an existing dummy domain as LDAP/AD
          format: int32
          type: integer
        password:
          description: 'Password to create LDAP app, it should be base64 encoded'
          format: base64
          type: string
        proxies:
          description: List of proxies used to connect to the domain. Required if accessViaClient is true.
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        username:
          description: Username to create LDAP/AD app
          type: string
      required:
        - username
        - password
      title: ''
      type: object
      x-tags:
        - IdentityServers
    LDAPServerType:
      allOf:
        - description: Specific properties for LDAP Server app
          properties:
            LDAPQueryParameters:
              $ref: '#/components/schemas/LDAPAttributes'
            directoryType:
              description: LDAP server directory type - 14
              enum:
                - LDAP_SERVER
              type: string
            host:
              description: Domain shortname
              type: string
            useSecureLDAP:
              description: Boolean to indicate if the app use secure LDAP
              type: boolean
          required:
            - directoryType
            - host
          type: object
        - $ref: '#/components/schemas/LDAPRequest'
      description: Model to create new LDAP identity server for LDAP Server type
      title: ''
      x-tags:
        - IdentityServers
    LaptopOwnerInfo:
      description: Model used for laptop owner mapping
      properties:
        client:
          $ref: '#/components/schemas/IdName'
        company:
          $ref: '#/components/schemas/IdName'
        configured:
          description: This indicates if the laptop has been installed or not
          type: boolean
        host:
          description: host name of the laptop
          type: string
        id:
          description: Unique Id
          format: int32
          type: integer
        laptopName:
          description: name of the laptop
          type: string
        osType:
          description: OS type of the laptop. Can be LINUX or MAC
          enum:
            - MAC
            - WIN
          type: string
        ownerEmail:
          description: Email address of the owner
          type: string
        ownerUPN:
          description: UPN of the owner
          type: string
        serialNumber:
          description: This is the serial number
          type: string
      required:
        - id
      title: LaptopOwnerInfo
      type: object
    LaptopOwnerMapping:
      description: List of laptop owner info
      properties:
        error:
          $ref: '#/components/schemas/GenericResp'
        laptopOwnerMapping:
          items:
            $ref: '#/components/schemas/LaptopOwnerInfo'
          type: array
      title: LaptopOwnerMapping
      type: object
    LaptopOwnerOption:
      description: Options to automatically assign laptop owners
      enum:
        - ALL_LOGGED_IN_AD_USERS
        - FIRST_USER_TO_LOGIN
        - ALL_USERS_OF_USERGROUPS
      nullable: true
      title: LaptopOwnerOption
      type: string
    LaptopOwnership:
      description: Details of automatic laptop ownership assignment
      properties:
        assignLaptopOwnerAutomatically:
          description: Whether the laptop ownership assignment is automatic or not
          type: boolean
        laptopOwnerOption:
          $ref: '#/components/schemas/LaptopOwnerOption'
        userGroups:
          description: 'Comma seperated usergroups to add users from, when the laptopOwnerOption is ''ALL_USERS_OF_USERGROUPS'''
          nullable: true
          type: string
      title: LaptopOwnership
      type: object
    LaptopPlan:
      description: Create a new Laptop Plan
      properties:
        alerts:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        allowPlanOverride:
          default: false
          description: Flag to enable overriding of plan. Plan cannot be overriden by default.
          type: boolean
        allowedFeatures:
          $ref: '#/components/schemas/LaptopPlanAllowedFeatures'
        backupContent:
          $ref: '#/components/schemas/LaptopPlanBackupContent'
        inviteUsersOrGroups:
          description: The users and user groups who should install the end-user Endpoint package on their devices.
          items:
            $ref: '#/components/schemas/PlanUserOrGroups'
          type: array
        networkResources:
          $ref: '#/components/schemas/LaptopPlanNetworkResources'
        overrideRestrictions:
          $ref: '#/components/schemas/LaptopPlanOverrideSettings'
        parentPlan:
          $ref: '#/components/schemas/IdName'
        planName:
          type: string
        retention:
          $ref: '#/components/schemas/LaptopPlanRetention'
        storageAndSchedule:
          $ref: '#/components/schemas/LaptopPlanStorageAndSchedule'
      required:
        - planName
      title: LaptopPlan
      type: object
    LaptopPlanAllowedFeatures:
      description: Create/modify allowed features of laptop plan
      properties:
        DLP:
          default: true
          description: Flag to enable Data loss protection
          type: boolean
        archiving:
          default: false
          description: Flag to enable archiving of laptop data
          type: boolean
        archivingRules:
          $ref: '#/components/schemas/ArchivingRules'
        edgeDrive:
          default: false
          description: Flag to enable Edge Drive
          type: boolean
        edgeDriveSettings:
          $ref: '#/components/schemas/EdgeDriveSettingsPlan'
      type: object
    LaptopPlanBackupContent:
      properties:
        fileSystemQuota:
          default: -1
          description: Maximum number of gigabytes that you can store in the File System. Giving value as -1 means infinite file system quota.
          format: int32
          type: integer
        macExcludedPaths:
          default:
            - Disk Images
            - Executable
            - Temporary Files (Mac)
            - /Library
            - '<WKF,Library>'
          description: Paths to exclude for Mac
          items:
            type: string
          nullable: true
          type: array
        macIncludedPaths:
          default:
            - Desktop
            - Documents
            - MigrationAssistant
          description: Paths to include for Mac
          items:
            type: string
          nullable: true
          type: array
        unixExcludedPaths:
          default:
            - Disk Images
            - Executable
            - Temporary Files (Linux)
          description: Paths to exclude for UNIX
          items:
            type: string
          nullable: true
          type: array
        unixIncludedPaths:
          default:
            - Desktop
            - Documents
          description: Paths to include for UNIX
          items:
            type: string
          nullable: true
          type: array
        windowsExcludedPaths:
          default:
            - '<WKF,AppData>'
            - '<WKF,LocalAppData>'
            - Disk Images
            - Executable
            - Temporary Files (Windows)
            - 'C:/Program Files'
            - 'C:/Program Files (x86)'
            - 'C:/Windows'
          description: Paths to exclude for Windows
          items:
            type: string
          nullable: true
          type: array
        windowsIncludedPaths:
          default:
            - Desktop
            - Documents
            - MigrationAssistant
          description: Paths to include for Windows
          items:
            type: string
          nullable: true
          type: array
      title: ''
      type: object
    LaptopPlanDetails:
      properties:
        additionalProperties:
          $ref: '#/components/schemas/PlanAdditionalProperties'
        alerts:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        allowPlanOverride:
          description: Flag to enable overriding of plan
          type: boolean
        allowedFeatures:
          $ref: '#/components/schemas/AllowedFeatures'
        associatedUsersAndUserGroups:
          description: ''
          items:
            $ref: '#/components/schemas/PlanUserOrGroups'
          type: array
        backupContent:
          $ref: '#/components/schemas/LaptopPlanBackupContent'
        backupDestinations:
          items:
            $ref: '#/components/schemas/PlanBackupDestination'
          type: array
        general:
          $ref: '#/components/schemas/LaptopPlanGeneralInfo'
        inheritSettings:
          $ref: '#/components/schemas/LaptopPlanInheritSettings'
        networkResources:
          $ref: '#/components/schemas/LaptopPlanNetworkResources'
        offlineLaptops:
          $ref: '#/components/schemas/AutoRetireDevices'
        overrideRestrictions:
          $ref: '#/components/schemas/LaptopPlanOverrideSettings'
        permissions:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        plan:
          $ref: '#/components/schemas/IdName'
        regionsConfigured:
          description: Specifies if the destinations are associated to regions
          type: boolean
        retention:
          $ref: '#/components/schemas/LaptopPlanRetention'
        rpo:
          $ref: '#/components/schemas/LaptopPlanRPO'
      title: ''
      type: object
    LaptopPlanGeneralInfo:
      properties:
        laptops:
          description: Number of laptops associated with this plan
          format: int32
          minimum: 0
          type: integer
        optimizedForCloudBackups:
          default: false
          description: 'This feature allows laptops to write backup directly to the cloud storage. It helps to optimize scale by reducing server dependency and extra data hops. Once the feature is enabled, the existing and the newly-added laptops use optimized backups.'
          type: boolean
        storageResourcePoolMap:
          description: Optimization for cloud backups can only be used when resource pool are configured for atleast one storage.
          items:
            $ref: '#/components/schemas/StorageResourcePoolMap'
          type: array
        users:
          description: Number of users associated with this plan
          format: int32
          minimum: 0
          type: integer
      type: object
    LaptopPlanInheritSettings:
      properties:
        RPO:
          $ref: '#/components/schemas/PlanOverridenOptions'
        backupContent:
          $ref: '#/components/schemas/PlanOverridenOptions'
        basePlan:
          $ref: '#/components/schemas/IdName'
        retention:
          $ref: '#/components/schemas/PlanOverridenOptions'
        storagePool:
          $ref: '#/components/schemas/PlanOverridenOptions'
      title: LaptopPlanInheritSettings
      type: object
    LaptopPlanNetworkResources:
      properties:
        throttleReceive:
          default: -1
          description: Maximum kilobits per second to throttle the receiving speed of data. Giving value as -1 means infinite throttle send speed i.e. no limit
          format: int32
          type: integer
        throttleSend:
          default: -1
          description: Maximum kilobits per second to throttle the emitting speed of data. Giving value as -1 means infinite throttle send speed i.e. no limit
          format: int32
          type: integer
      title: ''
      type: object
    LaptopPlanOverrideSettings:
      description: 'To allow the derived plans that use this plan as the base plan to override the settings, property allowPlanOverride must be true, and then select one of the options for Storage pool, RPO , Folders to backup, and Retention.'
      properties:
        RPO:
          $ref: '#/components/schemas/PlanOverrideOptions'
        backupContent:
          $ref: '#/components/schemas/PlanOverrideOptions'
        retention:
          $ref: '#/components/schemas/PlanOverrideOptions'
        storagePool:
          $ref: '#/components/schemas/PlanOverrideOptions'
      type: object
    LaptopPlanRPO:
      properties:
        SLA:
          $ref: '#/components/schemas/SLAOptions'
        backupFrequency:
          description: Specify incremental backup frequency in minutes. Backup operation will start as per the time zone of the associated server.
          format: int32
          type: integer
      type: object
    LaptopPlanRetention:
      properties:
        deletedItemRetention:
          default: 730
          description: Amount of days after deletion of files to keep the items. Giving value as -1 means to retain files indefinitely.
          format: int32
          type: integer
        fileVersions:
          $ref: '#/components/schemas/LaptopPlanRetentionFileVersions'
      title: ''
      type: object
    LaptopPlanRetentionFileVersions:
      description: 'Can retain file versions for one of following three cases:daysversionscustom versions (daily, weekly monthly)If not defined then, 5 versions are considered the default setting.'
      properties:
        dailyVersions:
          description: 'Custom version rule: Retain daily versions for this many day(s)'
          format: int32
          type: integer
        days:
          description: Retain files for this many days. Year(s) or month(s) need to be converted to day(s)
          format: int32
          type: integer
        monthlyVersions:
          description: 'Custom version rule: Retain monthly versions for this many month(s)'
          format: int32
          type: integer
        versions:
          default: 5
          description: Retain this many file versions. This is considered as default if no file retention rule is specified.
          format: int32
          type: integer
        weeklyVersions:
          description: 'Custom version rule: Retain weekly versions for this many week(s)'
          format: int32
          type: integer
      title: ''
      type: object
    LaptopPlanStorageAndSchedule:
      description: ''
      properties:
        backupFrequency:
          default: 480
          description: Recovery Point Objective (RPO) is the maximum amount of time that data can be lost during a service disruption. Your RPO determines the frequency of your backup jobs. Your RPO is met through automatic options. The time specified in minutes here is your RPO if none of the automatic options are met. Default is 480 minutes (8 hours).
          format: int32
          type: integer
        primaryStorage:
          $ref: '#/components/schemas/IdName'
        secondaryStorage:
          $ref: '#/components/schemas/IdName'
      required:
        - primaryStorage
      title: ''
      type: object
    LaptopPlanUpdateGeneralInfo:
      properties:
        optimizedForCloudBackups:
          description: 'This feature allows laptops to write backup directly to the cloud storage. It helps to optimize scale by reducing server dependency and extra data hops. Once the feature is enabled, the existing and the newly-added laptops use optimized backups.'
          type: boolean
      type: object
    LaptopPlanUpdateRPO:
      properties:
        SLA:
          $ref: '#/components/schemas/SLAUpdateOptions'
        backupFrequency:
          description: Specify incremental backup frequency in minutes. Backup operation will start as per the time zone of the associated server.
          format: int32
          type: integer
      type: object
    LaptopsAdminConsole:
      properties:
        configured:
          description: defines if the laptop is configured or not
          type: boolean
        email:
          description: comma seperated value for email of the laptop
          type: string
        id:
          description: id of the laptop
          format: int32
          type: integer
        lastBackupJobInfo:
          $ref: '#/components/schemas/LastBackupJobInfo'
        lastSuccessfulBackup:
          description: time (in unix timestamp) for the last successful backup
          format: int32
          type: integer
        name:
          description: name of the laptop
          type: string
        owners:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        plan:
          $ref: '#/components/schemas/IdName'
        sla:
          $ref: '#/components/schemas/SLADetails'
        slaReason:
          description: reason for the current sla status
          type: string
        tags:
          items:
            $ref: '#/components/schemas/IdNameType'
          type: array
        totalBackupSize:
          description: application size (in bytes) for the laptop
          format: int32
          type: integer
        username:
          description: comma seperated value for username of the laptop
          type: string
      type: object
    LaptopsList:
      oneOf:
        - $ref: '#/components/schemas/LaptopsListWebConsole'
        - $ref: '#/components/schemas/LaptopsListAdminConsole'
      title: LaptopsList
    LaptopsListAdminConsole:
      items:
        $ref: '#/components/schemas/LaptopsAdminConsole'
      type: array
    LaptopsListWebConsole:
      items:
        $ref: '#/components/schemas/LaptopsWebConsole'
      type: array
    LaptopsWebConsole:
      properties:
        id:
          description: id of the laptop client
          format: int32
          type: integer
        lastBackupJobInfo:
          $ref: '#/components/schemas/LastBackupJobInfo'
        lastBackupTime:
          description: This specifies the last backup time (in unix timestamp)
          format: int32
          type: integer
        name:
          description: name of the laptop client
          type: string
        nextBackupTime:
          description: This species the timestamp (in unix timestamp) of the next scheduled backup
          format: int32
          type: integer
        slaReason:
          description: reason for the current sla status
          type: string
        slaStatus:
          $ref: '#/components/schemas/SLAStatus'
        totalBackupSize:
          description: This specifies the total backup size (in bytes)
          format: int32
          type: integer
      type: object
    LastBackupJobInfo:
      properties:
        failureReason:
          description: 'Gives the reason for the last backup job failing, if the last backup job fails.'
          type: string
        jobId:
          description: Returns the job id of the last backup job performed.
          format: int32
          type: integer
        status:
          $ref: '#/components/schemas/JobStatus'
        time:
          description: Shows the time when the last back up job was carried out. The time is provided in unix time format.
          format: int64
          type: integer
      type: object
    LicenseInfo:
      description: License details
      properties:
        commCellId:
          description: ID of the registered CommCell
          format: int32
          type: integer
        commServeIPAddress:
          description: IP Address of CommServe
          minLength: 7
          type: string
        edition:
          description: The license is for this software product
          enum:
            - Commvault
            - Hitachi
            - Net Apps
            - Commvault Express
            - Showcase
            - Netapp
            - Virtual Server
            - Medical Imaging
            - IntelliSnap Recovery Manager
            - fujitsu
            - Sapphire
            - HP Snap Manager
            - Commvault Edge
            - MSP
            - IntelliSnap for NetApp
            - Commvault Marketplace
            - Flexential
            - Zeal
            - Metallic
          type: string
        expiryDate:
          description: Expiry date of current license in epoch format
          format: int32
          type: integer
        licenseIPAddress:
          description: IP Address of License
          minLength: 7
          type: string
        licenseMode:
          description: This license is intended for the specified usage scenario
          enum:
            - EVALUATION
            - PRODUCTION
            - DR_PRODUCTION
          type: string
        registrationCode:
          description: Registration code of CommServe
          type: string
        serialNumber:
          description: Serial number of CommServe
          type: string
      title: LicenseInfo
      type: object
    ListClusters:
      description: ''
      properties:
        clusterCount:
          format: int32
          type: integer
        clusters:
          items:
            $ref: '#/components/schemas/ClusterListResp'
          type: array
      title: ListClusters
      type: object
    ListHypervisors:
      description: ''
      properties:
        HypervisorCount:
          format: int32
          type: integer
        Hypervisors:
          items:
            $ref: '#/components/schemas/HypervisorListResp'
          type: array
      title: ListHypervisors
      type: object
    ListSnapshots:
      description: Response for Listing Snapshots
      properties:
        appTypeId:
          description: Id of the application type engine used
          format: int32
          type: integer
        appTypeName:
          description: Name of the application type which the Engine used
          example: Windows File System
          type: string
        arrayName:
          description: Name of the array
          type: string
        capabilities:
          description: The capability flags set for the snapshot
          format: int32
          type: integer
        creationTime:
          description: Time of Creation
          format: int32
          type: integer
        jobId:
          $ref: '#/components/schemas/JobId'
        masterJobId:
          description: Job Id of the master job
          format: int32
          type: integer
        mountHostId:
          description: Id of the MA where the mount is hosted
          format: int32
          type: integer
        mountHostName:
          description: Host on which the snapshot is mounted on
          type: string
        mountPath:
          description: Path to the mounted snapshot
          type: string
        mountStatusId:
          description: Id for the mount status
          format: int32
          type: integer
        mountStatusName:
          description: Whether the snapshot was taken sucessfully or not
          type: string
        mountStatusUpdateTime:
          description: Last Status Update
          format: int32
          type: integer
        smVolumeId:
          description: The Volume Id of the snapshots
          format: int32
          type: integer
        snapshotType:
          description: The type of the snapshot
          format: int32
          type: integer
        sourceClientId:
          description: Id of the Source Client
          format: int32
          type: integer
        sourceClientName:
          description: Source client for the engine
          type: string
        sourcePath:
          description: Source path of the engine where disk is stored
          type: string
      title: ListSnapshots
      type: object
    LiveMountOptions:
      properties:
        expirationTime:
          $ref: '#/components/schemas/ExpirationTime'
        isLiveMountEnabled:
          description: Indiciates whether the Live mount is allowed from this recovery target
          type: boolean
        mediaAgent:
          $ref: '#/components/schemas/IdName'
        migrateVMs:
          description: Whether migrate VMs options is turned on for test failover
          type: boolean
      title: LiveMountOptions
      type: object
    LocalAuthenticationDetails:
      description: Local authentication can be enabled for all users or specific user groups or completely disabled.
      properties:
        mode:
          $ref: '#/components/schemas/TFAMode'
        userGroups:
          items:
            $ref: '#/components/schemas/IdName'
          nullable: true
          type: array
      type: object
    LocalAuthenticationDetailsResponse:
      properties:
        error:
          $ref: '#/components/schemas/GenericResp'
        localAuthenticationInfo:
          $ref: '#/components/schemas/LocalAuthenticationDetails'
      type: object
    LocationDetails:
      description: Details for a location in a region
      properties:
        city:
          description: Name of city
          type: string
        country:
          description: Name of country
          type: string
        latitude:
          description: Latitude for the location
          format: double
          type: number
        longitude:
          description: Longitude for the location
          format: double
          type: number
        state:
          description: Name of state
          type: string
      required:
        - country
        - latitude
        - longitude
      title: LocationDetails
      type: object
    LocationDetailsWithZone:
      description: Details of a location with Zone
      properties:
        city:
          description: Name of city for the location
          type: string
        continent:
          description: Name of continent for the location
          type: string
        country:
          description: Name of country for the location
          type: string
        latitude:
          description: Latitude for the location
          format: double
          type: number
        longitude:
          description: Longitude for the location
          format: double
          type: number
        state:
          description: Name of state for the location
          type: string
        zone:
          $ref: '#/components/schemas/IdName'
      required:
        - country
        - latitude
        - longitude
      title: LocationDetailsWithZone
      type: object
    LocationListResp:
      properties:
        locations:
          description: List of locations
          items:
            $ref: '#/components/schemas/LocationsDetails'
          type: array
      type: object
    LocationSummary:
      description: Summary of a location in a region
      properties:
        city:
          type: string
        country:
          type: string
        state:
          type: string
      title: LocationSummary
      type: object
    LocationsDetails:
      description: Details of locations
      properties:
        id:
          description: id of the location
          format: int32
          type: integer
        isTransit:
          description: Tells if this is a transit location
          type: boolean
        name:
          description: name of the location
          type: string
      title: LocationsDetails
      type: object
    LockProperties:
      properties:
        endTime:
          description: 'If the user is locked, it returns user lock end time in unix time format.'
          format: int32
          type: integer
        isLocked:
          description: Returns if the user is locked or unlocked.
          type: boolean
        startTime:
          description: 'If the user is locked, it returns user lock start time in unix time format.'
          format: int32
          type: integer
      type: object
    ManagePaths:
      description: Define migration paths to ensure proper mapping
      properties:
        pair:
          items:
            $ref: '#/components/schemas/MigrationPair'
          type: array
      title: ManagePaths
      type: object
    ManualServerGroupAssociationDetails:
      properties:
        associatedservers:
          description: List of associated servers
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      type: object
    MatchRuleContent:
      description: Enum which specifies the whether to match all rules or any of the rules
      enum:
        - ALL
        - ANY
      title: MatchRule
      type: string
    MediaAgent:
      properties:
        control:
          $ref: '#/components/schemas/MediaAgentControl'
        general:
          $ref: '#/components/schemas/MediaAgentSummary'
        indexCache:
          $ref: '#/components/schemas/IndexCache'
        security:
          items:
            $ref: '#/components/schemas/SecurityAssoc'
          type: array
      type: object
    MediaAgentControl:
      properties:
        enabled:
          description: Determines if the media agent is currently enabled or disabled.
          type: boolean
        maintenanceMode:
          description: 'Specifies whether the MediaAgent is available for data protection, data recovery and auxiliary copy operations.'
          type: boolean
        optimizeForConcurrentLANBackups:
          description: 'Allows optimization for concurrent LAN backups. If set to true, default value for parallel data transfer operations will be 100. If set to false, default value of parallel data transfer operations will be set to 25.'
          type: boolean
        parallelDataTransferOperations:
          description: 'Specifies the number of parallel data operations that can take place. '
          format: int32
          type: integer
        ransomwareProtection:
          description: 'If set to true, ransomware protection against the media agent is enabled. If set to false, ransomware protection against media agent is disabled.'
          type: boolean
      type: object
    MediaAgentForDDBListResponse:
      properties:
        mediaAgents:
          items:
            $ref: '#/components/schemas/MediaAgentForDDBSummary'
          type: array
      title: ''
      type: object
    MediaAgentForDDBSummary:
      description: ''
      properties:
        OSType:
          description: Media Agent operating system type.
          type: string
        SIMOSId:
          description: Operating System Id of the media agent.
          format: int32
          type: integer
        displayName:
          description: Display name of the media agent.
          type: string
        id:
          description: Id of the media agent.
          format: int32
          type: integer
        isConfigured:
          description: Used to determine if the Media Agent is configured or not.
          type: boolean
        isDDBSubclientConfigured:
          description: Used to determine if a DDB subclient has been configured for this media agent.
          type: boolean
        name:
          description: Name of the media agent.
          type: string
        releaseId:
          description: Release version of the media agent.
          format: int32
          type: integer
      type: object
    MediaAgentInstallOSType:
      default: WINDOWS
      enum:
        - WINDOWS
        - UNIX
      type: string
    MediaAgentList:
      description: List of Media agents that can be added
      properties:
        mediaAgents:
          $ref: '#/components/schemas/IdNameDisplayName'
          items: null
          type: array
      type: object
    MediaAgentListResponse:
      properties:
        mediaAgents:
          items:
            $ref: '#/components/schemas/MediaAgentSummary'
          type: array
      title: ''
      type: object
    MediaAgentLogsCache:
      properties:
        enabled:
          description: 'This tag determines if the logs cache has been enabled or not. '
          type: boolean
        path:
          description: 'If the logs cache is enabled, this tag gives the path to store the logs cache.'
          type: string
      type: object
    MediaAgentSummary:
      description: ''
      properties:
        company:
          $ref: '#/components/schemas/IdName'
        description:
          description: Description of the media agent.
          type: string
        displayName:
          description: Display name of the media agent.
          type: string
        id:
          description: Id of the media agent.
          format: int32
          type: integer
        isUnlicensedMA:
          description: Used to determine if the MA is licensed or not.
          type: boolean
        name:
          description: Name of the media agent.
          type: string
        offlineReason:
          description: Provides a reason for the media agent being offline. Only given when the media agent is offline.
          type: string
        operatingSystem:
          $ref: '#/components/schemas/IdNameType'
        releaseId:
          description: Release version of the media agent.
          format: int32
          type: integer
        status:
          description: Current status of the media agent.
          enum:
            - ONLINE
            - OFFLINE
            - MAINTENANCE
          type: string
        version:
          description: The service pack of the media agent.
          type: string
      type: object
    MetadataCache:
      properties:
        mediaAgent:
          $ref: '#/components/schemas/IdName'
        path:
          description: Path of cache
          type: string
      title: metadataCache
      type: object
    MetadataCacheConfiguration:
      properties:
        credentials:
          $ref: '#/components/schemas/UserNamePassword'
        mediaAgent:
          $ref: '#/components/schemas/IdName'
        metadataCache:
          items:
            $ref: '#/components/schemas/MetadataCache'
          type: array
        path:
          description: Metadata cache will be stored on this path
          type: string
        savedCredentials:
          $ref: '#/components/schemas/IdName'
      title: MetadataCacheConfiguration
      type: object
    MicrosoftAzure:
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - properties:
            accountName:
              description: Only for IAM VM and IAM AD
              type: string
            authentication:
              description: Authentication type for the cloud storage server. Only Access & Account Name and IAM AD require credentials.
              enum:
                - Access and secret keys
                - IAM VM role assignment
                - IAM AD application role assignment (Credential Manager)
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Microsoft Azure Storage
              type: string
            container:
              description: Name of container
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              default: blob.core.windows.net
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
            storageClass:
              description: Appropriate storage class for your account
              enum:
                - Container's default
                - Hot
                - Cool
                - Archive
                - Hot/Archive (Combined Storage Tiers)
                - Cool/Archive (Combined Storage Tiers)
              type: string
          required:
            - cloudType
            - authentication
            - container
            - storageClass
          type: object
        - $ref: '#/components/schemas/DedupeStorageList'
      description: ''
      title: Microsoft Azure Storage
    MicrosoftAzureBucket:
      allOf:
        - properties:
            accountName:
              description: Only for IAM VM and IAM AD
              type: string
            authentication:
              description: Authentication type for the cloud storage server. Only Access & Account Name and IAM AD require credentials.
              enum:
                - Access and secret keys
                - IAM VM role assignment
                - IAM AD application role assignment (Credential Manager)
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Microsoft Azure Storage
              type: string
            container:
              description: Name of container
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              default: blob.core.windows.net
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
            storageClass:
              description: Appropriate storage class for your account
              enum:
                - Container's default
                - Hot
                - Cool
                - Archive
                - Hot/Archive (Combined Storage Tiers)
                - Cool/Archive (Combined Storage Tiers)
              type: string
          required:
            - cloudType
            - authentication
            - container
            - storageClass
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
      description: ''
      title: Microsoft Azure Storage
    MicrosoftAzureBucketContent:
      allOf:
        - properties:
            accountName:
              description: Only for IAM VM and IAM AD
              type: string
            authentication:
              description: Authentication type for the cloud storage server. Only Access & Account Name and IAM AD require credentials.
              enum:
                - Access and secret keys
                - IAM VM role assignment
                - IAM AD application role assignment (Credential Manager)
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Microsoft Azure Storage
              type: string
            container:
              description: Name of container
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              default: blob.core.windows.net
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
            storageClass:
              description: Appropriate storage class for your account
              enum:
                - Container's default
                - Hot
                - Cool
                - Archive
                - Hot/Archive (Combined Storage Tiers)
                - Cool/Archive (Combined Storage Tiers)
              type: string
          required:
            - cloudType
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
      description: ''
      title: Microsoft Azure Storage
    MigrationConfiguration:
      description: Configuration for Migration to Azure
      properties:
        destination:
          $ref: '#/components/schemas/MigrationDestination'
        kickOffMigrationImmediately:
          description: Kick off migration immediately?
          type: boolean
        migrationPairs:
          $ref: '#/components/schemas/ManagePaths'
        migrationSettings:
          $ref: '#/components/schemas/MigrationSettings'
        plan:
          $ref: '#/components/schemas/IdName'
        source:
          $ref: '#/components/schemas/MigrationSource'
        startAnalysisNow:
          type: boolean
      title: MigrationConfiguration
      type: object
    MigrationDestination:
      description: Specify node with write access to Azure File share. The destincation type (NFS/CIFS) is determined by source.
      properties:
        accessNode:
          description: Access nodes for the destination client
          items:
            $ref: '#/components/schemas/AccessNodes'
          type: array
        destinationCredentials:
          $ref: '#/components/schemas/IdName'
        destinationName:
          description: Azure storage account
          type: string
        region:
          $ref: '#/components/schemas/IdName'
      title: Destination
      type: object
    MigrationGroupDetails:
      properties:
        backupJobId:
          format: int32
          type: integer
        backupSchedule:
          $ref: '#/components/schemas/IdName'
        backupSchedulePolicy:
          $ref: '#/components/schemas/IdName'
        credentials:
          $ref: '#/components/schemas/Credentials'
        destinationAccessNode:
          items:
            $ref: '#/components/schemas/AccessNodes'
          type: array
        destinationApplication:
          $ref: '#/components/schemas/IdName'
        destinationBackupset:
          $ref: '#/components/schemas/IdName'
        destinationClient:
          $ref: '#/components/schemas/IdName'
        destinationInstance:
          $ref: '#/components/schemas/IdName'
        destinationSubclient:
          $ref: '#/components/schemas/IdName'
        failureReason:
          type: string
        failures:
          type: string
        lastSyncTime:
          format: int64
          type: integer
        migrationGroupName:
          type: string
        migrationGroupState:
          type: boolean
        migrationMonitors:
          items:
            $ref: '#/components/schemas/MigrationMonitor'
          type: array
        migrationSize:
          format: int64
          type: integer
        migrationStatus:
          $ref: '#/components/schemas/ReplicationStatus'
        numOfFiles:
          format: int64
          type: integer
        region:
          $ref: '#/components/schemas/IdName'
        restoreJobId:
          format: int32
          type: integer
        sourceAccessNode:
          items:
            $ref: '#/components/schemas/AccessNodes'
          type: array
        sourceApplication:
          $ref: '#/components/schemas/IdName'
        sourceBackupset:
          $ref: '#/components/schemas/IdName'
        sourceClient:
          $ref: '#/components/schemas/IdName'
        sourceInstance:
          $ref: '#/components/schemas/IdName'
        sourceSubclient:
          $ref: '#/components/schemas/IdName'
        updateFrequency:
          $ref: '#/components/schemas/PlanPattern'
      title: MigrationGroupDetailsResp
      type: object
    MigrationMonitor:
      properties:
        destinationPath:
          type: string
        lastSyncTime:
          format: int64
          type: integer
        migrationSize:
          format: float
          type: number
        numOfFiles:
          format: int64
          type: integer
        replicationId:
          format: int32
          type: integer
        sourcePath:
          type: string
        syncStatus:
          $ref: '#/components/schemas/ReplicationStatus'
        type:
          type: string
      title: MigrationMonitor
      type: object
    MigrationPair:
      properties:
        DestinationPath:
          type: string
        SourcePath:
          type: string
      title: MigrationPair
      type: object
    MigrationSettings:
      description: Name the migration group and define the frequency
      properties:
        migrationFrequency:
          $ref: '#/components/schemas/PlanPattern'
        migrationWindow:
          items:
            $ref: '#/components/schemas/CreateBlackoutWindow'
          type: array
        name:
          type: string
      title: MigrationSettings
      type: object
    MigrationSource:
      description: Source of the migration NAS data
      properties:
        NASType:
          default: CIFS
          description: NAS type
          enum:
            - CIFS
            - NFS
          type: string
        accessNode:
          description: Access nodes for source clients
          items:
            $ref: '#/components/schemas/AccessNodes'
          type: array
        sourceCredentials:
          $ref: '#/components/schemas/IdName'
        sourceName:
          description: NAS filer name
          type: string
      title: Source
      type: object
    Mode:
      enum:
        - EdgeMode
    ModifyAdditionalSetting:
      properties:
        category:
          description: Category of the setting to be modified. This cannot be modified but is required to identify the setting for which the new value is to be set.
          type: string
        comment:
          description: Comment to specify why this value was set for the specified setting
          type: string
        name:
          description: Name of the setting to be modified. This cannot be modified but is required to identify the setting for which the new value is to be set.
          type: string
        newValue:
          description: 'New value which will be set for the specified setting, there can be fixed acceptables values for some settings. To get more details about what are acceptable value for a setting, use GET GlobalSettings or GET EntitySettings.'
          type: string
        reset:
          description: 'To reset the value of any already modified setting, set this to true to reset the value and regain default behaviour'
          type: boolean
        type:
          description: Type of the setting to be modified. This cannot be modified but is required to identify the setting for which the new value is to be set.
          enum:
            - Integer
            - String
            - Boolean
            - Multi string
          type: string
      required:
        - name
        - category
        - type
      title: ModifyAdditionalSetting
      type: object
    ModifyEntitySettings:
      properties:
        entitySettings:
          items:
            $ref: '#/components/schemas/ModifyEntitySettingsItem'
          type: array
      title: ModifyEntitySettings
      type: object
    ModifyEntitySettingsItem:
      allOf:
        - $ref: '#/components/schemas/ModifyAdditionalSetting'
        - properties:
            entity:
              $ref: '#/components/schemas/IdType'
          required:
            - entity
          type: object
      description: Id and Type of the entity is required in entity property to which the entity setting is to be applied. Type of entity can be Server or Server group.
      title: ModifyEntitySettingsItem
    ModifyFailoverGroupRequest:
      description: Modify failover group request
      properties:
        arrayReplicationPairs:
          description: List of all array replication pairs for failover group
          items:
            $ref: '#/components/schemas/FailoverGroupArrayReplicationPair'
          nullable: true
          type: array
        continueDROnFailure:
          description: Modify whether to continue to next priority on DR job failure
          type: boolean
        isApprovalRequired:
          description: Modify whether user approval is required for DR operation or not
          type: boolean
        name:
          description: New name for failover group
          type: string
        priorityIntervalInMinutes:
          description: Modify the time interval between DR operations of different priorities in minutes
          format: int32
          minimum: 1
          type: integer
        recoveryTarget:
          $ref: '#/components/schemas/IdName'
        replicationPairs:
          description: List of all replication pairs that are part of the failover group
          items:
            $ref: '#/components/schemas/FailoverGroupReplicationPair'
          nullable: true
          type: array
        usersToNotify:
          description: Users to notify/for approval of DR operations
          items:
            $ref: '#/components/schemas/IdNameDisplayNameCompany'
          type: array
      title: ModifyFailoverGroup
      type: object
    ModifyGlobalSettings:
      properties:
        globalSettings:
          items:
            $ref: '#/components/schemas/ModifyAdditionalSetting'
          type: array
      title: ModifyGlobalSettings
      type: object
    MonthOfYear:
      enum:
        - JANUARY
        - FEBRUARY
        - MARCH
        - APRIL
        - MAY
        - JUNE
        - JULY
        - AUGUST
        - SEPTEMBER
        - OCTOBER
        - NOVEMBER
        - DECEMBER
      format: ''
      type: string
    MountLocationDetails:
      description: Mount location details
      properties:
        dataServerType:
          description: Type of device access server type.
          enum:
            - NONE
            - DATASERVER_ISCSI_DEVICEACCESS
            - DATASERVER_IP_DEVICEACCESS
            - DATASERVER_SAN_DEVICEACCESS
          type: string
        deviceId:
          description: Unique device identifier.
          format: int32
          type: integer
        enabled:
          description: Describe whether mount path is enabled or not.
          type: boolean
        mountPath:
          $ref: '#/components/schemas/IdName'
        status:
          description: Status of the mount path.
          type: string
      title: MountLocationDetails
      type: object
    MountPathJobInfo:
      description: Mountpath job information
      properties:
        appName:
          description: The name of application
          type: string
        archFileName:
          description: Archive File Name
          type: string
        archFileType:
          $ref: '#/components/schemas/ArchFileType'
        backupLevel:
          description: The level of the backup job
          type: string
        backupSetName:
          description: The name of the backup set associated with the job.
          type: string
        backupTime:
          description: The time when backup is done
          format: int64
          type: integer
        clientName:
          description: The name of the client associated with the job.
          type: string
        cyclesNSeq:
          description: Cycles and Sequences
          type: string
        dataStatus:
          description: Status of the data of job
          type: string
        dataWritten:
          description: Amount of data written on mountpath during job
          format: int64
          type: integer
        instanceName:
          description: The name of the instance associated with the job.
          type: string
        isAged:
          description: Indicates if job is aged or not.
          type: boolean
        isValidData:
          description: Indicates if job has valid Data
          type: boolean
        jobId:
          description: The system-generated ID assigned to the job.
          format: int64
          type: integer
        jobStatus:
          $ref: '#/components/schemas/JobStatus'
        mediaSideName:
          description: Media Side Name
          type: string
        retainTill:
          description: Retention DateTime for job
          format: int64
          type: integer
        sizeOfApplication:
          description: The amount of application data that was protected during the job.
          format: int64
          type: integer
        sizeOfBackup:
          description: The amount of application data that was protected during the job
          format: int64
          type: integer
        storagePolicyNCopy:
          description: Storage Policy and Copy Name
          type: string
        subclientName:
          description: The name of the subclient associated with the job.
          type: string
      title: MountPathJobInfo
      type: object
    MountReq:
      description: Request template for Mounting Snapshots. scsiServer refers to the iSCSI server which the user can choose while mounting.
      properties:
        destinationClient:
          $ref: '#/components/schemas/DestinationMount'
        protectSnap:
          description: Enable or disable VSS protection on Snaps while mounting
          enum:
            - 0
            - 1
          format: int32
          type: integer
        scsiServer:
          $ref: '#/components/schemas/IdName'
        volumes:
          description: Volumes of the snap you want to mount
          items:
            $ref: '#/components/schemas/VolumeSnap'
          type: array
      title: MountReq
      type: object
    NameGUID:
      properties:
        GUID:
          type: string
        name:
          type: string
      type: object
    NameMessage:
      properties:
        message:
          description: Description of the error
          type: string
        name:
          description: Name of the error
          type: string
      type: object
    NameValue:
      properties:
        name:
          type: string
        value:
          type: string
      title: NameValue
      type: object
    NameValues:
      properties:
        name:
          type: string
        value:
          nullable: true
          type: string
        values:
          items:
            type: string
          nullable: true
          type: array
      title: NameValues
      type: object
    NetApp:
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - NetApp StorageGRID
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
          type: object
        - $ref: '#/components/schemas/DedupeStorageList'
      description: ''
      title: NetApp StorageGRID
    NetAppBucket:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - NetApp StorageGRID
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
      description: ''
      title: NetApp StorageGRID
    NetAppBucketContent:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - NetApp StorageGRID
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
      description: ''
      title: NetApp StorageGRID
    Network:
      description: Network interface for the destination instances
      properties:
        networkDisplayName:
          description: Network display name
          type: string
        networkName:
          description: Name of network
          type: string
        subnetId:
          description: subnet id of network
          type: string
      title: Network
      type: object
    NetworkCard:
      properties:
        destinationNetworks:
          description: Destination network name
          items:
            type: string
          type: array
        network:
          description: Name of network switch
          type: string
        networkDisplayName:
          description: Selected network display name
          type: string
        networkNames:
          description: Name of network to which the nic is connected
          items:
            type: string
          type: array
      title: NetworkCard
      type: object
    NetworkDetails:
      properties:
        dnsSearch:
          type: string
        gateway:
          type: string
        name:
          description: Destination network name
          type: string
        nameservers:
          items:
            type: string
          maxItems: 2
          minItems: 2
          type: array
        netmask:
          type: string
        staticIP:
          type: string
        useDHCP:
          default: 'True'
          description: 'If useDHCP is False then make sure to provide staticIP, netmask, gateway'
          enum:
            - 'True'
            - 'False'
          type: string
      required:
        - name
      title: NetworkDetails
      type: object
    NetworkInventoryResponse:
      description: Inventory response of hypervisor for Network entity
      properties:
        dataCenterName:
          description: dataCenter Name of the Network.
          type: string
        dnsHostName:
          description: dns Hostname  of the Network.
          type: string
        esxServerName:
          description: esx server name  of the Network.
          type: string
        networkSettings:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      type: object
    NetworkInventoryResponseList:
      description: To display the list of Inventory response of network
      properties:
        hostInfo:
          items:
            $ref: '#/components/schemas/NetworkInventoryResponse'
          type: array
      title: NetworkInventoryResponseList
      type: object
    NetworkName:
      description: Select a network interface from the Network adapter list.
      properties:
        networkName:
          description: Name of network
          type: string
      title: NetworkName
      type: object
    NetworkOptions:
      properties:
        cloudNetwork:
          $ref: '#/components/schemas/CloudNetwork'
        networkCard:
          $ref: '#/components/schemas/NetworkCard'
      title: NetworkOptions
      type: object
    NetworkSetting:
      description: The schema for mapping source network with destination network
      properties:
        destination:
          description: Destination network name
          type: string
        source:
          description: Source network name
          type: string
        sourceId:
          description: Source network ID
          type: string
      title: NetworkSetting
      type: object
    NetworkSubnet:
      description: Network info
      properties:
        network:
          description: The name of the network
          type: string
        subnetId:
          description: The ID of the subnet
          type: string
      title: Network
      type: object
    NetworkVPCSubnet:
      description: Network info
      properties:
        name:
          description: The name of the network
          type: string
        subnetId:
          description: The ID of the subnet
          type: string
        vpc:
          description: The ID of the VPC
          type: string
      title: Network
      type: object
    Nutanix:
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Nutanix Objects
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
          type: object
        - $ref: '#/components/schemas/DedupeStorageList'
      description: ''
      title: Nutanix Objects
    NutanixBucket:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Nutanix Objects
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
      description: ''
      title: Nutanix Objects
    NutanixBucketContent:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Nutanix Objects
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
      description: ''
      title: Nutanix Objects
    ObjectStorageAsset:
      properties:
        accessNode:
          $ref: '#/components/schemas/IdName'
        credentials:
          $ref: '#/components/schemas/IdName'
        hostURL:
          description: Service account URL
          type: string
        storageName:
          description: Name of the object storage
          type: string
        storageType:
          $ref: '#/components/schemas/ObjectStorageAssetType'
      required:
        - storageName
        - hostURL
        - credentials
        - accessNode
        - storageType
      title: ObjectStorageAsset
      type: object
    ObjectStorageAssetType:
      enum:
        - AMAZON_S3
        - AZURE_BLOB
        - GOOGLE_CLOUD
      title: ObjectStorageAssetType
      type: string
    Office365ConnectionsSettings:
      allOf:
        - $ref: '#/components/schemas/AzureAdApp'
        - properties:
            azureDirectoryId:
              description: Azure directory (tenant) ID
              type: string
          required:
            - azureDirectoryId
          type: object
      title: Office365ConnectionsSettings
      type: object
    Office365PlanSummary:
      properties:
        contentIndexingEnabled:
          description: Tells if Content Indexing is enabled on this plan
          type: boolean
        mailboxes:
          description: Number of mailboxes assocaited with this plan
          format: int32
          type: integer
        plan:
          $ref: '#/components/schemas/IdName'
        planTier:
          $ref: '#/components/schemas/Office365PlanTier'
        sites:
          description: Number of sites assocaited with this plan
          format: int32
          type: integer
        teams:
          description: Number of teams assocaited with this plan
          format: int32
          type: integer
        totalEntities:
          description: Count of total associated entities for the Office 365 plan
          format: int32
          type: integer
        users:
          description: Number of users assocaited with this plan
          format: int32
          type: integer
      type: object
    Office365PlanSummaryListResp:
      properties:
        error:
          $ref: '#/components/schemas/GenericResp'
        o365Plans:
          items:
            $ref: '#/components/schemas/Office365PlanSummary'
          nullable: true
          type: array
        totalO365Plans:
          description: Total number of Office365 plans returned
          format: int32
          type: integer
      type: object
    Office365PlanTier:
      enum:
        - STANDARD
        - ENTERPRISE
      format: ''
      type: string
    OnedriveContentReq:
      description: Request Message to add content to onedrive app
      properties:
        office365plan:
          $ref: '#/components/schemas/IdName'
        type:
          default: ALL_USERS
          enum:
            - ALL_USERS
          type: string
      required:
        - type
        - office365plan
      title: OnedriveContentReq
      type: object
    OpenLDAPType:
      allOf:
        - description: Specific properties for Open LDAP type
          properties:
            NETBIOSName:
              description: Connect name to create open LDAP type app
              type: string
            directoryType:
              description: Open LDAP directory type
              enum:
                - OPEN_LDAP
              type: string
            name:
              description: Domain connect name
              type: string
          required:
            - directoryType
            - NETBIOSName
            - name
          type: object
        - $ref: '#/components/schemas/LDAPRequest'
      description: Model to create new LDAP identity servers for Open LDAP type
      title: ''
      x-tags:
        - IdentityServers
    OpenStack:
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - properties:
            cloudType:
              description: Name of cloud vendor
              enum:
                - OpenStack Object Storage
              type: string
            container:
              description: Name of container
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - container
          type: object
        - $ref: '#/components/schemas/DedupeStorageList'
      description: ''
      title: OpenStack Object Storage
    OpenStackBucket:
      allOf:
        - properties:
            cloudType:
              description: Name of cloud vendor
              enum:
                - OpenStack Object Storage
              type: string
            container:
              description: Name of container
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - container
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
      description: ''
      title: OpenStack Object Storage
    OpenStackBucketContent:
      allOf:
        - properties:
            cloudType:
              enum:
                - OpenStack Object Storage
              type: string
            container:
              description: Name of container
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
      description: ''
      title: OpenStack Object Storage
    Operations:
      description: determines if an existing user has to be added to the user group or removed from the user group
      enum:
        - ADD
        - DELETE
      type: string
    OracleArchive:
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Oracle Cloud Infrastructure Archive Storage
              type: string
            compartmentName:
              description: OCI compartment name
              type: string
            keyFingerprint:
              description: PEM key's fingerprint
              type: string
            pemKeyFilename:
              description: PEM filename containing the private-key
              type: string
            privateKeyPassword:
              description: Password for the private key
              type: string
            serviceHost:
              default: objectstorage.us-phoenix-1.oraclecloud.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
            tenancyOCID:
              description: Oracle Cloud ID
              type: string
            userOCID:
              description: User name for the Oracle Cloud ID
              type: string
          required:
            - cloudType
            - tenancyOCID
            - userOCID
            - keyFingerprint
            - compartmentName
            - pemKeyFilename
            - privateKeyPassword
            - bucket
          type: object
        - $ref: '#/components/schemas/DedupeStorageList'
      description: ''
      title: Oracle Cloud Infrastructure Archive Storage
    OracleArchiveBucket:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Oracle Cloud Infrastructure Archive Storage
              type: string
            compartmentName:
              description: OCI compartment name
              type: string
            deduplicationDBLocation:
              description: 'To enable deduplication on this storage, provide path of the Deduplication database (DDB)'
              type: string
            keyFingerprint:
              description: PEM key's fingerprint
              type: string
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            pemKeyFilename:
              description: PEM filename containing the private-key
              type: string
            privateKeyPassword:
              description: Password for the private key
              type: string
            serviceHost:
              default: objectstorage.us-phoenix-1.oraclecloud.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
            tenancyOCID:
              description: Oracle Cloud ID
              type: string
            userOCID:
              description: User name for the Oracle Cloud ID
              type: string
          required:
            - cloudType
            - tenancyOCID
            - userOCID
            - keyFingerprint
            - compartmentName
            - pemKeyFilename
            - privateKeyPassword
            - bucket
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
      description: ''
      title: Oracle Cloud Infrastructure Archive Storage
    OracleArchiveBucketContent:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Oracle Cloud Infrastructure Archive Storage
              type: string
            compartmentName:
              description: OCI compartment name
              type: string
            keyFingerprint:
              description: PEM key's fingerprint
              type: string
            pemKeyFilename:
              description: PEM filename containing the private-key
              type: string
            privateKeyPassword:
              description: Password for the private key
              type: string
            serviceHost:
              default: objectstorage.us-phoenix-1.oraclecloud.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
            tenancyOCID:
              description: Oracle Cloud ID
              type: string
            userOCID:
              description: User name for the Oracle Cloud ID
              type: string
          required:
            - cloudType
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
      description: ''
      title: Oracle Cloud Infrastructure Archive Storage
    OracleCredentialContent:
      description: 'Applicable only for credentials with Cloud Account, Vendor Type as Oracle Cloud Infrastructutre'
      properties:
        certificate:
          description: Certificate of Credential
          type: string
        connectString:
          description: Connect String for Credential
          type: string
        dbName:
          description: DB Name for Credential
          type: string
        description:
          description: Updated description of Credential
          type: string
        newName:
          description: Updated name of credential
          type: string
        password:
          description: Password of Credential. Password must be in base64 encoded format.
          type: string
        security:
          $ref: '#/components/schemas/CredentialSecurity'
        tenancyOCID:
          description: Oracle Cloud ID
          type: string
        userAccount:
          description: User Account of Credential
          type: string
        userOCID:
          description: User name for the Oracle Cloud ID
          type: string
      title: OracleCredentialContent
      type: object
    OracleCredentialInfo:
      allOf:
        - $ref: '#/components/schemas/CreateCredential'
        - properties:
            certificate:
              description: Certificate of Credential
              type: string
            connectString:
              description: Connect String for Credential
              type: string
            dbName:
              description: DB Name for Credential
              type: string
            password:
              description: Password of Credential. Password must be in base64 encoded format.
              type: string
            tenancyOCID:
              description: Oracle Cloud ID
              type: string
            userAccount:
              description: User Account of Credential
              type: string
            userOCID:
              description: User name for the Oracle Cloud ID
              type: string
          required:
            - userAccount
            - password
            - connectString
            - dbName
            - certificate
            - tenancyOCID
            - userOCID
          type: object
        - $ref: '#/components/schemas/CommonCredentialInfo'
      description: Applicable only for credentials with Cloud Account and Vendor Type as Oracle Infrastructure
      title: OracleCredentialInfo
    OracleDirectoryType:
      allOf:
        - description: Specific properties for Oracle directory type
          properties:
            NETBIOSName:
              description: Domain shortname
              type: string
            directoryType:
              description: Oracle directory type
              enum:
                - ORACLE_DIRECTORY
              type: string
            name:
              description: Domain connect name
              type: string
            useSecureLDAP:
              description: Boolean to indicate if the app use secure LDAP
              type: boolean
          required:
            - directoryType
            - NETBIOSName
            - name
          type: object
        - $ref: '#/components/schemas/LDAPRequest'
      description: Model to create new LDAP identity servers for Oracle type
      title: ''
      x-tags:
        - IdentityServers
    OracleObject:
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - properties:
            bucket:
              description: Name of the bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Oracle Cloud Infrastructure Object Storage
              type: string
            compartmentName:
              description: OCI compartment name
              type: string
            keyFingerprint:
              description: PEM key's fingerprint
              type: string
            pemKeyFilename:
              description: PEM filename containing the private-key
              type: string
            privateKeyPassword:
              description: Password for the private key
              type: string
            serviceHost:
              default: objectstorage.us-phoenix-1.oraclecloud.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
            tenancyOCID:
              description: Oracle Cloud ID
              type: string
            userOCID:
              description: User name for the Oracle Cloud ID
              type: string
          required:
            - cloudType
            - tenancyOCID
            - userOCID
            - keyFingerprint
            - compartmentName
            - pemKeyFilename
            - privateKeyPassword
            - bucket
          type: object
        - $ref: '#/components/schemas/DedupeStorageList'
      description: ''
      title: Oracle Cloud Infrastructure Object Storage
    OracleObjectBucket:
      allOf:
        - properties:
            bucket:
              description: Name of the bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Oracle Cloud Infrastructure Object Storage
              type: string
            compartmentName:
              description: OCI compartment name
              type: string
            keyFingerprint:
              description: PEM key's fingerprint
              type: string
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            pemKeyFilename:
              description: PEM filename containing the private-key
              type: string
            privateKeyPassword:
              description: Password for the private key
              type: string
            serviceHost:
              default: objectstorage.us-phoenix-1.oraclecloud.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
            tenancyOCID:
              description: Oracle Cloud ID
              type: string
            userOCID:
              description: User name for the Oracle Cloud ID
              type: string
          required:
            - cloudType
            - tenancyOCID
            - userOCID
            - keyFingerprint
            - compartmentName
            - pemKeyFilename
            - privateKeyPassword
            - bucket
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
      description: ''
      title: Oracle Cloud Infrastructure Object Storage
    OracleObjectBucketContent:
      allOf:
        - properties:
            bucket:
              description: Name of the bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Oracle Cloud Infrastructure Object Storage
              type: string
            compartmentName:
              description: OCI compartment name
              type: string
            keyFingerprint:
              description: PEM key's fingerprint
              type: string
            pemKeyFilename:
              description: PEM filename containing the private-key
              type: string
            privateKeyPassword:
              description: Password for the private key
              type: string
            serviceHost:
              default: objectstorage.us-phoenix-1.oraclecloud.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
            tenancyOCID:
              description: Oracle Cloud ID
              type: string
            userOCID:
              description: User name for the Oracle Cloud ID
              type: string
          required:
            - cloudType
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
      description: ''
      title: Oracle Cloud Infrastructure Object Storage
    OverrideReplicationOptionsAmazon:
      description: Replication options for Amazon
      properties:
        autoSelectSecurityGroup:
          description: Select a security group for the destination instances
          items:
            $ref: '#/components/schemas/SecurityGroup'
          type: array
        availabilityZone:
          description: Destination zone
          type: string
        computerName:
          description: Enable required drivers to be installed on the Amazon guest instance
          type: string
        encryptionKey:
          description: Encryption key if used
          type: string
        instanceName:
          description: Display name for the destination instance
          type: string
        instanceType:
          description: Provides the available CPU cores and memory for the instance.
          type: string
        network:
          $ref: '#/components/schemas/Network'
        userName:
          description: Enable required drivers to be installed on the Amazon guest instance
          type: string
        volumeType:
          description: Type of volume used for replication
          type: string
      title: OverrideReplicationOptionsAmazon
      type: object
    OverrideReplicationOptionsAmazonCreate:
      description: Replication options for Amazon. sourceVM should contain the name and the guid of the machine that has to be overriden
      properties:
        availabilityZone:
          description: The name of AWS zone where the destination instance will reside
          type: string
        encryptionKey:
          description: The ID of the encryption key that will be used to encrypt the data of the desination instance. Default value is Auto
          type: string
        guestCredentials:
          $ref: '#/components/schemas/GuestCredentialsCreate'
        instanceName:
          description: Display name for the destination instance
          type: string
        instanceType:
          description: The available CPU cores and memory to be used on the destination instance. Default value is Auto
          type: string
        network:
          $ref: '#/components/schemas/NetworkVPCSubnet'
        regionName:
          description: The name of the AWS region where the destination instance will reside
          type: string
        securityGroups:
          description: The security group to be applied to the destination instance that acts as a virtual firewall. Default value is Auto
          items:
            $ref: '#/components/schemas/SecurityGroup'
          type: array
        sourceVM:
          $ref: '#/components/schemas/NameGUID'
        volumeType:
          description: ID of the volume type that will be used on the destination instance. Default value is Auto
          type: string
      required:
        - sourceVM
        - InstancesName
        - regionName
        - availabilityZone
      title: OverrideReplicationOptionsAmazon
      type: object
    OverrideReplicationOptionsAzure:
      description: Replication options for Azure
      properties:
        vmDisplayName:
          description: Display name of destination VM
          type: string
      title: OverrideReplicationOptionsAzure
      type: object
    OverrideReplicationOptionsAzureCreate:
      description: Replication options for Azure. Provide both of the name and the guid of the source VM and provide the id and the name of the security group
      properties:
        createPublicIP:
          description: Creates a public IP on the destination VM
          type: boolean
        diskTypeId:
          description: The id of the disk type to be used for the destination VM. Default value is Auto
          type: string
        region:
          description: The name of the region where the destination VM will reside
          type: string
        resourceGroup:
          description: The resource group to be used for the destination VM
          type: string
        restoreAsManagedVM:
          description: Creates the destination as a managed VM
          type: boolean
        securityGroup:
          $ref: '#/components/schemas/SecurityGroup'
        sourceVM:
          $ref: '#/components/schemas/NameGUID'
        storageAccount:
          description: The name of the storage account to be used on the destination VM
          type: string
        virtualNetwork:
          description: The network to be used on the desination VM. Default value is Auto
          items:
            $ref: '#/components/schemas/NetworkSubnet'
          type: array
        vmDisplayName:
          description: Display name of destination VM
          type: string
        vmSizeId:
          description: The id of the vm size to be applied to the destination VM. Default value is Auto
          type: string
      required:
        - sourceVM
        - vmDisplayName
        - resourceGroup
        - region
        - storageAccount
      title: OverrideReplicationOptionsAzure
      type: object
    OverrideReplicationOptionsHyperV:
      description: Replication options for HyperV
      properties:
        networkAdapter:
          description: Select a network interface from the Network adapter list
          items:
            $ref: '#/components/schemas/NetworkName'
          type: array
        registerVMWithFailoverCluster:
          description: Register replicated virtual machines to the failover cluster for the destination client.
          type: string
        vmDisplayName:
          description: Display name for the destination VM
          type: string
      title: OverrideReplicationOptionsHyperV
      type: object
    OverrideReplicationOptionsHyperVCreate:
      description: Replication options for HyperV. Provide both the name and the guid of the source VM.
      properties:
        networkName:
          description: The name of the network of destination VM
          type: string
        registerVMWithFailoverCluster:
          description: Register replicated virtual machines to the failover cluster for the destination client.
          type: boolean
        sourceVM:
          $ref: '#/components/schemas/NameGUID'
        vmDisplayName:
          description: Display name for the destination VM
          type: string
      required:
        - sourceVM
        - vmDisplayName
        - networkName
      title: OverrideReplicationOptionsHyperV
      type: object
    OverrideReplicationOptionsVMWare:
      description: Replication options for VMware
      properties:
        datastore:
          description: Select a datastore to be used for virtual machine disks
          type: string
        destinationHost:
          description: Host for the destination VM
          type: string
        ipAddressSettings:
          description: Customize IP address settings
          items:
            $ref: '#/components/schemas/IpAddressSetting'
          type: array
        networkSettings:
          description: Mapping between a source network and a destination network
          items:
            $ref: '#/components/schemas/NetworkSetting'
          type: array
        resourcePool:
          description: Select a resource pool for the destination VM
          type: string
        vmDisplayName:
          description: Enter the display name for the destination VM
          type: string
        vmFolder:
          description: VM folder replication
          type: string
      title: OverrideReplicationOptionsVMWare
      type: object
    OverrideReplicationOptionsVMWareCreate:
      description: Per VM Replication options for VMware. Provide both the name and the guid of the source VM.
      properties:
        datastore:
          description: The datastore to be used for virtual machine disks
          type: string
        destinationHost:
          description: Name of host where the destination VM will reside
          type: string
        ipAddressSettings:
          description: A mapping of IP between the source and the destination VM with an option to configure either a dynamic or a static IP.
          items:
            $ref: '#/components/schemas/IpAddressSettingVMWareCreate'
          type: array
        networkSettings:
          description: Mapping between a source network and a destination network
          items:
            $ref: '#/components/schemas/NetworkSetting'
          type: array
        resourcePool:
          description: The resource pool that will be used on the destination VM
          type: string
        sourceVM:
          $ref: '#/components/schemas/NameGUID'
        vmDisplayName:
          description: Enter the display name for the destination VM
          type: string
        vmFolder:
          description: 'If the destination VM has to reside inside a folder, specify the name here'
          type: string
      required:
        - sourceVM
        - vmDisplayName
        - destinationHost
        - datastore
        - resourcePool
      title: OverrideReplicationOptionsVMWare
      type: object
    OwnerAssignmentTypes:
      description: 'Used to assign owners to laptops automatically after installation. The owners can be all the logged in active directory users, the first user to login into the laptop after installation or the users belonging to the laptop''s local user group list. The option to assign automatically can also be disabled.'
      enum:
        - LOGGED_IN_ACTIVE_DIRECTORY_USERS
        - FIRST_LOGGED_IN_USER
        - LAPTOP_USER_GROUPS_AS_OWNERS
        - DO_NOT_ASSIGN
      format: ''
      type: string
    Path:
      description: 'If adding a network access path, Please add credentials or saved credentials. If both are provided, credentials will be taken into consideration.'
      properties:
        backupLocation:
          type: string
        credentials:
          $ref: '#/components/schemas/UserNamePassword'
        mediaAgent:
          $ref: '#/components/schemas/IdName'
        savedCredentials:
          $ref: '#/components/schemas/IdName'
      required:
        - path
        - mediaAgent
      type: object
    PeriodicMonitorDeleteRequest:
      description: The payload of the periodic monitor delete operation
      properties:
        deleteDRVMs:
          default: false
          description: Provide this option to delete the DR VM's too.
          type: boolean
        pairIds:
          description: The id's of the pair that have to be deleted.
          format: int32
          items:
            format: int32
            minimum: 1
            type: integer
          minItems: 1
          type: array
          uniqueItems: true
      required:
        - pairIds
      title: PeriodicMonitorDeleteRequest
      type: object
      x-examples:
        Delete2Pairs:
          deleteDRVMs: false
          pairIds:
            - 1
            - 2
    PeriodicMonitorDeleteResponse:
      description: The response of the delete periodic replication pair request
      properties:
        jobId:
          description: The job id of the delete pair request
          format: int32
          type: integer
      title: PeriodicMonitorDeleteResponse
      type: object
      x-examples:
        example-1:
          jobId: 12345
    PermissionListResp:
      properties:
        category:
          $ref: '#/components/schemas/IdName'
        categoryList:
          description: 'Returns a list of categories and their permissions associated with the main category. eg: roles category is belongs to User Management category.'
          items:
            $ref: '#/components/schemas/CategoryList'
          type: array
        permissions:
          description: Returns list of permissions associated with the category
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      type: object
    PermissionResp:
      description: 'List of permissions associated with the entity. Either categoryId and categoryName or permissionId and permissionName will be returned. If categoryId or categoryName is returned, all the corresponding permissions in the category are associated with the entity.'
      properties:
        categoryId:
          format: int32
          type: integer
        categoryName:
          type: string
        exclude:
          description: Flag to specify if this is included permission or excluded permission.
          type: boolean
        permissionId:
          format: int32
          type: integer
        permissionName:
          type: string
        type:
          description: Returns the type of association.
          enum:
            - ALL_CATEGORIES
            - CATEGORY_ENTITY
            - PERMISSION_ENTITY
          type: string
      type: object
    Permissions:
      description: 'The id or name of the permission can be provided in order to associate it to the role. It can be provided with or without category id or name. If only category id or name is provided, entire list of permissions associated with this category can be associated to the role.'
      properties:
        category:
          $ref: '#/components/schemas/IdName'
        permission:
          $ref: '#/components/schemas/IdName'
      type: object
    PlanAdditionalProperties:
      properties:
        RPO:
          description: The least RPO in minutes for the plan
          format: int32
          type: integer
        addons:
          $ref: '#/components/schemas/PlanAddons'
        status:
          $ref: '#/components/schemas/PlanStatus'
          description: status if plan backups are enabled or disabled
      type: object
    PlanAddonStatus:
      enum:
        - DISABLED
        - ENABLED
        - INCOMPLETE
      type: string
    PlanAddons:
      properties:
        database:
          description: Database options should be shown with this plan
          type: boolean
        fileSystem:
          description: File system options should be shown with this plan
          type: boolean
        indexCopy:
          description: Index copy options should be shown with this plan
          type: boolean
        snap:
          description: Snap options should be shown with this plan
          type: boolean
        snapStatus:
          $ref: '#/components/schemas/PlanAddonStatus'
      type: object
    PlanBackupDestination:
      description: ''
      properties:
        backupStartTime:
          description: Backup start time in number of seconds. The time is provided in unix time format.
          format: int32
          type: integer
        backupsToCopy:
          $ref: '#/components/schemas/PlanFullBackupType'
        copyPrecedence:
          description: Order of backup destinaion copy created in storage policy
          format: int32
          type: integer
        copyType:
          $ref: '#/components/schemas/PlanCopyType'
        copyTypeName:
          $ref: '#/components/schemas/PlanCopyTypeName'
        enableDataAging:
          description: Tells if this copy has data aging enabled
          type: boolean
        extendedRetentionRules:
          $ref: '#/components/schemas/ExtendedRetentionRules'
        fullBackupTypesToCopy:
          $ref: '#/components/schemas/PlanFullBackupTypeToCopy'
        isDefault:
          description: Is this a default backup destination?
          type: boolean
        isMirrorCopy:
          description: Is this a mirror copy?
          type: boolean
        isSnapCopy:
          description: Is this a snap copy?
          type: boolean
        mappings:
          items:
            $ref: '#/components/schemas/SnapshotCopyMapping'
          type: array
        netAppCloudTarget:
          description: Only for snap copy. Tells if the snap copy supports SVM Mapping to NetApp cloud targets only.
          type: boolean
        overrideRetentionSettings:
          description: Tells if this copy should use storage pool retention period days or the retention defined for this copy. Set as true to use retention defined on this copy.
          type: boolean
        planBackupDestination:
          $ref: '#/components/schemas/IdName'
        region:
          $ref: '#/components/schemas/IdNameDisplayName'
        retentionPeriodDays:
          description: Retention period in days
          format: int32
          maximum: 9999
          minimum: 1
          type: integer
        retentionRuleType:
          $ref: '#/components/schemas/RetentionRuleTypes'
        snapRecoveryPoints:
          description: Number of snap recovery points for snap copy for retention
          format: int32
          type: integer
        sourceCopy:
          $ref: '#/components/schemas/IdName'
        storagePool:
          $ref: '#/components/schemas/StoragePool'
        storageType:
          $ref: '#/components/schemas/StorageType'
        useExtendedRetentionRules:
          description: Should extended retention rules be used
          type: boolean
      type: object
    PlanBackupDestinationBackupTypeInfo:
      description: ''
      properties:
        backupTypesCopiedFrom:
          description: 'Tells what start date, backup types should be copied from. The date is provided in unix time format in number of seconds. -1 means initial backup date.'
          format: int32
          type: integer
        backupTypesToCopy:
          $ref: '#/components/schemas/PlanFullBackupType'
        fullBackupTypesToCopy:
          $ref: '#/components/schemas/PlanFullBackupTypeToCopy'
      type: object
    PlanBackupDestinationDetails:
      description: ''
      properties:
        backupType:
          $ref: '#/components/schemas/PlanBackupDestinationBackupTypeInfo'
        configurable:
          description: Flag to specify whether backup destination is configurable (True when it belongs to a base plan or a derived plan with overriden storage pool)
          type: boolean
        general:
          $ref: '#/components/schemas/PlanBackupDestinationGeneralInfo'
        mappings:
          items:
            $ref: '#/components/schemas/SnapshotCopyMapping'
          type: array
        plan:
          $ref: '#/components/schemas/IdName'
        planBackupDestination:
          $ref: '#/components/schemas/IdName'
        region:
          $ref: '#/components/schemas/IdNameDisplayName'
        retentionRules:
          $ref: '#/components/schemas/PlanBackupDestinationRetentionRuleInfo'
      type: object
    PlanBackupDestinationGeneralInfo:
      description: ''
      properties:
        copyPrecedence:
          description: Order of backup destinaion copy created in storage policy
          format: int32
          type: integer
        copyType:
          $ref: '#/components/schemas/PlanCopyType'
        isActive:
          description: Is this an active backup destination?
          type: boolean
        isDefault:
          description: Is this a default backup destination?
          type: boolean
        isMirrorCopy:
          description: Is this a mirror copy?
          type: boolean
        isSnapCopy:
          description: Is this a snap copy?
          type: boolean
        netAppCloudTarget:
          description: Only for snap copy. Tells if the snap copy supports SVM Mapping to NetApp cloud targets only.
          type: boolean
        snapCopyType:
          $ref: '#/components/schemas/PlanCopyTypeName'
        source:
          $ref: '#/components/schemas/IdName'
        storage:
          $ref: '#/components/schemas/StoragePool'
        storageType:
          $ref: '#/components/schemas/StorageType'
      type: object
    PlanBackupDestinationGeneralInfoUpdate:
      description: ''
      properties:
        isActive:
          description: Toggle to keep backup destination active
          type: boolean
        source:
          $ref: '#/components/schemas/IdName'
      type: object
    PlanBackupDestinationResp:
      properties:
        error:
          $ref: '#/components/schemas/GenericResp'
        failedDestinations:
          description: List of destinations for which the operation failed
          items:
            type: string
          nullable: true
          type: array
        planBackupDestination:
          description: List of destinations effected or created
          items:
            $ref: '#/components/schemas/IdName'
          nullable: true
          type: array
      type: object
    PlanBackupDestinationRetentionRuleInfo:
      description: ''
      properties:
        enableDataAging:
          description: Tells if this copy has data aging enabled
          type: boolean
        extendedRetentionRules:
          $ref: '#/components/schemas/ExtendedRetentionRules'
        fullBackupTypesToBeRetained:
          $ref: '#/components/schemas/PlanFullBackupTypeToCopy'
        overrideRetentionSettings:
          description: Tells if this copy should use storage pool retention period days or the retention defined for this copy. Set as true to use retention defined on this copy.
          type: boolean
        retentionPeriodDays:
          description: Retention period in days
          format: int32
          maximum: 9999
          minimum: 1
          type: integer
        retentionRuleType:
          $ref: '#/components/schemas/RetentionRuleTypes'
        snapRecoveryPoints:
          description: Number of snap recovery points for snap copy for retention
          format: int32
          type: integer
        useExtendedRetentionRules:
          description: Should extended retention rules be used
          type: boolean
      type: object
    PlanBackupDestinations:
      properties:
        backupdestinations:
          items:
            $ref: '#/components/schemas/PlanBackupDestination'
          nullable: true
          type: array
        regionsConfigured:
          description: Specifies if the plan has region-based storage
          type: boolean
      type: object
    PlanComponentError:
      properties:
        component:
          description: Plan Entity for which error occured
          nullable: true
          type: string
        errorCode:
          description: Error Code for plan
          format: int32
          type: integer
        errorMessage:
          description: Error message for plan
          nullable: true
          type: string
      type: object
    PlanContent:
      description: This feature applies only to file system agents
      properties:
        backupSystemState:
          description: Do you want to back up the system state? Applicable only for Windows
          type: boolean
        backupSystemStateOnlyWithFullBackup:
          default: false
          description: Do you want to back up system state only with full backup? Applicable only if the value of backupSystemState is true
          type: boolean
        forceUpdateProperties:
          description: Do you want to sync properties on associated subclients even if properties are overriden at subclient level?
          type: boolean
        macExcludedPaths:
          description: Paths to exclude for Mac
          items:
            type: string
          nullable: true
          type: array
        macFilterToExcludePaths:
          description: Paths that are exception to excluded paths for Mac
          items:
            type: string
          nullable: true
          type: array
        macIncludedPaths:
          description: Paths to include for Mac
          items:
            type: string
          nullable: true
          type: array
        macNumberOfDataReaders:
          $ref: '#/components/schemas/PlanContentDataReaders'
        unixExcludedPaths:
          description: Paths to exclude for UNIX
          items:
            type: string
          nullable: true
          type: array
        unixFilterToExcludePaths:
          description: Paths that are exception to excluded paths for Unix
          items:
            type: string
          nullable: true
          type: array
        unixIncludedPaths:
          description: Paths to include for UNIX
          items:
            type: string
          nullable: true
          type: array
        unixNumberOfDataReaders:
          $ref: '#/components/schemas/PlanContentDataReaders'
        useVSSForSystemState:
          description: Do you want to back up system state with VSS? Applicable only if the value of backupSystemState is true
          type: boolean
        windowsExcludedPaths:
          description: Paths to exclude for Windows
          items:
            type: string
          nullable: true
          type: array
        windowsFilterToExcludePaths:
          description: Paths that are exception to excluded paths for Windows
          items:
            type: string
          nullable: true
          type: array
        windowsIncludedPaths:
          description: Paths to include for Windows
          items:
            type: string
          nullable: true
          type: array
        windowsNumberOfDataReaders:
          $ref: '#/components/schemas/PlanContentDataReaders'
      type: object
    PlanContentDataReaders:
      properties:
        count:
          description: Number of data readers.
          format: int32
          minimum: 1
          type: integer
        useOptimal:
          description: 'Set optimal number of data readers. if it is set to true, count will be ignored.'
          type: boolean
      type: object
    PlanCopyType:
      enum:
        - SYNCHRONOUS
        - SELECTIVE
      title: ''
      type: string
    PlanCopyTypeName:
      enum:
        - DEFAULT_MIRROR
        - DEFAULT_VAULT_REPLICA
        - MIRROR
        - VAULT_REPLICA
        - SNAPSHOT_PRIMARY
      title: ''
      type: string
    PlanEntityRuleInfo:
      description: This object will hold each plan rule details.
      properties:
        company:
          $ref: '#/components/schemas/IdName'
        plan:
          $ref: '#/components/schemas/IdName'
        rank:
          description: This will suggest rank/priority of the plan rule.
          format: int32
          type: integer
        regions:
          description: This will include list of regions that should be evaluated against workload region for plan association
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        rule:
          $ref: '#/components/schemas/IdName'
        serverGroups:
          description: This will include list of Server groups that should be evaluated against workload server group for plan association
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        solutions:
          description: This will include list of solutions that should be evaluated against workload for plan association.
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        tags:
          description: This will include list of tags that should be evaluated against workload tags (if any) for plan association
          items:
            $ref: '#/components/schemas/PlanEntityRuleTag'
          type: array
        workloads:
          description: This will include list of apptypes that should be evaluated against workload for plan association
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      required:
        - rule
        - plan
      title: PlanEntityRuleInfo
      type: object
    PlanEntityRuleList:
      description: List holding details of various plan rules
      properties:
        rules:
          description: list of rules
          items:
            $ref: '#/components/schemas/PlanEntityRuleInfo'
          type: array
      title: PlanEntityRuleList
      type: object
    PlanEntityRuleRank:
      description: This object will hold detail for plan rule entity and its rank.
      properties:
        rank:
          description: This will suggest rank/priority of the plan rule.
          format: int32
          type: integer
        rule:
          $ref: '#/components/schemas/IdName'
      title: PlanEntityRuleRank
      type: object
    PlanEntityRuleTag:
      description: Object to suggest possible plan rule tags that can be part of plan entity rule
      properties:
        id:
          description: Id for the tag
          format: int32
          type: integer
        name:
          description: Name for the plan rule tag which need to be matched against tag of the workload.
          type: string
        value:
          description: Possible value that need to matched against value of tag associated to workload.
          type: string
      title: PlanEntityRuleTag
      type: object
    PlanFileSearch:
      description: 'This feature applies to file servers and virtualization. Enabling this feature allows you to search for backed-up files using the global search bar, and creates resource pools with required infrastructure entities.'
      properties:
        enabled:
          description: Flag for enabling indexing
          type: boolean
        errors:
          description: File search was enabled on plan but failed to process some of the storage pool(s) with these errors
          items:
            $ref: '#/components/schemas/PlanFileSearchSetupError'
          nullable: true
          type: array
          x-terraform-include: false
        status:
          $ref: '#/components/schemas/IndexingStatusType'
        statusMessage:
          description: 'Tells what is happening behind the scene, so that user can knows why indexing is not enabled or if its in progress'
          nullable: true
          type: string
      title: ''
      type: object
    PlanFileSearchSetupError:
      properties:
        errorCode:
          format: int32
          type: integer
        errorMessage:
          description: Tells about the error occured during file search setup for given storage pool
          type: string
        storage:
          $ref: '#/components/schemas/IdName'
      title: PlanFileSearchSetupError
      type: object
    PlanFullBackupType:
      enum:
        - All_JOBS
        - ALL_FULLS
        - HOURLY_FULLS
        - DAILY_FULLS
        - WEEKLY_FULLS
        - MONTHLY_FULLS
        - QUARTERLY_FULLS
        - HALF_YEARLY_FULLS
        - YEARLY_FULLS
        - ADVANCED
      format: ''
      type: string
    PlanFullBackupTypeToCopy:
      description: Which type of backup type should be copied for the given backup destination when backup type is not all jobs. Default is LAST while adding new backup destination.
      enum:
        - FIRST
        - LAST
      title: PlanFullBackupTypeToCopy
      type: string
    PlanIdNameType:
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        subType:
          $ref: '#/components/schemas/SubTypes'
      title: ''
      type: object
    PlanOverrideInheritSetting:
      description: This feature applies to derived plans when inherit mode is optional.Provides user to set entity preference between parent and derived plan.
      properties:
        backupContent:
          description: 'Flag to specify if parent or derived plan backupContent should be used when inherit mode is optional. True - derived, False - Base.'
          type: boolean
        backupDestination:
          description: 'Flag to specify if parent or derived plan backupDestination should be used when inherit mode is optional. True - derived, False - Base.'
          type: boolean
        rpo:
          description: 'Flag to specify if parent or derived plan rpo should be used when inherit mode is optional. True - derived, False - Base.'
          type: boolean
      title: PlanOverrideInheritSetting
      type: object
    PlanOverrideOptions:
      enum:
        - OPTIONAL
        - MUST
        - NOT_ALLOWED
      format: ''
      type: string
    PlanOverrideSettings:
      properties:
        RPO:
          $ref: '#/components/schemas/PlanOverrideOptions'
        backupContent:
          $ref: '#/components/schemas/PlanOverrideOptions'
        storagePool:
          $ref: '#/components/schemas/PlanOverrideOptions'
      type: object
    PlanOverridenOptions:
      properties:
        overridden:
          description: Flag telling if this setting is currently being overriden
          type: boolean
        overrideBase:
          $ref: '#/components/schemas/PlanOverrideOptions'
      title: PlanOverridenOptions
      type: object
    PlanPattern:
      description: 'If updating pattern, the value which needs to be retained also needs to be provided along with the updated value'
      properties:
        dailyFrequency:
          description: Frequency in days
          format: int32
          minimum: 1
          type: integer
        hourlyFrequency:
          description: 'Frequency in hours per day. Precedence is hourly, daily, weekly and monthly, in that order.'
          format: int32
          minimum: 1
          type: integer
        minuteFrequency:
          description: Frequency in minutes
          format: int32
          minimum: 1
          type: integer
        monthlyFrequency:
          description: Frequency in months. Only for incremental backup frequency.
          format: int32
          minimum: 1
          type: integer
        monthlyFrequencyDayOfMonth:
          description: Only available for incremental backup frequency
          format: int32
          maximum: 31
          minimum: 1
          type: integer
        monthlyFrequencyDayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
        monthlyFrequencyWeekOfMonth:
          $ref: '#/components/schemas/WeekOfTheMonth'
        startTime:
          description: 'Time in seconds from the beginning of the day when the backup starts. This is a mandatory field for daily, weekly, monthly, yearly frequencies'
          format: int32
          type: integer
        weeklyFrequency:
          description: Frequency in weeks. Only for incremental backup frequency.
          format: int32
          minimum: 1
          type: integer
        weeklyFrequencyDays:
          description: Days of the week for weekly frequency
          items:
            $ref: '#/components/schemas/DayOfTheWeek'
          type: array
        yearlyFrequencyDayOfMonth:
          description: Only available for incremental backup frequency
          format: int32
          maximum: 31
          minimum: 1
          type: integer
        yearlyFrequencyDayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
        yearlyFrequencyMonthOfYear:
          $ref: '#/components/schemas/MonthOfYear'
        yearlyFrequencyWeekOfMonth:
          $ref: '#/components/schemas/WeekOfTheMonth'
      type: object
    PlanResp:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/PlanComponentError'
          nullable: true
          type: array
        plan:
          $ref: '#/components/schemas/IdName'
          x-terraform-id: id
      type: object
    PlanRetentionRule:
      properties:
        isInfiniteRetention:
          type: boolean
        retentionPeriodDays:
          description: Default value is 30 days. Infinite retention takes precedence over retentionPeriodDays.
          format: int32
          type: integer
        type:
          $ref: '#/components/schemas/PlanFullBackupType'
      type: object
    PlanRuleApplicableEntitiesList:
      description: List of entities that are applicable for plan association via plan assignment rules.
      properties:
        entities:
          description: Details of entity applicable for plan association.
          items:
            $ref: '#/components/schemas/PlanRuleApplicableEntity'
          type: array
      title: PlanRuleApplicableEntitiesList
      type: object
    PlanRuleApplicableEntity:
      description: Entity applicable for plan association via plan assignment rules.
      properties:
        apptype:
          $ref: '#/components/schemas/IdName'
        backupset:
          $ref: '#/components/schemas/IdName'
        client:
          $ref: '#/components/schemas/IdName'
        currentPlan:
          $ref: '#/components/schemas/IdName'
        evaluatedPlan:
          $ref: '#/components/schemas/IdName'
        instance:
          $ref: '#/components/schemas/IdName'
        ruleDetails:
          $ref: '#/components/schemas/PlanEntityRuleInfo'
        subclient:
          $ref: '#/components/schemas/IdName'
      title: PlanRuleApplicableEntity
      type: object
    PlanRuleExcludedEntitiesList:
      description: List of entities that are excluded from plan rule evaluation.
      properties:
        entities:
          description: Details of entity excluded for plan association via plan rules.
          items:
            $ref: '#/components/schemas/WorkloadEntity'
          type: array
      title: PlanRuleExcludedEntitiesList
      type: object
    PlanRuleExecutionMode:
      description: Plan rule execution mode
      enum:
        - 'OFF'
        - MANUAL
        - AUTOMATIC
      title: PlanRuleExecutionMode
      type: string
    PlanRuleExecutionSettings:
      description: Message object to hold settings for plan rule execution.
      properties:
        enableAlertNotification:
          description: 'Set this to enable/disable notification over email for subclients pending plan associationover 24 hours. By default, notification will be enabled.'
          type: boolean
        executionInterval:
          description: Setting to suggest evaluation frequency in case of evaluation mode being Automatic.
          format: int32
          type: integer
        executionMode:
          $ref: '#/components/schemas/PlanRuleExecutionMode'
      title: PlanRuleExecutionSettings
      type: object
    PlanSchedule:
      description: Used to describe single plan schedule information
      properties:
        backupType:
          description: Schedule Backup level
          enum:
            - FULL
            - INCREMENTAL
            - DIFFERENTIAL
            - SYNTHETICFULL
            - TRANSACTIONLOG
          type: string
        forDatabasesOnly:
          default: false
          description: Boolean to indicate if schedule is for database agents
          type: boolean
        policyId:
          description: Schedule policy Id to which the schedule belongs
          format: int32
          type: integer
        scheduleId:
          description: 'Id of the schedule if available, required for modifying, deleting schedule'
          format: int32
          type: integer
        scheduleName:
          description: 'Name of the schedule, for modify'
          type: string
        scheduleOperation:
          default: MODIFY
          description: Operation being performed on schedule
          enum:
            - ADD
            - DELETE
            - MODIFY
          type: string
        scheduleOption:
          $ref: '#/components/schemas/ScheduleOption'
        schedulePattern:
          $ref: '#/components/schemas/SchedulePattern'
        vmOperationType:
          description: Type of DR operation (only applicable for Failover groups)
          enum:
            - PLANNED_FAILOVER
            - TEST_BOOT
          nullable: true
          type: string
      required:
        - scheduleOperation
        - backupType
        - forDatabasesOnly
        - schedulePattern
      title: PlanSchedule
      type: object
    PlanSchedules:
      properties:
        schedules:
          items:
            $ref: '#/components/schemas/PlanSchedule'
          nullable: true
          type: array
      title: PlanSchedules
      type: object
    PlanSnapshotOptions:
      description: This feature applies only to File System Agents
      properties:
        backupCopyFrequency:
          $ref: '#/components/schemas/BackupFrequencyPattern'
        backupCopyRPOMins:
          description: Backup copy RPO in minutes
          format: int32
          type: integer
        enableBackupCopy:
          description: Flag to enable backup copy
          type: boolean
      title: ''
      type: object
    PlanSourceCopies:
      properties:
        copy:
          description: List of backup destinations which can act as source copy for a new copy
          items:
            $ref: '#/components/schemas/PlanSourceCopy'
          type: array
      title: PlanSourceCopies
      type: object
    PlanSourceCopy:
      description: ''
      properties:
        arrayReplicaCopy:
          description: Is this an array replica copy?
          type: boolean
        backupDestination:
          $ref: '#/components/schemas/IdName'
        copyPrecedence:
          description: Order of backup destinaion copy created in storage policy
          format: int32
          type: integer
        copyType:
          $ref: '#/components/schemas/PlanCopyType'
        defaultReplicaCopy:
          description: Is this a default replica copy?
          type: boolean
        isActive:
          description: Is this an active backup destination?
          type: boolean
        isDefault:
          description: Is this a default backup destination?
          type: boolean
        isMirrorCopy:
          description: Is this a mirror copy?
          type: boolean
        isSnapCopy:
          description: Is this a snap copy?
          type: boolean
        snapCopyType:
          $ref: '#/components/schemas/PlanCopyTypeName'
      title: PlanSourceCopy
      type: object
    PlanStatus:
      enum:
        - ENABLED
        - DISABLED
        - INCOMPLETE
        - HIDDEN
        - BACKUP_DISABLED
      format: ''
      type: string
    PlanSummary:
      properties:
        RPO:
          description: RPO in minutes for the plan
          format: int32
          minimum: 0
          type: integer
        associatedEntities:
          description: Count of associated entities for the plan
          format: int32
          minimum: 0
          type: integer
        commcell:
          description: Tells which commcell this plan belongs to.
          nullable: true
          type: string
        company:
          $ref: '#/components/schemas/IdName'
        derivable:
          description: Tells if this plan can be used to derive from and create a new child plan
          type: boolean
        missingEntities:
          description: For plans in incomplete state contains list of entities missing from the plan
          items:
            $ref: '#/components/schemas/IdName'
          nullable: true
          type: array
        numberOfCopies:
          description: Number of copies for the plan
          format: int32
          minimum: 0
          type: integer
        parentPlan:
          $ref: '#/components/schemas/IdName'
        plan:
          $ref: '#/components/schemas/IdName'
        planType:
          $ref: '#/components/schemas/PlanType'
        resourcePool:
          description: This lists the various resource Pools of different app types associated with storage pools of plan
          items:
            $ref: '#/components/schemas/IdName'
          nullable: true
          type: array
        status:
          $ref: '#/components/schemas/PlanStatus'
        tags:
          description: Tags associated with this plan
          items:
            $ref: '#/components/schemas/IdNameValue'
          nullable: true
          type: array
        targetApp:
          description: This tells the content indexing target apps for data classification plans
          items:
            $ref: '#/components/schemas/PlanTargetApp'
          nullable: true
          type: array
      type: object
    PlanSummaryListResp:
      properties:
        plans:
          items:
            $ref: '#/components/schemas/PlanSummary'
          nullable: true
          type: array
        plansCount:
          description: Number of plans returned
          format: int32
          type: integer
      type: object
    PlanTargetApp:
      description: Content indexing target app
      enum:
        - NOT_AVAILABLE
        - FILE_STORAGE_OPTIMIZATION
        - SENSITIVE_DATA_GOVERNANCE
        - CASE_MANAGER
        - CONTENT_INDEXING
        - THREAT_ANALYSIS
      type: string
    PlanType:
      enum:
        - Server
        - Laptop
        - FSIBMiVTL
        - ExchangeJournal
        - ExchangeUser
        - Office365
        - DataClassification
        - Archiver
        - CDM
        - DLO
        - Database
        - Snap
        - FSServer
        - VSAServer
        - Dynamics365
      format: ''
      type: string
    PlanUserOrGroups:
      description: Users or User Groups associated with the plan
      properties:
        id:
          description: This gives Id of user or user group or external user group
          format: int32
          type: integer
        name:
          description: This gives name of user or user group or external user group
          type: string
        sendInvite:
          default: true
          description: 'If set to true, will send an invite email to the user or group. Default is true.'
          type: boolean
        type:
          $ref: '#/components/schemas/UserOrGroupsType'
      title: ''
      type: object
    PlanWorkloads:
      properties:
        solutions:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        workloadGroupTypes:
          items:
            $ref: '#/components/schemas/WorkloadGroup'
          type: array
        workloadTypes:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      title: PlanWorkloads
      type: object
    ProvisioningOptions:
      properties:
        maximumCPUCores:
          description: Maximum cores for the VM
          format: int32
          type: integer
        maximumMemory:
          description: Maximum memory of the VM in GBs
          type: string
        numberOfVMs:
          description: Number of VMs that each user can create using this recovery target
          format: int32
          type: integer
        templates:
          items:
            $ref: '#/components/schemas/Template'
          type: array
      title: ProvisioningOptions
      type: object
    RMConfigureRequest:
      properties:
        approvers:
          description: List of approvers for the request
          items:
            $ref: '#/components/schemas/IdNameDisplayName'
          type: array
        projectIds:
          description: List of project ids
          items:
            format: int32
            minimum: 1
            type: integer
          type: array
        reviewers:
          description: List of reviewers for the request
          items:
            $ref: '#/components/schemas/IdNameDisplayName'
          type: array
      required:
        - projectIds
        - reviewers
      title: RMConfigureRequest
      type: object
    RMCreateRequest:
      properties:
        deleteFromBackup:
          default: false
          type: boolean
        enableDocumentChaining:
          default: false
          description: 'If additional entities are found in a document, include documents that contain those additional entities in search results'
          type: boolean
        enableRedaction:
          default: false
          description: This option redacts sensitive information from the files in the request
          type: boolean
        entities:
          description: List of personal entities with their values to form the criteria for the request
          items:
            $ref: '#/components/schemas/NameValues'
          type: array
        name:
          description: Name of the request
          type: string
        requestor:
          format: email
          type: string
        type:
          $ref: '#/components/schemas/RMRequestType'
      required:
        - name
        - type
        - requestor
        - entities
      title: RMCreateRequest
      type: object
    RMProjectInfo:
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        status:
          $ref: '#/components/schemas/RMProjectStatus'
      title: RMProjectInfo
      type: object
    RMProjectStatus:
      description: INVALID_PLAN_ENTITIES signifies the plan configuration associated to project does not contain at least one entity that is configured for the request in consideration. DATASOURCE_UNAVAILABLE signifies no data sources associated to the project.
      enum:
        - VALID
        - DATASOURCE_UNAVAILABLE
        - INVALID_PLAN_ENTITIES
      title: RMProjectStatus
      type: string
    RMProjectsList:
      properties:
        projects:
          items:
            $ref: '#/components/schemas/RMProjectInfo'
          type: array
      title: RMProjectsList
      type: object
    RMRequestDetails:
      allOf:
        - $ref: '#/components/schemas/RMRequestSummary'
        - properties:
            properties:
              description: Properties of the request
              items:
                $ref: '#/components/schemas/NameValues'
              type: array
          type: object
      description: ''
      title: RMRequestDetails
    RMRequestList:
      description: ''
      properties:
        requests:
          description: List of Request Manager Requests
          items:
            $ref: '#/components/schemas/RMRequestSummary'
          type: array
      title: RMRequestList
      type: object
    RMRequestStatus:
      description: Signifies the progress of the request
      enum:
        - TaskCreated
        - TaskConfigured
        - ReviewInProgress
        - ReviewCompleted
        - ApproveCompleted
        - TaskCompleted
        - ApprovalRequested
        - ActionInProgress
        - CompletedWithErrors
        - Failed
        - ReviewDeclined
      title: RMRequestStatus
      type: string
    RMRequestSummary:
      description: ''
      properties:
        application:
          $ref: '#/components/schemas/ActivateApplication'
        approvers:
          description: List of the request approvers
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        createdOn:
          description: Request creation time in unix epoch format
          format: int64
          type: integer
        id:
          description: Request id
          format: int32
          type: integer
        name:
          description: Request name
          type: string
        owner:
          $ref: '#/components/schemas/IdName'
        requestor:
          description: Email of the requestor
          format: email
          type: string
        reviewers:
          description: List of request reviewers
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        status:
          $ref: '#/components/schemas/RMRequestStatus'
        type:
          $ref: '#/components/schemas/RMRequestType'
      title: RMRequestSummary
      type: object
    RMRequestType:
      description: ''
      enum:
        - EXPORT
        - DELETE
        - MOVE
        - RETENTION
        - IGNORE
        - ARCHIVE
        - TAG
      title: RMRequestType
      type: string
    RPStoreListEntity:
      description: Recovery point store entity detail on the listing page.
      properties:
        library:
          $ref: '#/components/schemas/IdName'
        model:
          description: Model of recovery point store library.
          enum:
            - DISK
            - CLOUD
          example: DISK
          type: string
        status:
          description: Status of recovery point store library.
          enum:
            - READY
            - OFFLINE
            - DECONFIGURED
          example: READY
          type: string
      title: RPStoreListEntity
      type: object
    RPStoreListResponse:
      description: List of recovery point stores.
      properties:
        stores:
          items:
            $ref: '#/components/schemas/RPStoreListEntity'
          type: array
      title: RPStoreListResponse
      type: object
    Rackspace:
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - properties:
            cloudType:
              description: Name of cloud vendor
              enum:
                - Rackspace Cloud Files
              type: string
            container:
              description: Name of container
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              default: api.mosso.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - credentials
            - container
          type: object
        - $ref: '#/components/schemas/DedupeStorageList'
      description: ''
      title: Rackspace Cloud Files
    RackspaceBucket:
      allOf:
        - properties:
            cloudType:
              description: Name of cloud vendor
              enum:
                - Rackspace Cloud Files
              type: string
            container:
              description: Name of container
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              default: api.mosso.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - credentials
            - container
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
      description: ''
      title: Rackspace Cloud Files
    RackspaceBucketContent:
      allOf:
        - properties:
            cloudType:
              description: Name of cloud vendor
              enum:
                - Rackspace Cloud Files
              type: string
            container:
              description: Name of container
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              default: api.mosso.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
      description: ''
      title: Rackspace Cloud Files
    ReasonDetails:
      properties:
        mightMissReason:
          description: Gives the reason as to why the SLA might not be met.
          type: string
        subclient:
          $ref: '#/components/schemas/IdName'
      type: object
    RecoveryOptions:
      description: Recovery options to be specified for a continuous replication group
      properties:
        crashConsistentRpInterval:
          description: Option to create crash-consistent recovery points
          format: int32
          type: integer
        mergeRecoveryPointsOlderThan:
          description: Option to combine older recovery points into larger recovery points
          format: int32
          type: integer
        pruneAndMergeRecoveryPoints:
          description: Specify whether to transfer updates for the oldest recovery points to destination computer during off-peak hours.
          type: boolean
        recoveryPointInterval:
          description: Option to specify the time interval between the oldest recovery points in the RP Store
          format: int32
          type: integer
        recoveryPointStore:
          description: Select the Recovery Point Store on the destination site where journal entries for each recovery point are stored
          type: string
        recoveryType:
          description: Type of recovery. Values are case sensitive
          enum:
            - LIVE
            - SNAPSHOT
            - GRANULAR
            - GRANULARV2
          type: string
        retainRecoveryPointsFor:
          description: Option to specify how long journal entries for a recovery point should be retained
          format: int32
          type: integer
      title: RecoveryOptions
      type: object
    RecoveryOptionsCreate:
      description: 'Recovery options for a continuous replication group. recoveryPointStore is an intermediate storage for recovery points. Provide both the id and the name of the recoveryPointStore. Either crash consistent or application consistent RP interval is mandatory. '
      properties:
        recoveryPointInterval:
          $ref: '#/components/schemas/RecoveryPointIntervalCreate'
        recoveryPointRetention:
          $ref: '#/components/schemas/RecoveryPointRetentionCreate'
        recoveryPointStore:
          $ref: '#/components/schemas/IdName'
        recoveryType:
          default: POINT_IN_TIME_RECOVERY
          description: Type of recovery.
          enum:
            - LATEST_RECOVERY
            - POINT_IN_TIME_RECOVERY
          type: string
      required:
        - recoveryType
        - recoveryPointStore
      title: RecoveryOptions
      type: object
    RecoveryPointIntervalCreate:
      description: Recovery point interval inputs for continuous replication group. Provide atleast one of crash consistent and application consistent interval.
      properties:
        applicationConsistentRpInterval:
          default: 0
          description: Time(in seconds) after which the source VMs are quiesced to create application-consistent recovery points for destination VMs. Applicable only for Point in time recovery.
          format: int32
          type: integer
        crashConsistentRpInterval:
          default: 300
          description: Minimum time interval(in seconds) between VM recovery points. Applicable only for Point in time recovery.
          format: int32
          type: integer
      title: RecoveryPointInterval
      type: object
    RecoveryPointRetentionCreate:
      description: Recovery point retention inputs for continuous replication group.
      properties:
        mergeRecoveryPoints:
          default: true
          description: Merge the recovery points beyond the time provided in mergeRecoveryPointsOlderThan
          type: boolean
        mergeRecoveryPointsOlderThan:
          default: 172800
          description: 'Applicable only if mergeRecoveryPoints is set to true. Beyond this period(in seconds), older recovery points will be merged into progressively coarser intervals going back in time. Applicable only for Point in time recovery. The value cannot exceed the value of retainRecoveryPointsFor.'
          format: int32
          minimum: 1
          type: integer
        pruneAndMergeDuringOffPeak:
          default: false
          description: Transfers the updates of the oldest recovery points to destination VM only during off-peak hours. The peak interval time should be configured in the RP store.  Applicable only for Point in time recovery.
          type: boolean
        recoveryPointIntervalAtEndofRetention:
          default: 21600
          description: Applicable only if mergeRecoveryPoints is set to true.  Time interval(in seconds) between the older recovery points. Applicable only if mergeRecoveryPointsOlderThan and Point in time recovery is selected. The value cannot exceed the value of retainRecoveryPointsFor or 86400 seconds(1 day).
          format: int32
          maximum: 86400
          minimum: 1
          type: integer
        retainRecoveryPointsFor:
          default: 604800
          description: The lengh of time(in seconds) to a retain the recovery point entries. Applicable only for Point in time recovery.
          format: int32
          minimum: 1
          type: integer
        rpStoreOfflineFor:
          default: 0
          description: Time(in seconds) after which the recovery type is switched to 'Latest recovery' if RP store is offline. Applicable only for Point in time recovery.
          format: int32
          minimum: 0
          type: integer
      required:
        - retainRecoveryPointsFor
      title: RecoveryPointRetention
      type: object
    RecoveryPointStoreDetails:
      description: Details about Recovery Point Stores
      properties:
        associatedMediaAgent:
          description: Tape library MediaAgent association
          type: string
        freeSpace:
          description: Magnetic library total free space
          type: string
        locations:
          description: Mount Path locations details
          items:
            $ref: '#/components/schemas/MountLocationDetails'
          type: array
        maximumSize:
          description: Magnetic library capacity size
          type: string
        peakInterval:
          description: Interval window containing day and time details
          items:
            $ref: '#/components/schemas/DayAndTime'
          type: array
        storageName:
          description: Name of the storage library.
          type: string
        totalCapacity:
          description: Magnetic library capacity.
          type: string
      title: RecoveryPointStoreDetails
      type: object
    RecoveryTargetDetails:
      description: Recovery target info
      properties:
        accessNode:
          $ref: '#/components/schemas/IdNameType'
        associatedClientGroup:
          $ref: '#/components/schemas/IdName'
        cloudDestinationOptions:
          $ref: '#/components/schemas/cloudDestinationOptions'
        destinationOptions:
          $ref: '#/components/schemas/DestinationOptions'
        entity:
          $ref: '#/components/schemas/GetRecoveryTargetListSummary'
        isoInfo:
          description: Info for the Windows/Unix ISO files
          items:
            $ref: '#/components/schemas/IsoInfo'
          type: array
        liveMountOptions:
          $ref: '#/components/schemas/LiveMountOptions'
        networkOptions:
          $ref: '#/components/schemas/NetworkOptions'
        provisioningOptions:
          $ref: '#/components/schemas/ProvisioningOptions'
        securityOptions:
          $ref: '#/components/schemas/SecurityOptions'
        virtualLabOptions:
          $ref: '#/components/schemas/VirtualLabOptions'
        vmDisplayName:
          $ref: '#/components/schemas/VMDisplayName'
        vmStoragePolicyName:
          description: Name of Storage policy linked with the vm
          type: string
        zone:
          $ref: '#/components/schemas/Zone'
      title: RecoveryTargetDetails
      type: object
    RedHatOpenShiftGluster:
      properties:
        authType:
          description: 'Gluster Host authtype '
          format: int32
          type: integer
        credentials:
          $ref: '#/components/schemas/UserNamePassword'
        hostName:
          description: 'Gluster Host Hostname '
          type: string
      required:
        - hostName
      type: object
    RegionAssociatedServers:
      description: Details of servers associated to a region
      properties:
        servers:
          items:
            $ref: '#/components/schemas/RegionAssociatedServersList'
          type: array
        serversCount:
          format: int32
          type: integer
      title: RegionAssociatedServers
      type: object
    RegionAssociatedServersList:
      description: List of servers associated to a region
      properties:
        latitude:
          format: double
          type: number
        longitude:
          format: double
          type: number
        server:
          $ref: '#/components/schemas/IdName'
      title: RegionAssociatedServersList
      type: object
    RegionDetails:
      description: Details for a region
      properties:
        associatedRegionBasedPlans:
          $ref: '#/components/schemas/AssociatedRegionBasedPlans'
        associatedServers:
          $ref: '#/components/schemas/RegionAssociatedServers'
        displayName:
          description: Display name for the region
          type: string
        id:
          description: Region ID
          format: int32
          type: integer
        locations:
          description: List of locations in the region
          items:
            $ref: '#/components/schemas/LocationDetailsWithZone'
          type: array
        name:
          description: Region name
          type: string
        regionType:
          $ref: '#/components/schemas/RegionType'
      title: RegionDetails
      type: object
    RegionInfo:
      properties:
        displayName:
          description: Display Name of Region
          type: string
        id:
          description: Region Id
          format: int32
          type: integer
        latitude:
          description: Geolocation Latitude
          type: string
        longitude:
          description: Geolocation Longitude
          type: string
        name:
          description: Region Name
          type: string
      title: RegionInfo
      type: object
    RegionSummary:
      description: Summary of the region
      properties:
        associatedRegionBasedPlans:
          description: Number of plans associated to the region
          format: int32
          type: integer
        associatedServers:
          description: Number of servers associated to the region
          format: int32
          type: integer
        displayName:
          type: string
        id:
          description: ''
          format: int32
          type: integer
        locations:
          description: List of locations in the region
          items:
            $ref: '#/components/schemas/LocationSummary'
          minItems: 1
          type: array
          uniqueItems: true
        name:
          type: string
        regionType:
          $ref: '#/components/schemas/RegionType'
      title: RegionSummary
      type: object
    RegionType:
      description: Type of region
      enum:
        - DEFAULT
        - AZURE
        - AWS
        - USER_CREATED
        - OCI
        - GCP
      title: RegionType
      type: string
    RegionsListResp:
      description: List of regions
      properties:
        regions:
          description: Regions list
          items:
            $ref: '#/components/schemas/RegionSummary'
          type: array
          uniqueItems: true
      title: RegionsListResp
      type: object
    ReplicationConfigurationAmazon:
      description: Replication configuration for Amazon
      properties:
        availabilityZone:
          description: Destination zone
          type: string
        destinationVM:
          description: Destination instance
          type: string
        instanceType:
          description: Provides the available CPU cores and memory for the instance.
          type: string
        overrideReplicationOptions:
          $ref: '#/components/schemas/OverrideReplicationOptionsAmazon'
        sourceVM:
          description: Source instance
          type: string
      title: ReplicationConfigurationAmazon
      type: object
    ReplicationConfigurationAzure:
      description: Replication configuration for Azure
      properties:
        createPublicIP:
          description: Create a public IP.
          type: boolean
        destinationVM:
          description: Destination VM
          type: string
        overrideReplicationOptions:
          $ref: '#/components/schemas/OverrideReplicationOptionsAzure'
        resourceGroup:
          description: Resource group in which the converted virtual machine should be created.
          type: string
        restoreAsManagedVm:
          description: Restore the VM as a managed disk for the destination VMs.
          type: boolean
        sourceVM:
          description: Source VM
          type: string
        storageAccount:
          description: Azure Standard or Premium general-purpose storage account.
          type: string
        vmSize:
          description: VM size
          type: string
      title: ReplicationConfigurationAzure
      type: object
    ReplicationConfigurationHyperV:
      description: Replication configuration for HyperV
      properties:
        destinationVM:
          description: Destination VM
          type: string
        destinationVolume:
          description: Destination volume for hyperV
          type: string
        hypervHost:
          description: Hypervisor
          type: string
        overrideReplicationOptions:
          $ref: '#/components/schemas/OverrideReplicationOptionsHyperV'
        sourceVM:
          description: Source VM
          type: string
      title: ReplicationConfigurationHyperV
      type: object
    ReplicationConfigurationVMware:
      description: Replication configuration for VMware
      properties:
        datastore:
          description: Select a datastore to be used for virtual machine disks
          type: string
        destinationHost:
          description: Destination hypervisor
          type: string
        destinationVM:
          description: The replicated VM
          type: string
        overrideReplicationOptions:
          $ref: '#/components/schemas/OverrideReplicationOptionsVMWare'
        sourceVM:
          description: The source VM
          type: string
      title: ReplicationConfigurationVMware
      type: object
    ReplicationGroup:
      description: Used to return details of a replication group whose replicationGroupId has been provided
      properties:
        id:
          description: Replication group id
          format: int32
          type: integer
        name:
          description: Replication group name
          type: string
        rpo:
          $ref: '#/components/schemas/Rpo'
        storage:
          $ref: '#/components/schemas/ReplicationGroupStorageList'
        summary:
          $ref: '#/components/schemas/ReplicationGroupSummary'
      title: ReplicationGroup
      type: object
    ReplicationGroupAdvOptionsAmazon:
      description: Advanced options for Amazon replication group
      properties:
        unconditionalOverwrite:
          default: false
          description: This will replace the instance at the destination if the instance with the same name already exists.
          type: boolean
        validateDestinationVM:
          default: true
          description: Validates that the destination VM is bootable by powering it on and then powering off
          type: boolean
      title: ReplicationGroupAdvOptionsAmazon
      type: object
    ReplicationGroupAdvOptionsAzure:
      description: Advanced options for Azure replication group
      properties:
        deployVmOnlyDuringfailover:
          default: true
          description: Select this option to deploy a VM only when a failover operation is requested
          type: boolean
        unconditionalOverwrite:
          default: false
          description: This will replace the instance at the destination if the instance with the same name already exists.
          type: boolean
      title: ReplicationGroupAdvOptionsAzure
      type: object
    ReplicationGroupAdvOptionsHyperV:
      description: Advanced options for HyperV replication group
      properties:
        unconditionalOverwrite:
          default: false
          description: This will replace the instance at the destination if the instance with the same name already exists.
          type: boolean
        validateDestinationVM:
          default: true
          description: Validates that the destination VM is bootable by powering it on and then powering off
          type: boolean
      title: ReplicationGroupAdvOptionsHyperV
      type: object
    ReplicationGroupAdvOptionsVMWare:
      description: Advanced options for VMWare replication group
      properties:
        SnapshotsToRetain:
          default: 0
          description: Number of snapshots to retain on destination VM
          format: int32
          type: integer
        diskProvisioning:
          default: Auto
          description: Select the disk provisioning type for the destination VM. The values are case sensitive.
          enum:
            - Auto
            - Thick
            - Thin
            - ThickEagerZero
          type: string
        transportMode:
          default: Auto
          description: Choose transport mode based on environment. Values are case sensitive
          enum:
            - Auto
            - SAN
            - Hot_Add
            - NAS
            - NBD_SSL
            - NBD
          type: string
        unconditionalOverwrite:
          default: false
          description: Replace an existing virtual machine with the same name in the target location
          type: boolean
        validateDestinationVM:
          default: true
          description: Validates that the destination VM is bootable by powering it on and then powering off
          type: boolean
      title: ReplicationGroupAdvOptionsVMware
      type: object
    ReplicationGroupAdvOptionsVMWareCreate:
      description: Advanced options for VMWare replication group
      properties:
        SnapshotsToRetain:
          default: 0
          description: Number of snapshots to retain on destination VM. This is only applicable if snap engine is provided
          format: int32
          type: integer
        diskProvisioning:
          default: ORIGINAL
          description: The disk provisioning type for the destination VM.
          enum:
            - ORIGINAL
            - THICK LAZY ZERO
            - THIN
            - THICK EAGER ZERO
          type: string
        transportMode:
          default: AUTO
          description: The transport mode based on environment.
          enum:
            - AUTO
            - SAN
            - HOT_ADD
            - NAS
            - NBD_SSL
            - NBD
          type: string
        unconditionalOverwrite:
          default: false
          description: This will replace the instance at the destination if the instance with the same name already exists.
          type: boolean
        validateDestinationVM:
          default: true
          description: Validates that the destination VM is bootable by powering it on and then powering off
          type: boolean
      title: ReplicationGroupAdvOptionsVMwareCreate
      type: object
    ReplicationGroupAdvancedOptions:
      description: The advanced option for replication group
      properties:
        continueOnFailure:
          default: false
          description: Set to true to continue to the next priority machines on failure.
          type: boolean
        delayBetweenPriorityMachines:
          default: 2
          description: The delay between machines in different priorities. Mention in minutes
          format: int32
          minimum: 0
          type: integer
        script:
          $ref: '#/components/schemas/ReplicationGroupScript'
      type: object
    ReplicationGroupList:
      description: List of replication groups. Source contains the replication source details. Destination contains the target of the replication
      properties:
        destination:
          $ref: '#/components/schemas/IdName'
        id:
          description: id of the replication group. Either taskId or id is available in the list
          format: int32
          type: integer
        name:
          description: Replication group name
          type: string
        replicationGroupType:
          description: Replication group type
          enum:
            - PERIODIC
            - CONTINOUS
            - LIVE_SYNC
            - LIVE_SYNC_DIRECT
            - LIVE_SYNC_IO
            - NOT_APPLICABLE
          type: string
        source:
          $ref: '#/components/schemas/IdName'
        state:
          description: State of replication group
          enum:
            - ENABLED
            - DISABLED
            - NOT_APPLICABLE
          type: string
        taskId:
          description: taskid of the replication group. Either taskId or id is available in the list
          format: int32
          type: integer
        type:
          description: The application type of replication group
          enum:
            - VIRTUAL_MACHINE
            - VM_HOT_SITE
            - VM_WARM_SITE
            - ORACLE
            - FILE_SYSTEM
            - BIG_DATA
            - SQL_SERVER
            - OBJECT_STORAGE
            - SAP_HANA
            - NOT_APPLICABLE
          type: string
      title: ReplicationGroupList
      type: object
    ReplicationGroupListResp:
      description: Used to get list of existing replication groups
      properties:
        replicationGroups:
          description: List of all replication groups
          items:
            $ref: '#/components/schemas/ReplicationGroupList'
          type: array
      title: ReplicationGroupListResp
      type: object
    ReplicationGroupScript:
      description: All the scripts of replication group
      properties:
        postFailback:
          $ref: '#/components/schemas/DROperationScript'
        postFailover:
          $ref: '#/components/schemas/DROperationScript'
        preFailback:
          $ref: '#/components/schemas/DROperationScript'
        preFailover:
          $ref: '#/components/schemas/DROperationScript'
      type: object
    ReplicationGroupStorageList:
      description: List of storage configured for a replication group
      properties:
        copies:
          description: List of all storages which are configured for that replication group
          items:
            $ref: '#/components/schemas/StorageCopy'
          type: array
        copyForReplication:
          description: Main storage which is used for replication
          type: string
      title: ReplicationGroupStorageList
      type: object
    ReplicationGroupSummary:
      description: Summary of replication group
      properties:
        destinationVendor:
          $ref: '#/components/schemas/DestinationVendor'
        recoveryTarget:
          description: Can be used to identify destination for full VM restore
          type: string
        replicationType:
          $ref: '#/components/schemas/ReplicationType'
        source:
          description: Source hypervisor
          type: string
        state:
          description: State of replication group. Values are case sensitive
          enum:
            - Enabled
            - Disabled
            - N/A
          type: string
      title: ReplicationGroupSummary
      type: object
    ReplicationMonitorDetail:
      description: Details of continuous replication group
      properties:
        recoveryOptions:
          $ref: '#/components/schemas/ReplicationMonitorDetailRecoveryOptions'
        replicationCopyDetails:
          description: Gives copy details information for replication group
          items:
            $ref: '#/components/schemas/ReplicationMonitorDetailReplicationCopyDetails'
          type: array
        statistics:
          description: Gives statistics information for Replication performance and Journal retention
          items:
            $ref: '#/components/schemas/ReplicationMonitorDetailStats'
          type: array
        summary:
          $ref: '#/components/schemas/ReplicationMonitorDetailSummary'
      title: ReplicationMonitorDetail
      type: object
    ReplicationMonitorDetailRecoveryOptions:
      description: Gives information about the recovery options for replication group
      properties:
        ACRPInterval:
          description: Gives information about application consistent recovery point interval in seconds
          format: int32
          type: integer
        CCRPInterval:
          description: Time interval between crash consistent recovery points in seconds
          format: int32
          type: integer
        RPIntervalAfterRetention:
          description: Recovery point interval at the end of retention time in seconds
          format: int32
          type: integer
        mergeRecoveryPointsOlderThan:
          description: Time which should be satisfied to merge recovery points in seconds
          format: int32
          type: integer
        pruneAndMergeOffPeakOnly:
          description: Boolean which determines Prune and Merge Recovery Points during off peak time only.
          type: boolean
        recoverypointStore:
          $ref: '#/components/schemas/IdName'
        retainRecoveryPointsFor:
          description: Recovery points retention time in seconds
          format: int32
          type: integer
        switchToLatestIfStoreOfflineFor:
          description: Gives information about switching to  latest recovery point store to latest if it is offline for time  in seconds
          format: int32
          type: integer
      title: ReplicationMonitorDetailRecoveryOptions
      type: object
    ReplicationMonitorDetailReplicationCopyDetails:
      description: Gives copy details information for replication group
      properties:
        UUID:
          description: UUID of replication copy
          type: string
        creationTime:
          description: Creation time (Unix Time)
          format: int32
          type: integer
        expirationTime:
          description: Expiration time
          format: int32
          type: integer
        name:
          description: Name of replication copy
          type: string
        status:
          description: Status of replication copy
          enum:
            - IN_PROGRESS
            - SUCCESS
            - FAILED
            - ABOUT_TO_EXPIRE
            - EXPIRED
            - USER_DELETED
            - DELETE_FAILED
            - PARTIAL_SUCCESS
          type: string
        statusDescription:
          description: Status description
          type: string
        type:
          description: Type of replication copy
          enum:
            - TESTBOOT
            - PERMANENT
          type: string
      title: ReplicationMonitorDetailReplicationCopyDetails
      type: object
    ReplicationMonitorDetailStats:
      description: Gives statistics information for Replication performance and Journal retention
      properties:
        IODelta:
          format: int32
          type: integer
        IOPSDelta:
          format: int32
          type: integer
        id:
          format: int32
          type: integer
        repDataDeltaActual:
          format: int32
          type: integer
        repDataDeltaComp:
          format: int32
          type: integer
        repSetSize:
          format: int32
          type: integer
        retention:
          format: int32
          type: integer
        sizeInRpStore:
          format: int32
          type: integer
        timeStamp:
          format: int32
          type: integer
      title: ReplicationMonitorDetailStats
      type: object
    ReplicationMonitorDetailSummary:
      description: Gives summary of replication group.
      properties:
        destination:
          $ref: '#/components/schemas/IdName'
        eventMessage:
          description: additional description of current pair status
          type: string
        id:
          description: Id of replication pair
          format: int32
          type: integer
        recoveryType:
          description: Gives information about the recovery type of replication group
          enum:
            - LIVE
            - SNAPSHOT
            - GRANULAR
            - GRANULARV2
          type: string
        replicationLag:
          description: Lag time in seconds
          format: int32
          type: integer
        source:
          $ref: '#/components/schemas/IdName'
        synchronizationStatus:
          description: Gives information about the synchronization status
          enum:
            - BLR_BACKUP
            - BLR_RESTORE
            - BLR_RESYNC
            - BLR_RUNNING
            - BLR_PAUSED
            - BLR_STOPPED
            - BLR_VERIFYING
            - BLR_TROUBLE
            - BLR_FAILED
            - BLR_STARTING
            - BLR_STOPPING
            - BLR_SUSPENDING
            - BLR_RESUMING
            - BLR_FAILING_OVER
            - BLR_FAILOVER_FAILED
            - BLR_FAILOVER_DONE
            - BLR_FAILING_BACK
            - BLR_FAILBACK_FAILED
            - BLR_SWITCHING_ROLES
            - BLR_SWITCH_ROLE_FAILED
          type: string
      title: ReplicationMonitorDetailSummary
      type: object
    ReplicationStatus:
      enum:
        - VSAREP_NONE = 0
        - VSAREP_COMPLETE = 1
        - VSAREP_PENDING = 2
        - VSAREP_RUNNING = 3
        - VSAREP_PAUSED = 4
        - VSAREP_FAILED = 5
        - VSAREP_DISABLED = 6
        - VSAREP_ENABLED= 7
        - VSAREP_VALIDATION_FAILED = 8
        - VSAREP_JOB_QUEUED = 9
        - VSAREP_REVERT_FAILED = 10
        - VSAREP_STARTING = 11
      title: ReplicationStatus
      type: string
    ReplicationType:
      default: Periodic
      description: The field specifies the type of replication that is to be performed
      enum:
        - Periodic
        - Continuous
      type: string
    ResourcePoolInfo:
      properties:
        appType:
          $ref: '#/components/schemas/SolutionTypes'
        resourcePool:
          $ref: '#/components/schemas/IdName'
      type: object
    ResourcePoolInventoryResponse:
      description: Inventory response of hypervisor for ResourcePool entity
      properties:
        dataCenterName:
          description: dataCenter Name of the ResourcePool.
          type: string
        dnsHostName:
          description: dns Hostname  of the ResourcePool.
          type: string
        esxServerName:
          description: esx server name  of the ResourcePool.
          type: string
        resources:
          items:
            $ref: '#/components/schemas/resourcepoolentityResponse'
          type: array
      type: object
    ResourcePoolInventoryResponseList:
      description: To display the list of Inventory response of Resource Pool
      properties:
        hostInfo:
          items:
            $ref: '#/components/schemas/ResourcePoolInventoryResponse'
          type: array
      title: ResourcePoolInventoryResponseList
      type: object
    ResourcePoolListResponse:
      description: 'A resource pool is a logical entity that combines infrastructure settings such as storage, access nodes, and index servers.'
      properties:
        resourcePools:
          description: Resource Pool Summary.
          items:
            $ref: '#/components/schemas/ResourcePoolSummary'
          type: array
      type: object
    ResourcePoolSummary:
      description: 'solutionType is the solution used to create resource pool. It cannot be changed once the resource pool has been created. indexServer is a server that stores, amalgamates, and processes indexes that contain metadata corresponding to the data protection jobs. The list of index servers is populated with clients that are installed with the index store package. storage refers to the Storage Pool to associate to resource pool. accessNodes is the list of access nodes associated to the resource pool.'
      properties:
        accessNodes:
          description: List of access nodes associated to the resource pool
          items:
            $ref: '#/components/schemas/AccessNodes'
          type: array
        associatedPlans:
          description: Refers to the number of plans associated to the resource pool.
          format: int32
          type: integer
        id:
          description: Resource Pool id
          format: int32
          type: integer
        indexServer:
          $ref: '#/components/schemas/IdName'
        isIndexingEnabledOnAnyPlan:
          description: Denotes if the resource pool is associated to any plan with indexing enabled
          type: boolean
        name:
          description: Resource Pool name.
          type: string
        solutionType:
          $ref: '#/components/schemas/SolutionTypes'
        storage:
          $ref: '#/components/schemas/IdName'
      type: object
    RestrictConsoleTypes:
      properties:
        consoleType:
          items:
            $ref: '#/components/schemas/ConsoleTypes'
          type: array
      type: object
    RestrictedConsoleTypes:
      description: 'This property is listing restricted consoles. If the restricted console is inherited from parent, parent name and id will be listed along with restricted console.'
      properties:
        consoleType:
          description: This is console type
          enum:
            - COMMANDCENTER
            - WEBCONSOLE
            - COMMCELLCONSOLE
            - API
            - MOBILE
          type: string
        parent:
          $ref: '#/components/schemas/IdNameType'
          x-terraform-include: false
      title: RestrictedConsoleTypes
      type: object
    RetentionRuleTypes:
      description: Which type of retention rule should be used for the given backup destination
      enum:
        - RETENTION_PERIOD
        - SNAP_RECOVERY_POINTS
      title: RententionRuleTypes
      type: string
    RetireClientPhase:
      enum:
        - UNKNOWN
        - RETIRE_IN_PROGRESS
        - DECONFIGURED
      title: RetireClientPhase
      type: string
    RetireClientRequest:
      properties:
        packages:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        retireClient:
          type: boolean
      title: RetireClientRequest
      type: object
    RetireClientResponse:
      properties:
        error:
          $ref: '#/components/schemas/GenericResp'
        jobId:
          format: int32
          type: integer
      title: RetireClientResponse
      type: object
    Role:
      description: Used to return role details
      properties:
        id:
          description: id of the role.
          format: int32
          type: integer
        name:
          description: name of the role.
          type: string
        permissions:
          description: List of permissions associated with the role.
          items:
            $ref: '#/components/schemas/Permissions'
          type: array
        security:
          description: Used to return the security association for the role
          items:
            $ref: '#/components/schemas/SecurityAssoc'
          type: array
        status:
          $ref: '#/components/schemas/RoleStatus'
        visibleToAll:
          description: Returns if the role is visible to all.
          type: boolean
      title: ''
      type: object
    RoleListResponse:
      description: List of roles
      properties:
        roles:
          description: List of all the existing roles
          items:
            $ref: '#/components/schemas/RoleSummary'
          type: array
      type: object
    RoleStatus:
      description: Specifies whether the role has been enabled or disabled.
      enum:
        - ENABLED
        - DISABLED
      type: string
    RoleSummary:
      description: Returns information on the roles.
      properties:
        commcell:
          $ref: '#/components/schemas/CommcellInfo'
        company:
          $ref: '#/components/schemas/IdName'
        id:
          description: id of the role.
          format: int32
          type: integer
        name:
          description: name of the role.
          type: string
        status:
          $ref: '#/components/schemas/RoleStatus'
      type: object
    Rpo:
      description: Frequency of replication
      properties:
        replicationFrequency:
          default: 240
          description: Max amount of time for which data can be lost during a service disruption. Determines frequency of backup jobs in minutes
          format: int32
          type: integer
      title: Rpo
      type: object
    RuleContent:
      properties:
        GUID:
          description: GUID of the entity to be added as content
          type: string
        condition:
          $ref: '#/components/schemas/RuleOperationType'
        displayName:
          description: The display name of the entity to be added
          type: string
        name:
          description: name of the VM to be added as content
          type: string
        type:
          $ref: '#/components/schemas/VMContentType'
        value:
          description: value for the few type of VM Content like powerstate
          type: string
      title: RuleContent
      type: object
    RuleGroupContent:
      properties:
        matchRule:
          $ref: '#/components/schemas/MatchRuleContent'
        rules:
          items:
            $ref: '#/components/schemas/RuleContent'
          type: array
      title: RuleContent
      type: object
    RuleOperationType:
      description: Operation type for VM rules/filters
      enum:
        - CONTAINS
        - DOES_NOT_CONTAIN
        - DOES_NOT_EQUAL
        - ENDS_WITH
        - EQUALS
        - STARTS_WITH
      title: RuleOperationType
      type: string
    S3Compatible:
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - S3 Compatible Storage
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
          type: object
        - $ref: '#/components/schemas/DedupeStorageList'
      description: ''
      title: S3 Compatible Storage
    S3CompatibleBucket:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - S3 Compatible Storage
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
      description: ''
      title: S3 Compatible Storage
    S3CompatibleBucketContent:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - S3 Compatible Storage
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
      description: ''
      title: S3 Compatible Storage
    SAML:
      description: Get SAML response
      properties:
        appKey:
          description: Unique key for the SAML app
          type: string
        associations:
          $ref: '#/components/schemas/SAMLAssociations'
        attributeMappings:
          description: attribute mapping details
          items:
            $ref: '#/components/schemas/SAMLAttributes'
          type: array
        autoCreateUser:
          description: This auto-creates non-existing user if the user detail match with the identity rule.
          type: boolean
        createdForCompany:
          $ref: '#/components/schemas/IdName'
        description:
          description: SAML description
          type: string
        enabled:
          description: Boolean to indicate whether SAML is enabled.
          type: boolean
        identityProviderMetaData:
          $ref: '#/components/schemas/SAMLIDPMetaDataResp'
        name:
          description: SAML name.
          type: string
        nameIDAttribute:
          description: nameID in SAML assertion subject is used to perform login.
          type: string
        serviceProviderMetaData:
          $ref: '#/components/schemas/SAMLSPMetaDataResp'
        userGroup:
          $ref: '#/components/schemas/IdName'
        userGroups:
          description: 'By default, auto-created users will be associated to the Tenant Users group of the company. Add mapping to override this behaviour for a company.'
          items:
            $ref: '#/components/schemas/CompanyWithUserGroupAssocDetails'
          type: array
      title: SAML
      type: object
    SAMLAssociations:
      properties:
        companies:
          description: Companies associated with SAML
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        domains:
          description: Domains associated with SAML
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        emailSuffixes:
          description: Email suffixes associated with SAML
          items:
            type: string
          type: array
        userGroups:
          description: user groups associated with SAML
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      title: SAMLAssociations
      type: object
    SAMLAttributes:
      properties:
        SAMLAttribute:
          description: SAML attribute
          type: string
        customAttribute:
          $ref: '#/components/schemas/SAMLCustomAttributes'
      title: SAMLAttributes
      type: object
    SAMLCustomAttributes:
      description: SAML custom attribute types
      enum:
        - COMPANY_NAME
        - EMAIL
        - SID
        - USER_GROUPS
        - USER_GUID
        - USER_NAME
      title: SAMLCustomAttributes
      type: string
    SAMLIDPMetaDataReq:
      description: SAML IDP meta data request
      properties:
        SAMLProtocolVersion:
          description: 'SAML Protocol version '
          type: string
        certificateData:
          description: IDP certificate public key
          type: string
        entityId:
          description: Identity provider entity
          type: string
        logoutUrl:
          description: Identity Provider log-out URL
          type: string
        redirectUrl:
          description: Identity provider redirect URL
          type: string
      required:
        - entityId
        - redirectUrl
        - logoutUrl
        - certificateData
        - SAMLProtocolVersion
      title: SAMLIDPMetaDataReq
      type: object
      x-examples:
        example-1:
          IDPCertificateData: MIIC4jCCAcqgA1hcmlvLm1hcSCdgTTDPDgDrTpcjdmOIWuDpiW6anBaH0jlCRi4IVuBkKJ1lYdh1mG96gfdh8oA103RvtxMWo3qq9muMDmxyRFgGFOuFod60In8QY9kNcsu+ujOWIFaKMI3iDBg2+esbI8S/rov1+0HRKqnP4BARdtK70JhOTikNwQsxINNZD2C79gQKrXItJtbmrPNLIF8Pf4UYrgFPA8RB+jQ3yJiVS67oQswX9UmeLjepVcCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAWOLOPLQxUfbbG9goGKHqXlaAxRrrb/+K2KpWke5NmpjQl+RRkaFkJCS/vQM14XMep+e/xajtc1Nxrwjjb699muGr0llC8UI5erDmwvlJ2RWNd8j4SBvWVFaarMdwlhd7Istj0ZB5aZr5ZN+scW7Irt7d0Vr1PODhybEwwlcDU5HnGzWacMttErBsCYSH90wO2mp6CFFQf9Ygn9jX4kbaSMiFO8IHG86vLT8TxYSP4GtbT5diICOVhO6ShkBtrfkTSytekwx8vFPKKCi5ml9pYa6CqKNl93QiLglPY9yJDJTP4v1TXv+M7ti+I39apDhXzD0ueB4m9iPcijn/FLyWdw==
          SAMLProtocolVersion: 'urn:oasis:names:tc:SAML:2.0:protocol'
          entityId: 'http://servername/adfs/services/trust'
          logoutUrl: 'https://servername/adfs/ls/'
          redirectUrl: 'https://servername/adfs/ls/'
    SAMLIDPMetaDataResp:
      description: SAML Identity provider meta data response
      properties:
        entityId:
          description: Identity provider entity
          type: string
        logoutUrl:
          description: Identity Provider log-out URL
          type: string
        redirectUrl:
          description: Identity provider redirect URL
          type: string
      title: SAMLIDPMetaDataResp
      type: object
    SAMLReq:
      description: Create SAML request
      properties:
        associations:
          $ref: '#/components/schemas/SAMLAssociations'
        description:
          description: SAML description
          type: string
        identityProviderMetaData:
          $ref: '#/components/schemas/SAMLIDPMetaDataReq'
        name:
          description: SAML name.
          type: string
        serviceProviderMetaData:
          $ref: '#/components/schemas/SAMLSPMetaData'
      required:
        - name
        - description
        - identityProviderMetaData
      title: SAMLReq
      type: object
    SAMLSPMetaData:
      description: SAML service provider meta data
      properties:
        JKSPrivateKey:
          description: key store password.
          type: string
        aliasName:
          description: certificate alias name
          type: string
        autoGenerateSPMetaData:
          type: boolean
        certificateData:
          description: certificate alias name.
          type: string
        jksFileContents:
          description: jks file contents as byte array
          items:
            type: string
          type: array
        keyStorePassword:
          description: jks contents key store password.
          type: string
        privateKeyPassword:
          description: certificate private key password
          type: string
        serviceProviderEndpoint:
          description: web console URL.
          type: string
        spAliases:
          description: web console URL list.
          items:
            type: string
          type: array
      required:
        - serviceProviderEndpoint
        - autoGenerateSPMetaData
      title: SAMLSPMetaData
      type: object
      x-examples:
        example-1:
          JKSPrivateKey: string
          autoGenerateSPMetaData: true
          certificateData: string
          serviceProviderEndpoint: string
    SAMLSPMetaDataResp:
      properties:
        entityId:
          description: Service provider entity
          type: string
        singleLogoutUrl:
          description: single log out url
          type: string
        singleSignOnUrl:
          description: single sign on URL
          type: string
      title: SAMLSPMetaDataResp
      type: object
    SAMLUpdate:
      description: Updates SAML details
      properties:
        associations:
          $ref: '#/components/schemas/SAMLAssociations'
        attributeMappings:
          description: attribute mapping details
          items:
            $ref: '#/components/schemas/SAMLAttributes'
          type: array
        autoCreateUser:
          description: This auto-creates non-existing user if the user detail match with the identity rule.
          type: boolean
        description:
          description: SAML description
          type: string
        enabled:
          description: Boolean to indicate whether SAML is enabled.
          type: boolean
        identityProviderMetaData:
          $ref: '#/components/schemas/SAMLIDPMetaDataReq'
        nameIDAttribute:
          description: nameID in SAML assertion subject is used to perform login.
          type: string
        serviceProviderMetaData:
          $ref: '#/components/schemas/SAMLSPMetaData'
        userGroups:
          description: 'By default, auto-created users will be associated to the Tenant Users group of the company. Add mapping to override this behaviour for a company.'
          items:
            $ref: '#/components/schemas/CompanyWithUserGroupAssocDetails'
          type: array
      title: SAMLUpdate
      type: object
    SLADetails:
      properties:
        reasonList:
          description: Provides a reason on why the SLA might not be met.
          items:
            $ref: '#/components/schemas/ReasonDetails'
          type: array
        status:
          $ref: '#/components/schemas/SLAStatus'
      title: ''
      type: object
    SLAOptions:
      description: 'A server meets SLA (Service Level Agreement) when all of its subclients have at least one successful backup during the number of days specified at the CommCell, Server Group or plan level.'
      properties:
        SLAPeriod:
          description: SLA Period in Days
          format: int32
          nullable: true
          type: integer
        enableAfterDelay:
          description: Time provided in Unix format. Give 0 to reset any existing delay.
          format: int32
          nullable: true
          type: integer
        excludeFromSLA:
          description: Flag to set to exclude plan from SLA
          nullable: true
          type: boolean
        exclusionReason:
          description: Reason for exclusion from SLA
          nullable: true
          type: string
        inheritedFrom:
          description: Tells us from where SLA Period was inherited
          enum:
            - COMMCELL
          nullable: true
          type: string
        inheritedSLAPeriod:
          description: Inherited SLA Period in Days
          format: int32
          nullable: true
          type: integer
        useSystemDefaultSLA:
          description: Flag to set to use System Default Service Level Agreement
          nullable: true
          type: boolean
      title: ''
      type: object
    SLAStatus:
      description: Provides the SLA status.
      enum:
        - MET_SLA
        - MISSED_SLA
        - EXCLUDED_SLA
        - YET_TO_BE_PROTECTED
        - MIGHT_MISS_SLA
        - UNKNOWN
      type: string
    SLAUpdateOptions:
      description: 'A server meets SLA (Service Level Agreement) when all of its subclients have at least one successful backup during the number of days specified at the CommCell, Server Group or plan level.'
      properties:
        SLAPeriod:
          description: SLA Period in Days
          format: int32
          nullable: true
          type: integer
        enableAfterDelay:
          description: Time provided in Unix format. Give 0 to reset any existing delay.
          format: int32
          nullable: true
          type: integer
        excludeFromSLA:
          description: Flag to set to exclude plan from SLA
          nullable: true
          type: boolean
        exclusionReason:
          description: Reason for exclusion from SLA
          nullable: true
          type: string
        useSystemDefaultSLA:
          description: Flag to set to use System Default Service Level Agreement
          nullable: true
          type: boolean
      title: ''
      type: object
    SMTPServerEncryptionAlgorithm:
      default: NONE
      enum:
        - NONE
        - TLS
        - SSL
      type: string
    SNMPConfigurationSummary:
      description: SNMP host configuration
      properties:
        authenticationAlgorithm:
          description: Authentication algorithm of SNMP host
          enum:
            - HMAC_MD5
            - HMAC_SHA
            - HMAC128_SHA224
            - HMAC192_SHA256
            - HMAC256_SHA384
            - HMAC384_SHA512
          type: string
        id:
          description: Id of SNMP host
          format: int32
          type: integer
        name:
          description: Name of SNMP host
          type: string
        privacyAlgorithm:
          description: Privacy algorithm of SNMP host
          enum:
            - None
            - CBC_DES
            - CFB128_AES128
            - CFB128_AES192
            - CFB128_AES256
            - CBC_AES128
            - CBC_AES192
            - CBC_AES256
          type: string
        userName:
          description: Username used to access SNMP host
          type: string
      title: SNMPConfigurationSummary
      type: object
    SalesforceCredentialContent:
      description: Applicable only for credentials with Cloud Account and Vendor Type as Salesforce Connected App
      properties:
        consumerKey:
          description: Consumer key of Credential
          type: string
        description:
          description: Updated description of Credential
          type: string
        newConsumerSecret:
          description: Consumer secret of Credential
          type: string
        newName:
          description: Updated name of credential
          type: string
        security:
          $ref: '#/components/schemas/UpdateCredentialSecurity'
      title: SalesforceCredentialContent
      type: object
    SalesforceCredentialInfo:
      allOf:
        - $ref: '#/components/schemas/CreateCredential'
        - properties:
            consumerKey:
              description: Consumer key of Credential
              type: string
            consumerSecret:
              description: Consumer secret of Credential
              type: string
          required:
            - consumerKey
            - consumerSecret
          type: object
        - $ref: '#/components/schemas/CommonCredentialInfo'
      description: Applicable only for credentials with Cloud Account and Vendor Type as Salesforce Connected App
      title: SalesforceCredentialInfo
    ScalityRing:
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Scality RING
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
          type: object
        - $ref: '#/components/schemas/DedupeStorageList'
      description: ''
      title: Scality RING
    ScalityRingBucket:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Scality RING
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
      description: ''
      title: Scality RING
    ScalityRingBucketContent:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Scality RING
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
      description: ''
      title: Scality RING
    ScheduleOption:
      description: Specific options to be set on schedules
      properties:
        commitFrequencyInHours:
          description: Commit frequency in hours for disk cache backups from automatic schedules
          format: int32
          type: integer
        daysBetweenAutoConvert:
          description: Number of days between auto conversion of backup level applicable for databases on incremental and differential schedules of server plan
          format: int32
          type: integer
        jobRunningTimeInMins:
          description: total job running time in minutes
          format: int32
          type: integer
        o365ItemSelectionOption:
          description: item backup option for O365 V2 backup jobs
          enum:
            - SELECT_ALL
            - SELECT_NEVER_PROCESSED
            - SELECT_MEETING_SLA
            - SELECT_NOT_MEETING_SLA_PROCESSED_ATLEAST_ONCE
            - SELECT_FAILED_LAST_ATTEMPT
            - SELECT_PROCESSED_ATLEAST_ONCE
            - SELECT_NOT_MEETING_SLA
            - SELECT_MEETING_SLA_NOT_RECENTLY_BACKED_UP
          type: string
        useDiskCacheForLogBackups:
          description: Used to enable disk caching feature on databases for automatic schedules on server plan
          type: boolean
      title: ScheduleOption
      type: object
    SchedulePattern:
      description: Used to describe when the schedule runs
      properties:
        dayOfMonth:
          description: 'Day on which to run the schedule, applicable for monthly, yearly'
          format: int32
          maximum: 31
          minimum: 1
          type: integer
        dayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
        daysBetweenSyntheticFulls:
          description: No of days between two synthetic full jobs
          format: int32
          minimum: 6
          type: integer
        endDate:
          default: 0
          description: Schedule end date in epoch format
          format: int32
          type: integer
        exceptions:
          description: 'Exceptions to when a schedule should not run, either in dates or week of month and days'
          items:
            $ref: '#/components/schemas/ScheduleRunException'
          type: array
        frequency:
          description: 'Frequency of the schedule based on schedule frequency type eg. for Hours, value 2 is 2 hours, for Minutes, 30 is 30 minutes, for Daily, 2 is 2 days. for Monthly 2 is it repeats every 2 months'
          format: int32
          minimum: 1
          type: integer
        maxBackupIntervalInMins:
          default: 240
          description: The number of mins to force a backup on automatic schedule.
          format: int32
          type: integer
        monthOfYear:
          $ref: '#/components/schemas/MonthOfYear'
        noOfTimes:
          default: 0
          description: The number of times you want the schedule to run.
          format: int32
          type: integer
        repeatIntervalInMinutes:
          description: 'How often in minutes in a day the schedule runs, applicable for daily, weekly, monthly and yearly frequency types.'
          format: int32
          minimum: 1
          type: integer
        repeatUntilTime:
          description: 'Until what time to repeat the schedule in a day, requires repeatIntervalInMinutes'
          format: int32
          minimum: 0
          type: integer
        scheduleFrequencyType:
          description: schedule frequency type
          enum:
            - MINUTES
            - DAILY
            - WEEKLY
            - MONTHLY
            - YEARLY
            - AUTOMATIC
          type: string
        startDate:
          description: start date of schedule in epoch format
          format: int32
          type: integer
        startTime:
          default: 75600
          description: start time of schedule in seconds
          format: int32
          type: integer
        timezone:
          $ref: '#/components/schemas/IdName'
        weekOfMonth:
          $ref: '#/components/schemas/WeekOfTheMonth'
        weeklyDays:
          description: Days of the week for weekly frequency
          items:
            $ref: '#/components/schemas/DayOfTheWeek'
          nullable: true
          type: array
      required:
        - scheduleFrequencyType
      title: SchedulePattern
      type: object
    ScheduleRunException:
      description: 'Exception to when a schedule should not run, applicable for Daily weekly and monthly schedules'
      properties:
        onDates:
          description: 'list of dates in a month. For ex: 1, 20'
          items:
            format: int32
            maximum: 31
            minimum: 1
            type: integer
          type: array
        onDayOfTheWeek:
          description: 'On which days, for ex: MONDAY, FRIDAY'
          items:
            $ref: '#/components/schemas/DayOfWeek'
          type: array
        onWeekOfTheMonth:
          description: 'On which week of month, for ex: FIRST, LAST'
          items:
            $ref: '#/components/schemas/WeekOfTheMonth'
          type: array
          uniqueItems: true
      title: ScheduleRunException
      type: object
    SecurityAssoc:
      description: A list of users or user groups each having a specific set of roles that determine the kind of operations they can perform on the entity.
      properties:
        externalUserGroup:
          $ref: '#/components/schemas/externalUserGroup'
        isCreatorAssociation:
          type: boolean
        permissionList:
          items:
            $ref: '#/components/schemas/PermissionResp'
          type: array
        role:
          $ref: '#/components/schemas/IdName'
        user:
          $ref: '#/components/schemas/IdName'
        userGroup:
          $ref: '#/components/schemas/IdName'
      type: object
    SecurityGroup:
      description: The id and the name of the security group
      properties:
        id:
          description: Security group id
          type: string
        name:
          description: security group name
          type: string
      title: SecurityGroup
      type: object
    SecurityOptions:
      properties:
        securityGroup:
          description: Name of security group that provides controlled access of the VM in cloud
          type: string
        testSecurityGroups:
          description: Name of security groups that provide controlled access of the VM in cloud for test failover
          items:
            type: string
          type: array
        userGroups:
          description: User groups that have access to the recovery target
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        users:
          description: Users that have access to the recovery target
          items:
            $ref: '#/components/schemas/IdNameFullName'
          type: array
      title: SecurityOptions
      type: object
    SecurityOwnersAssoc:
      description: A list of users or user groups which have permissions on the entity
      properties:
        userGroupId:
          format: int32
          type: integer
        userGroupName:
          type: string
        userId:
          format: int32
          type: integer
        userName:
          type: string
      title: ''
      type: object
    SendTestMailReq:
      description: ''
      properties:
        SMTPPort:
          description: The port number that connects to the mail server.
          format: int32
          type: integer
        SMTPServerName:
          description: 'The name of the mail server that sends alerts, scheduled reports, log files, and additional information.'
          minLength: 1
          type: string
        encryptionAlgorithm:
          $ref: '#/components/schemas/SMTPServerEncryptionAlgorithm'
        password:
          description: 'If password is specified, username must also be specified. password should be a base 64 encoded string. To use previoulsy saved username and password, leave out username and password in payload.'
          type: string
        senderEmail:
          description: The sender email address used for emails sent from the software.
          minLength: 1
          type: string
        senderName:
          description: The sender name used for emails sent from the software.
          minLength: 1
          type: string
        useAuthentication:
          description: The option to use authentication on the mail server. This is typically used in external or internet mail server configurations.
          type: boolean
        username:
          description: 'If username is specified, password field must also be specified. To use previously saved username and password, leave out username and password in payload.'
          type: string
      required:
        - SMTPServerName
        - SMTPPort
        - senderEmail
        - senderName
      title: ''
      type: object
    ServerBackupPlanRPO:
      description: Recovery Point Objective (RPO) is the maximum amount of time that data can be lost during a service disruption. Your RPO determines the frequency of your backup jobs.
      properties:
        backupFrequency:
          $ref: '#/components/schemas/PlanSchedules'
        backupWindow:
          description: Backup window for incremental backup
          items:
            $ref: '#/components/schemas/DayAndTime'
          nullable: true
          type: array
        fullBackupWindow:
          description: Backup window for full backup
          items:
            $ref: '#/components/schemas/DayAndTime'
          nullable: true
          type: array
      type: object
    ServerGroup:
      properties:
        activityControl:
          $ref: '#/components/schemas/activityControl'
        associatedServers:
          items:
            $ref: '#/components/schemas/serverDetails'
          type: array
        blackoutWindow:
          items:
            $ref: '#/components/schemas/blackoutWindowDetails'
          type: array
        description:
          type: string
        fileExceptions:
          $ref: '#/components/schemas/fileExceptionsDetail'
        general:
          $ref: '#/components/schemas/generalInfoServerGroup'
        powerManagement:
          $ref: '#/components/schemas/IdName'
        security:
          items:
            $ref: '#/components/schemas/SecurityAssoc'
          type: array
        serverGroup:
          $ref: '#/components/schemas/IdName'
      type: object
    ServerGroupAssociation:
      description: Type of server group association.
      enum:
        - AUTOMATIC
        - VM
        - MANUAL
      type: string
    ServerGroupType:
      enum:
        - MANUAL
        - AUTOMATIC
        - VIRTUAL_MACHINE
      format: ''
      type: string
    ServerPlan:
      properties:
        additionalProperties:
          $ref: '#/components/schemas/PlanAdditionalProperties'
        allowPlanOverride:
          description: Is deriving and overriding the plan allowed
          type: boolean
        associatedEntities:
          items:
            $ref: '#/components/schemas/IdNameCount'
          type: array
        backupContent:
          $ref: '#/components/schemas/PlanContent'
        backupDestinations:
          description: Backup destinations for the plan
          items:
            $ref: '#/components/schemas/PlanBackupDestination'
          nullable: true
          type: array
        databaseOptions:
          $ref: '#/components/schemas/ServerPlanDatabaseOptionsInfo'
        inheritSettings:
          $ref: '#/components/schemas/ServerPlanInheritSettings'
        overrideRestrictions:
          $ref: '#/components/schemas/PlanOverrideSettings'
        parentInheritSettings:
          $ref: '#/components/schemas/ServerPlanInheritSettings'
        permissions:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        plan:
          $ref: '#/components/schemas/IdName'
          x-terraform-include: false
        regionsConfigured:
          description: Specifies if the destinations are associated to regions
          type: boolean
        rpo:
          $ref: '#/components/schemas/ServerPlanRPO'
        settings:
          $ref: '#/components/schemas/ServerPlanSettings'
        snapshotOptions:
          $ref: '#/components/schemas/PlanSnapshotOptions'
        workload:
          $ref: '#/components/schemas/PlanWorkloads'
      type: object
    ServerPlanDatabaseOptions:
      description: This feature applies only to database agents
      properties:
        commitFrequencyInHours:
          description: Commit frequency in hours
          format: int32
          type: integer
        logBackupRPOMins:
          description: Log backup RPO in minutes
          format: int32
          type: integer
        useDiskCacheForLogBackups:
          description: Use disk cache for log backups
          type: boolean
      type: object
    ServerPlanDatabaseOptionsInfo:
      description: This feature applies only to database agents
      properties:
        commitFrequencyInHours:
          description: Commit frequency in hours
          format: int32
          type: integer
        logBackupRPOMins:
          description: Log backup RPO in minutes
          format: int32
          type: integer
        runFullBackupEvery:
          description: Full backup frequency in days
          format: int32
          type: integer
        useDiskCacheForLogBackups:
          description: Use disk cache for log backups
          type: boolean
      type: object
    ServerPlanInheritSettings:
      properties:
        RPO:
          $ref: '#/components/schemas/PlanOverridenOptions'
        backupContent:
          $ref: '#/components/schemas/PlanOverridenOptions'
        basePlan:
          $ref: '#/components/schemas/IdName'
        storagePool:
          $ref: '#/components/schemas/PlanOverridenOptions'
      title: ServerPlanInheritSettings
      type: object
    ServerPlanRPO:
      description: Recovery Point Objective (RPO) is the maximum amount of time that data can be lost during a service disruption. Your RPO determines the frequency of your backup jobs.
      properties:
        SLA:
          $ref: '#/components/schemas/SLAOptions'
        backupFrequency:
          $ref: '#/components/schemas/PlanSchedules'
        backupWindow:
          description: Backup window for incremental backup
          items:
            $ref: '#/components/schemas/DayAndTime'
          nullable: true
          type: array
        fullBackupWindow:
          description: Backup window for full backup
          items:
            $ref: '#/components/schemas/DayAndTime'
          nullable: true
          type: array
      type: object
    ServerPlanSettings:
      properties:
        enableAdvancedView:
          description: Setting to suggest plan has some advanced settings present. Setting is OEM specific and not applicable for all cases.
          type: boolean
        fileSearch:
          $ref: '#/components/schemas/PlanFileSearch'
      title: ''
      type: object
    ServerPlanUpdateRPO:
      description: Recovery Point Objective (RPO) is the maximum amount of time that data can be lost during a service disruption. Your RPO determines the frequency of your backup jobs.
      properties:
        SLA:
          $ref: '#/components/schemas/SLAUpdateOptions'
        backupFrequency:
          $ref: '#/components/schemas/PlanSchedules'
        backupWindow:
          description: Backup window for incremental backup
          items:
            $ref: '#/components/schemas/DayAndTime'
          nullable: true
          type: array
        fullBackupWindow:
          description: Backup window for full backup
          items:
            $ref: '#/components/schemas/DayAndTime'
          nullable: true
          type: array
      type: object
    ServerRule:
      properties:
        matchCondition:
          $ref: '#/components/schemas/matchesWithEnum'
        ruleName:
          enum:
            - APP_TYPE
            - CLIENT_GROUP
            - CLIENT_GROUPLIST
            - USES_LIBRARY
            - STORAGE_POLICY
            - STORAGE_POLICYLIST
            - BACKUP_ACTIVITY_ENABLED_FOR_CLIENT
            - CASE_MANAGER_CLIENTS
            - CLIENT_PROP
            - CLIENT_ACTS_AS_PROXY
            - CLIENT_ASSOCIATED_WITH_PLAN
            - CLIENT_BACKUP_ACTIVITY_ENABLED
            - CLIENT_BY_SCHEDULE_INTERVAL
            - CLIENT_CIDR_RANGE
            - CLIENTS_RELEASE16PLUS_SP_LEVEL_CONSTRAINT
            - CLIENT_DESCRIPTION
            - CLIENT_DISPLAY_NAME
            - CLIENT_EXCLUDED_FROM_SLA
            - CLIENTGROUP_NAME
            - CLIENT_CIDR_RANGE_IPV6
            - CLIENT_ISDELETEDVM
            - CLIENT_HAS_CONNECTIVITY_ISSUES
            - CLIENT_NAME
            - CLIENT_NEEDS_UPDATES
            - CLIENT_OFFLINE
            - CLIENT_ONLINE
            - CLIENT_ONLINE_IN_LAST_30_DAYS
            - CLIENT_ONLINE_IN_LAST_N_DAYS
            - CLIENT_USES_STORAGEPOLICY
            - CLIENT_VERSION
            - COMPARE_CLIENT_CS_VERSION
            - CLIENT_ASSOCIATED_ADUSERGROUP
            - IS_COMPANY_CLIENT
            - CLIENT_ASSOC_SCHDPOLICY
            - CLIENT_ASSOCIATED_TO_TOPOLOGY_WITH_REGION
            - VSA_BACKEDUP_CLIENT
            - CLIENT_INDEX_MAINFOLIST
            - CLIENT_OS_INFOLIST
            - CLIENT_BY_PERMISSION
            - CLIENT_BY_ROLE
            - VSA_DISCOVER_CLIENT
            - CLIENTGROUP_TAGLIST
            - CLIENT_MEETS_SLA
            - CLIENTS_OF_RESELLER
            - USERGROUPLIST
            - CLIENT_IDA_ASSOCIATED_ADUSERGROUP
            - CLIENT_WITH_ASSOCIATED_REGION
            - CLIENTS_WITH_ATTACHED_STORAGE
            - CLIENT_WITH_BACKUP_SCHEDULE
            - CLIENT_WITH_ENABLED_BACKUP_SCHEDULE
            - CLIENT_ENCRYPTION_STATE
            - CLIENT_FETSIZE_LE_10GB
            - CLIENT_IMPROPER_DECONF_SUBCLIENT
            - CLIENT_INDEXINGV1
            - CLIENT_INDEXINGV2
            - CLIENTINFRASTRUCTUREROLE_LIST
            - CLIENT_LICENSELIST
            - CLIENT_LONG_RUNNING_JOBS_N_DAYS
            - CLIENT_WITH_NO_ARCHIVE_DATA
            - CLIENTS_WITH_ONEPASS_ENABLED
            - CLIENT_WITH_ASSOCIATED_SP
            - CLIENT_WITH_SYNTHETICFULL_BACKUP
            - CLIENT_TAGLIST
            - IS_COMMCELL_CLIENT
            - COMPANY_CLIENT_ASSOCIATIONS
            - COMPANY_INSTALLED_CLIENT_ASSOCIATIONS
            - ANALYZER_SERVERS_CLIENT
            - DAYS_SINCE_CLIENT_CREATED
            - DAYS_SINCE_LAST_CLIENT_BKP
            - EXTERNAL_GROUP_CLIENT_OWNER
            - HAC_CLUSTER_CLIENT
            - HOST_NAME
            - MACLIENTS_WITH_STORAGEPOOLS
            - CLIENT_OWNER_INACTIVE_ADUSER
            - SOLR_SERVERS_CLIENT
            - LOCAL_GROUP_CLIENT_OWNER
            - MEDIAAGENT_HAS_LUCENE_INDEX_ROLELIST
            - MEDIAAGENT_HAS_LUCENE_INDEX_ROLES
            - MAS_FOR_CLIENTS_IN_GROUP
            - MAS_FOR_CLIENTS_IN_GROUPLIST
            - CLIENT_GATEWAY_FOR_INSTALLATION
            - OS_TYPE
            - OS_VERSION
            - PACKAGE_INSTALLED
            - PRODUCT_VERSION
            - PSEUDO_CLIENTS
            - RESTORE_ACTIVITY_ENABLED_FOR_CLIENT
            - SNAP_BACKUP_CLIENTS
            - CLIENT_CONSECUTIVE_BACKUP_FAILURES
            - SUBCLIENT_NAME
            - TIMEZONE
            - TIMEZONELIST
            - TIMEZONE_REGIONLIST
            - USER_CLIENT_OWNER
            - USER_CLIENT_ASSOCIATIONS
            - USER_DESCRIPTION_CONTAINS
            - USERGROUP_CLIENT_ASSOCIATIONS
            - USERGROUP_DESCRIPTION_CONTAINS
            - VM_NO_CONTENT
            - VMHYPER_IN_CLIENTGROUP
          type: string
        ruleSecValue:
          description: 'Secondary value used for BETWEEN and NOT_BETWEEN matchCondition. For ruleName which have enum values (like OS_TYPE), this is used to store displayName.'
          type: string
        ruleValue:
          description: Primary value for the rule
          type: string
      type: object
    ServerRuleGroup:
      properties:
        match:
          $ref: '#/components/schemas/ServerRuleGroupOperation'
        rules:
          description: List of rules
          items:
            $ref: '#/components/schemas/ServerRule'
          type: array
      type: object
    ServerRuleGroupOperation:
      enum:
        - AND
        - OR
        - NOT
      format: ''
      type: string
    ServerRuleGroups:
      properties:
        match:
          $ref: '#/components/schemas/ServerRuleGroupOperation'
        ruleGroup:
          description: List of rule groups
          items:
            $ref: '#/components/schemas/ServerRuleGroup'
          type: array
      type: object
    ServerSummary:
      description: Summary of individual server in servers list response
      properties:
        OS:
          description: 'The operating system, for example, Windows Server 2008 R2 Enterprise.'
          type: string
        agents:
          description: List of agents the server has installed
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        clientRoles:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        commcell:
          $ref: '#/components/schemas/CommcellInfo'
        company:
          $ref: '#/components/schemas/IdName'
        configured:
          description: Property to show whether client is in configured state or not
          type: boolean
        displayName:
          description: Name to be displayed in UI
          type: string
        hostName:
          description: Hostname of the client
          type: string
        id:
          description: Id of server
          format: int32
          type: integer
        isInfrastructure:
          description: 'By default, a server is classified as infrastructure if has one of the following packages installed: CommServe, Index Store, Web Server, Content Extractor, Virtual Server Agent (VSA), Web Console, Content Analyzer, Exchange, Cloud Apps'
          type: boolean
        isMAPackageInstalled:
          description: Used to determine if MA package is instlaled on the client
          type: boolean
        isMARoleSet:
          description: Used to determine if MA role is set on the client
          type: boolean
        name:
          description: Name of the client
          type: string
        networkReadiness:
          $ref: '#/components/schemas/FileServerStatus'
        tags:
          items:
            $ref: '#/components/schemas/IdNameValue'
          type: array
        updateState:
          $ref: '#/components/schemas/UpdateStatus'
        version:
          description: 'Version of Commvault software server is running. Version is in the format: Release.SPversion.Hotfixpack. eg: 11.22.5'
          example: 11.22.5
          type: string
      title: ServerSummary
      type: object
    ServersListResp:
      description: Response for servers listing API
      properties:
        servers:
          items:
            $ref: '#/components/schemas/ServerSummary'
          type: array
        totalServers:
          format: int32
          type: integer
      title: ServersListResp
      type: object
    ServiceCommcells:
      description: Returns a list of service commcells
      properties:
        hostname:
          description: hostname of the Commcell
          type: string
        id:
          description: Id of the commcell
          format: int32
          type: integer
        name:
          description: Name of the commcell entity
          type: string
        role:
          description: Role of the commcell
          enum:
            - NOTCONFIGURED
            - ROUTERCOMMCELL
            - ROUTERCOMMCELL_SERVICECOMMCELL
            - IDPCOMMCELL
            - IDPCOMMCELL_SERVICECOMMCELL
            - CLOUDSERVICE
            - ONPRIM_SUBSCRIBER_OF_CLOUDSERVICE
            - MSP_CLOUDSERVICE
          type: string
        syncStatus:
          $ref: '#/components/schemas/SyncStatus'
        useUniversalCommandCenter:
          description: if enabled the Command Center of the commcell belong to the primary CommCell
          type: boolean
      title: ServiceCommcells
      type: object
      x-tags:
        - ServiceCommcells
    ServiceTypes:
      description: 'The values that are returned by serviceType are- 0(unknown),1(commserver users),2(Active directory users),3(domino directory service users),4(hosted exchange users),5(company users),12(dummy domain users)'
      enum:
        - UNKNOWN
        - COMMSERVE
        - ACTIVE_DIRECTORY
        - DOMINO_DIRECTORTY_SERVICE
        - HOSTED_EXCHANGE
        - ORGANIZATIONS
        - DUMMY_DOMAIN
      format: ''
      type: string
    SetGlobalExceptions:
      description: Used to set global exceptions
      properties:
        unixGlobalExceptions:
          $ref: '#/components/schemas/GlobalExceptionOperation'
        useGlobalExceptionsOnAllSubclients:
          description: Boolean value which updates the property useGlobalExceptionsOnAllSubclients
          type: boolean
        windowsGlobalExceptions:
          $ref: '#/components/schemas/GlobalExceptionOperation'
      title: SetGlobalExceptions
      type: object
    SharepointContentReq:
      description: Request Message to add content to sharepoint app
      properties:
        office365plan:
          $ref: '#/components/schemas/IdName'
        type:
          default: ALL_WEB_SITES
          enum:
            - ALL_WEB_SITES
            - ALL_TEAMS_SITES
          type: string
      required:
        - type
        - office365plan
      title: SharepointContentReq
      type: object
    SinglePlanSummary:
      properties:
        laptopPlan:
          $ref: '#/components/schemas/LaptopPlanDetails'
        planType:
          $ref: '#/components/schemas/PlanType'
        serverPlan:
          $ref: '#/components/schemas/ServerPlan'
      type: object
    Sites:
      properties:
        primarySiteName:
          description: Primary site name
          type: string
        secondarySiteNames:
          description: Secondary site names
          items:
            type: string
          type: array
      type: object
    SnapConfigOverrideEditReq:
      description: Request Template to edit Snap Config
      properties:
        snapConfigurations:
          items:
            $ref: '#/components/schemas/SnapConfigsOverrideEdit'
          type: array
      title: SnapConfigOverrideEditReq
      type: object
    SnapConfigOverrideResp:
      description: Response template for Snap Config
      properties:
        assocType:
          description: 'Association type, at subclient level it is 9, at client level it is 8, at copy level it is 6 and by default at array level it is 3'
          format: int64
          type: integer
        clientId:
          description: Client Id
          format: int64
          type: integer
        copyId:
          description: snap copy id
          format: int64
          type: integer
        snapConfigurations:
          description: Snap Config options that can be overridden
          items:
            $ref: '#/components/schemas/SnapConfigsOverride'
          type: array
        subclientId:
          description: Subclient id
          format: int64
          type: integer
      title: SnapConfigOverrideResp
      type: object
    SnapConfigsOverride:
      description: Array config template for getting options of Snap Configs on different levels
      properties:
        description:
          description: Description about the config that tells the user what it is for and the range of values it accepts
          type: string
        flags:
          description: Flag regarding placement of config in the CC page
          format: int32
          type: integer
        id:
          description: This is the id of the config which is required during config override
          format: int32
          type: integer
        isEnabled:
          description: Whether the config is enabled or not
          type: boolean
        isOverridden:
          description: Whether the config is Overridden or not
          type: boolean
        masterConfigId:
          description: 'This is the masterConfigId, which is available for each vendors configs'
          format: int32
          type: integer
        name:
          description: This is the name of the config which is displayed on the Command Center Console
          type: string
        type:
          description: 'Type of the config value. type can accept 7 values [1,2,8,10,12,13,14], 1: boolean, 2: integer, 8: text, 10: array[string] are common configs, the rest three are special keys, 12 is for password type key for NetApp E-Series and HPE Nimble, 13 is Private Key for GCP, 14 is a hidden config to select type of Disk for GCP'
          enum:
            - 1
            - 2
            - 8
            - 10
            - 12
            - 13
            - 14
          format: int32
          type: integer
        value:
          description: Value of the config
          type: string
        values:
          description: 'Holds a single value for types except 10, for 10 it holds one or more values.'
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      title: SnapConfigsOverride
      type: object
    SnapConfigsOverrideEdit:
      description: Array config template for editing overridden Snap Configs
      properties:
        flags:
          description: Flag regarding placement of config in the CC page
          format: int32
          type: integer
        id:
          description: This is the id of the config which is required during config override
          format: int32
          type: integer
        isOverridden:
          description: whether the config is overridden or not
          type: boolean
        isUpdated:
          description: Whether the config is updated or not
          type: boolean
        masterConfigId:
          description: 'This is the masterConfigId, which is available for each vendors configs'
          format: int32
          type: integer
        name:
          description: This is the name of the config which is displayed on the Command Center Console
          type: string
        type:
          description: 'Type of the config value. type can accept 7 values [1,2,8,10,12,13,14], 1: boolean, 2: integer, 8: text, 10: array[string] are common configs, the rest three are special keys, 12 is for password type key for NetApp E-Series and HPE Nimble, 13 is Private Key for GCP, 14 is a hidden config to select type of Disk for GCP'
          enum:
            - 1
            - 2
            - 8
            - 10
            - 12
            - 13
            - 14
          format: int32
          type: integer
        value:
          description: Value of the config
          type: string
        values:
          description: 'Holds a single value for types except 10, for 10 it holds one or more values.'
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      required:
        - masterConfigId
        - name
        - type
        - flags
        - isOverridden
      title: SnapConfigsOverrideEdit
      type: object
    SnapForceReq:
      properties:
        volumes:
          items:
            $ref: '#/components/schemas/SnapVolumes'
          type: array
      title: snapForceReq
      type: object
    SnapNodeReq:
      description: Request template for multi node unmount and instant clone delete
      properties:
        mountVolumeIds:
          description: Volume Ids of the Snaps to include for multi node unmount or instant clone delete
          items:
            format: int32
            type: integer
          type: array
        volume:
          description: Array of volumes to include for the operation
          items:
            $ref: '#/components/schemas/SnapVolumes'
          type: array
      title: SnapNodeReq
      type: object
    SnapReconResp:
      description: Snap reconcile operation response
      properties:
        errorCode:
          description: error code
          format: int32
          type: integer
        errorMessage:
          description: error message
          nullable: true
          type: string
        jobId:
          description: Resulting job Id for snap reconcile/mount/unmount/delete workflow
          format: int32
          type: integer
      title: SnapReconResp
      type: object
    SnapRevertReq:
      description: Request template for revert snapshots
      properties:
        volumes:
          items:
            $ref: '#/components/schemas/VolumeSnap'
          type: array
      title: SnapRevertReq
      type: object
    SnapVendors:
      description: Get list of all snap vendors
      properties:
        snapVendors:
          description: List of all snap vendors
          items:
            $ref: '#/components/schemas/VendorResp'
          type: array
      title: SnapVendors
      type: object
    SnapVolumes:
      description: An object containing smVolumeId of snaps and commcell id of the setup
      properties:
        commCellId:
          default: 2
          description: Commcell Id of the setup
          format: int32
          type: integer
        smVolumeId:
          description: smVolumeId of the snap
          format: int32
          type: integer
      required:
        - smVolumeId
      title: SnapVolumes
      type: object
    SnapshotCopyMapping:
      properties:
        source:
          $ref: '#/components/schemas/IdName'
        sourceVendor:
          $ref: '#/components/schemas/IdName'
        target:
          $ref: '#/components/schemas/IdName'
        targetVendor:
          $ref: '#/components/schemas/IdName'
        vendor:
          $ref: '#/components/schemas/SnapshotCopyMappingVendors'
      title: ''
      type: object
    SnapshotCopyMappingVendors:
      description: Snapshot vendors available for Snap Copy mappings
      enum:
        - NETAPP
        - AMAZON
      title: ''
      type: string
    SolutionDetail:
      description: Consist of workload solution details.
      properties:
        commandCenterState:
          type: string
        commandCenterStateValue:
          format: int32
          type: integer
        id:
          format: int64
          type: integer
        name:
          description: ''
          type: string
      type: object
    SolutionFilter:
      description: This filter can be passed Solutions REST API to fetch applicable supported solutions
      enum:
        - ALL
        - PLAN_RULES
        - PLAN_SUPPORTED_SOLUTIONS
      title: SolutionFilter
      type: string
    SolutionTypes:
      enum:
        - GENERIC
        - O365
        - SALESFORCE
        - EXCHANGE
        - SHAREPOINT
        - ONEDRIVE
        - TEAMS
        - DYNAMICS_365
        - VSA
        - FILESYSTEM
        - KUBERNETES
        - AZURE_AD
        - CLOUD_LAPTOP
        - FILE_STORAGE_OPTIMIZATION
        - DATA_GOVERNANCE
        - E_DISCOVERY
      type: string
    SolutionsList:
      description: This will return list of supported workload solutions for a command center user
      properties:
        id:
          description: Detail of the workload solution that is supported for the user
          items:
            $ref: '#/components/schemas/SolutionDetail'
          type: array
      title: SolutionsList
      type: object
    StartEnd:
      properties:
        end:
          description: the blackout window is no longer in effect from this point on.
          format: int64
          type: integer
        start:
          description: the blackout window comes into effect at this point.
          format: int64
          type: integer
      type: object
    Status:
      properties:
        enable:
          description: Tells if library is enabled or not
          type: boolean
        maintenanceMode:
          description: library maintenance mode.
          type: boolean
        offlineReason:
          description: library offline reason.
          type: string
      type: object
    StatusModel:
      properties:
        status:
          type: boolean
      title: StatusModel
      type: object
    StorageAssociatedCopies:
      description: ''
      properties:
        copies:
          description: List of copies associated with given storage pool
          items:
            $ref: '#/components/schemas/StorageAssociatedCopy'
          nullable: true
          type: array
      type: object
    StorageAssociatedCopy:
      description: ''
      properties:
        backupsToCopy:
          $ref: '#/components/schemas/PlanFullBackupType'
        copy:
          $ref: '#/components/schemas/IdName'
        copyType:
          $ref: '#/components/schemas/PlanCopyType'
        extendedRetentionRules:
          $ref: '#/components/schemas/ExtendedRetentionRules'
        isSnapCopy:
          description: Is this a snap copy?
          type: boolean
        plan:
          $ref: '#/components/schemas/IdName'
        planType:
          $ref: '#/components/schemas/PlanType'
        retentionPeriodDays:
          description: Retention period in days
          format: int32
          type: integer
        useExtendedRetentionRules:
          description: Tells if extended retention rules are used
          type: boolean
      type: object
    StorageCopy:
      description: Copy configured for a replication group
      properties:
        name:
          description: 'Storage name. Primary, secondary '
          type: string
        retention:
          description: How long the data is retained. Mentioned in days
          format: int32
          type: integer
        storagePool:
          $ref: '#/components/schemas/IdName'
      title: StorageCopy
      type: object
    StorageCopyCreate:
      description: 'Copy to be configured for a replication group. The first copy from the list is regarded as the Primary copy. Secondary copy, if provided, is used for replication. Provide both the id and the name of the storage pool'
      properties:
        isDedupe:
          description: Denotes if this is a deduplication copy
          type: boolean
        storagePool:
          $ref: '#/components/schemas/IdName'
      required:
        - storagePool
        - isDedupe
      title: StorageCopy
      type: object
    StorageListResponse:
      properties:
        diskStorage:
          items:
            $ref: '#/components/schemas/StorageListSummary'
          type: array
      type: object
    StorageListSummary:
      properties:
        capacity:
          description: provides the capacity of the storage pool. Provided in megabytes
          format: int32
          type: integer
        commcell:
          $ref: '#/components/schemas/IdName'
        company:
          $ref: '#/components/schemas/IdName'
        freeSpace:
          description: provides the free space available on the storage pool. Provided in megabytes.
          format: int32
          type: integer
        id:
          description: id of the storage pool
          format: int32
          type: integer
        name:
          description: storage pool name
          type: string
        status:
          description: mentions if the storage pool is enabled
          type: string
        storagePoolType:
          enum:
            - DEDUPLICATION
            - SECONDARY_COPY
            - NON_DEDUPLICATION
            - SCALE_OUT
          type: string
      type: object
    StoragePool:
      properties:
        id:
          description: Id of Storage Pool
          format: int32
          type: integer
        name:
          description: Name of Storage Pool
          type: string
        retentionPeriodDays:
          description: Retention period of pool in days
          format: int32
          type: integer
        type:
          $ref: '#/components/schemas/StoragePoolType'
        wormStoragePoolFlag:
          description: 'Bit flag indicating WORM configuration of storage pool. 0 means no lock, 1 means compliance lock, 2 means worm storage lock, 4 means Object worm lock and 8 means bucket worm lock.'
          format: int32
          type: integer
      title: StoragePool
      type: object
    StoragePoolType:
      description: Type of Storage Pool
      enum:
        - DEDUPLICATION
        - SECONDARY_COPY
        - NON_DEDUPLICATION
        - SCALE_OUT
      title: ''
      type: string
    StorageResourcePoolMap:
      properties:
        resources:
          description: List of resources mapped to the storage
          items:
            $ref: '#/components/schemas/ResourcePoolInfo'
          type: array
        storage:
          $ref: '#/components/schemas/IdName'
      type: object
    StorageType:
      enum:
        - ALL
        - DISK
        - CLOUD
        - HYPERSCALE
        - TAPE
      title: StorageType
      type: string
    StroagePoolList:
      allOf:
        - $ref: '#/components/schemas/IdName'
        - properties:
            online:
              description: stoagePool status.
              type: string
            type:
              description: stoagePool type.
              type: string
          type: object
    SubTypes:
      enum:
        - ANY
        - DLO
        - SERVER
        - LAPTOP
        - DATABASE
        - SNAP
        - FS_SERVER
        - VSA_SERVER
        - VSA_REPLICATION
        - EXCHANGE_USER
        - EXCHANGE_JOURNAL
        - DATA_CLASSIFICATION
        - E_DISCOVERY
        - OFFICE_365
        - ARCHIVER
        - FSIBMIVTL
        - DYNAMICS_365
        - CDM
      format: ''
      type: string
    SupportedSolution:
      description: This facilitates the selection of solutions for the company by it's provider.
      enum:
        - FILE_SERVER
        - VIRTUALIZATION
        - LAPTOP
        - DATABASES
        - EXCHANGE
        - ARCHIVING
        - CLOUD_APPS
        - SHAREPOINT
        - ACTIVATE
        - ACTIVE_DIRECTORY
        - OFFICE_365
        - BIGDATA_APPS
        - G_SUITE
        - SALESFORCE
        - REPLICATION
        - KUBERNETES
      type: string
    SyncStatus:
      description: Sync status of the commcell
      properties:
        errorMessage:
          $ref: '#/components/schemas/ErrorMessage'
        lastSyncedWithIDP:
          description: returns the last synced time with IDP(unix time format)
          format: int32
          type: integer
        status:
          description: status of the commcell
          enum:
            - SUCCESSFUL
            - FAILED
          type: string
      required:
        - errorMessage
      title: SyncStatus
      type: object
      x-tags:
        - ServiceCommcells
    SyslogConfigure:
      description: This operation configures a syslog server.
      properties:
        certificateAuthorityContent:
          description: 'Content of the uploaded certificate authority file. It should be base64 encoded. Accepted fileTypes are key,crt,pem.'
          type: string
        certificateAuthorityName:
          description: File name of the uploaded certificate authority file
          type: string
        enabled:
          description: Specifies if the syslog server is enabled or disabled
          type: boolean
        forwardToSyslog:
          $ref: '#/components/schemas/SyslogPolicies'
        hostname:
          description: The hostname or the IP address of the syslog server.
          type: string
        port:
          description: The port on which the syslog server accepts the logs.
          format: int32
          maximum: 65535
          minimum: 1
          type: integer
        secureMessaging:
          description: 'When false UDP port will be used, when true TLS encryption will be used to connect to Syslog Server. To upload Certificate Authority file it should be enabled.'
          type: boolean
      required:
        - hostname
      title: SyslogConfigure
      type: object
      x-tags:
        - SyslogServer
    SyslogPolicies:
      description: Select the log types that you want to forward to the syslog server.
      properties:
        alerts:
          description: Forward the system log for alerts to the server.
          type: boolean
        audit:
          description: Forward the system log for audit trails to the server.
          type: boolean
        events:
          description: Forward the system log for events to the server.
          type: boolean
      title: SyslogPolicies
      type: object
      x-tags:
        - SyslogServer
    SyslogStatus:
      description: Get status of a syslog server.
      properties:
        certificateAuthorityName:
          description: File name of the uploaded certificate authority file
          type: string
        enabled:
          description: Specifies if the syslog server is enabled or disabled
          type: boolean
        forwardToSyslog:
          $ref: '#/components/schemas/SyslogPolicies'
        hostname:
          description: The hostname or the IP address of the syslog server.
          type: string
        port:
          description: The port on which the syslog server accepts the logs.
          format: int32
          maximum: 65535
          minimum: 1
          type: integer
        secureMessaging:
          description: 'When false UDP port will be used, when true TLS encryption will be used to connect to Syslog Server. To upload Certificate Authority file it should be enabled.'
          type: boolean
      title: SyslogStatus
      type: object
      x-tags:
        - SyslogServer
    TFAMode:
      enum:
        - DISABLED
        - ENABLED_FOR_ALL
        - ENABLED_FOR_USER_GROUP_INCLUSION
      type: string
    TFAOptions:
      description: Allows two-factor authentication to be enabled for the specific types of usergroups. it can be turned on or off based on user preferences. There will be usergroups that will not have this option.
      enum:
        - 'ON'
        - 'OFF'
        - DISABLED_AT_COMPANY
      type: string
    TagAssociatedEntitiesResponse:
      description: Response for returning associated entities for tags of default entity tag set.
      properties:
        tagSetInfo:
          $ref: '#/components/schemas/IdNameGUID'
        tags:
          items:
            $ref: '#/components/schemas/TagAssociationInfo'
          type: array
      title: TagAssociatedEntitiesResponse
      type: object
    TagAssociationInfo:
      description: Information of count and associatedEntities
      properties:
        associatedEntities:
          items:
            $ref: '#/components/schemas/IdNameType'
          type: array
        count:
          format: int32
          type: integer
        id:
          format: int32
          type: integer
        name:
          type: string
      title: TagAssociationInfo
      type: object
    TagValueResponse:
      description: Returns list of tag values associated to tag names
      properties:
        tagValues:
          description: Array of tag values
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      title: TagValueResponse
      type: object
    TapeDetails:
      allOf:
        - $ref: '#/components/schemas/IdName'
        - properties:
            barcodeReader:
              description: library bar code.
              type: boolean
            drives:
              description: list of drives.
              items:
                $ref: '#/components/schemas/DriveSummary'
              type: array
            firmwareRevision:
              description: library firmware revision.
              type: string
            libraryType:
              description: library type.
              format: int32
              type: integer
            manufacturer:
              description: library manufacturer.
              type: string
            model:
              description: library model.
              type: string
            serialNumber:
              description: library serial number.
              type: string
            status:
              $ref: '#/components/schemas/Status'
              properties: null
              type: object
            storage:
              description: Returns list of stroage.
              items:
                $ref: '#/components/schemas/StroagePoolList'
              type: array
          type: object
    TapeListResp:
      properties:
        tapeList:
          description: List of tapes
          items:
            $ref: '#/components/schemas/TapeSummary'
          type: array
      type: object
    TapeMediaDetails:
      properties:
        agedMedia:
          description: number of aged media.
          format: int32
          type: integer
        assignedMedia:
          description: number of assigned media.
          format: int32
          type: integer
        cleaningMedia:
          description: number of cleaned media.
          format: int32
          type: integer
        spareMedia:
          description: number of spare media.
          format: int32
          type: integer
        totalMedia:
          description: number of media.
          format: int32
          type: integer
        vaultTrackerPolicies:
          description: list of VaultTrackPolicies.
          items:
            $ref: '#/components/schemas/VaultTrackerPolicies'
          type: array
      type: object
    TapeSummary:
      description: Returns the list of tapes.
      properties:
        commcell:
          $ref: '#/components/schemas/IdName'
        company:
          $ref: '#/components/schemas/IdName'
        id:
          description: Returns tape id.
          format: int32
          type: integer
        manufacturer:
          description: Returns the manufacturer of the tape.
          type: string
        model:
          description: Returns the tape model.
          type: string
        name:
          description: Returns tape name.
          type: string
        status:
          description: returns status of the tape ie if it is online or offline.
          type: string
        storageType:
          description: The type of tapeStorage
          enum:
            - INVALID
            - TAPE
            - OPTICAL
            - MAGNETIC
            - STANDALONE_TAPE
            - STANDALONE_OPTICAL
            - DECONFIGURED_LIBRARY
            - EXTERNAL_PNP_LIBRARY
          type: string
      title: ''
      type: object
    TeamsConnectionsSettings:
      allOf:
        - $ref: '#/components/schemas/AzureAdAppToken'
        - properties:
            azureDirectoryId:
              description: Azure directory (tenant) ID
              type: string
          required:
            - azureDirectoryId
          type: object
      title: TeamsConnectionsSettings
      type: object
    TeamsContentReq:
      description: Request Message to add content to teams app
      properties:
        office365plan:
          $ref: '#/components/schemas/IdName'
        type:
          default: ALL_TEAMS
          enum:
            - ALL_TEAMS
          type: string
      required:
        - type
        - office365plan
      title: TeamsContentReq
      type: object
    Template:
      properties:
        vmGUID:
          description: VM guid of template
          type: string
        vmName:
          description: VM name of template
          type: string
      title: Template
      type: object
    TenantOperator:
      description: 'These are users and groups who will be allowed to manage the company. Different roles can be assigned for each tenant operator for the company. Either id/name of the user/usergroup/roles can be provided. If both id and name are provided, id will be taken into consideration.'
      properties:
        role:
          $ref: '#/components/schemas/IdName'
        user:
          $ref: '#/components/schemas/IdName'
        userGroup:
          $ref: '#/components/schemas/IdName'
      type: object
    TestFailoverVMState:
      description: Power state of the clone VM
      enum:
        - STOPPED
        - RUNNING
        - SUSPENDED
        - UNKNOWN
        - ARCHIVED
        - EXPIRED
        - UNAVAILABLE
        - CREATING
        - CLONING
        - CREATING_SNAPSHOT
        - REVERTING_SNAPSHOT
        - DELETING_SNAPSHOT
        - STARTING
        - STOPPING
        - SUSPENDING
        - RESTARTING
        - RECOVERING
        - RETRIEVING
      type: string
    TestFailoverVirtualMachines:
      description: Test failover virtual machine details
      properties:
        creator:
          $ref: '#/components/schemas/IdNameGUID'
        expirationTime:
          description: Expiration timestamp of cloned VM in unix time (epoch) format
          format: int32
          type: integer
        ipAddress:
          description: The IP address of the clone VM
          type: string
        name:
          description: The name of the clone VM
          type: string
        operatingSystem:
          description: Name of operating system of VM
          type: string
        state:
          $ref: '#/components/schemas/TestFailoverVMState'
      title: TestFailoverVirtualMachines
      type: object
    TestK8sModifierReq:
      description: Request body for K8s Modifier Test Operation
      properties:
        resourceYAML:
          description: Payload(Yaml) to test against the restore modifiers.
          type: string
        restoreModifierListYAML:
          description: YAML of Restore Modifier(s) to be tested.
          type: string
    TriggeredAlertsDetails:
      properties:
        alertType:
          description: alert type for which the triggered alert was generated
          enum:
            - Configuration - Clients
            - Configuration - Edge drive-Share operations
            - Configuration - License
            - Configuration - MediaAgents
            - Configuration - Users
            - Custom Rules - Client Group License Usage Check
            - Custom Rules - Data aging is disabled for n days
            - Custom Rules - Expiring clones
            - Custom Rules - Index Backup Status
            - Custom Rules - Index State
            - Custom Rules - Notify decommissioned Virtual Machines
            - Job Management - Auxiliary Copy
            - Job Management - Data Aging
            - Job Management - Data Protection
            - Job Management - Data Recovery
            - Job Management - DeDup DB Reconstruction
            - Job Management - Disaster Recovery Backup
            - Media Management - Device Status
            - Media Management - Library Management
            - Operation - Admin Alert
            - Operation - Event Viewer Events
            - Software Updates - Updates Available to Download
          type: string
        description:
          description: The HTML template for the triggered alert containing description
          type: string
        detectedCriteria:
          description: detection criteria for the triggered alert to be generated
          enum:
            - Alert CommServe License Expires Within n Days
            - Alert Modified
            - Alert every n attempts (Network failures)
            - Alert every n attempts (Phase failures)
            - Alert every n failed login attempts
            - Alert when License Consumed reaches n Percent
            - Alert when client certificate Expires Within n Days
            - Alert when jobs in pending state exceed n percent or count of n
            - Auxiliary Copy fallen behind alert
            - Backup for subclient failed consecutively for n attempts
            - Classification Failed
            - DDB Store got corrupted
            - DDB disk space low
            - Data backed up exceeds n GB
            - Decrease in Data size by n %
            - Delayed by n Hrs
            - Disk Space Low
            - Drive went Offline
            - Force De-configured
            - Increase in Data size by n %
            - Insufficient Storage
            - Job Activity
            - Job Failed
            - Job Initiated
            - Job Skipped
            - Job Started
            - Job Succeeded
            - Job Succeeded with Errors
            - Job exceeded running time of n Hrs
            - Library went Offline
            - Maintenance Occurred
            - Maintenance Required
            - Media Handling Required
            - Media Picked Up
            - Media Reached Destination
            - Media Recalled
            - Media Returned to Source
            - MediaAgent went offline
            - Mount Path went Offline
            - No Backup for last n Days
            - No Data Protection
            - Non-encrypted media exported
            - Number of failed files is more than n
            - Percentage of failed files is more than n
            - Properties Modified
            - Release Upgrade Required
            - Rolled Back
            - Scheduler Changes
            - Updates Available to Download
            - User Overwrite of Media
          type: string
        id:
          description: id of the triggered alert
          format: int32
          type: integer
        severity:
          $ref: '#/components/schemas/AlertSeverity'
      title: TriggeredAlertsDetails
      type: object
    TwoFactorAuth:
      properties:
        all:
          description: 'enable two factor authentication for every entity. if set to false when Two factor authentication is enabled, provide userGroupId or userGroupName. If both are provided, userGroupId is taken'
          type: boolean
        enable:
          description: 'enable or disable two factor authentication. if enabled, all or userGroups value should be provided.'
          type: boolean
        userGroups:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      type: object
    UnmountSnapReq:
      description: Request template for unmount request of snapshots
      properties:
        volumes:
          description: Volumes of the snap you want to unmount
          items:
            $ref: '#/components/schemas/VolumeSnap'
          type: array
      title: UnmountSnapReq
      type: object
    UpdateADLDAP:
      description: Update the properties of an AD/LDAP
      properties:
        LDAPQueryParameters:
          description: List of overridden query parameters for the LDAP domain. Valid only if the directory type is LDAP_SERVER
          items:
            $ref: '#/components/schemas/LDAPAttribute'
          type: array
          uniqueItems: true
        NETBIOSName:
          description: 'The fully qualified domain name that you use to identify this network resource. Required only if directoryType is ACTIVE_DIRECTORY, OPEN_LDAP or ORACLE_DIRECTORY '
          type: string
        OSXServerName:
          description: The fully qualified domain name that you use to identify this network resource. Required only if directoryType is APPLE_DIRECTORY_SERVICE
          type: string
        accessViaClient:
          description: Denotes if the domain is to be accessed via a proxy
          type: boolean
        attributeMap:
          description: List of overridden attribute mappings for the LDAP domain. Valid only if the directoryType is LDAP_SERVER.
          items:
            $ref: '#/components/schemas/LDAPAttribute'
          type: array
          uniqueItems: true
        baseDNForCardUsers:
          description: Base DN for card users
          type: string
        directoryType:
          $ref: '#/components/schemas/ADLDAPDirectoryType'
        enableSSO:
          description: Denotes if SSO should be enabled for the domain. Valid only for ACTIVE_DIRECTORY.
          type: boolean
        host:
          description: The fully qualified domain name that you use to identify this network resource. Required only if directoryType is LDAP_SERVER
          type: string
        name:
          description: 'The fully qualified domain name, for example, my.domain.example.com'
          type: string
        password:
          description: Password for the domain user. Should be in Base64 encoded format.
          type: string
        proxies:
          description: List of proxies used to connect to the domain. Available only if accessViaClient is true.
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        useSecureLDAP:
          description: 'Boolean to indicate if the app use secure LDAP. Valid only for directory types - ACTIVE_DIRECTORY, ORACLE_DIRECTORY and LDAP_SERVER.'
          type: boolean
        username:
          description: The username for a user who has at least read permission for the domain
          type: string
      required:
        - directoryType
        - name
      type: object
    UpdateArchivePlan:
      properties:
        allowPlanOverride:
          description: 'Flag to enable overriding of plan. Once enabled, cannot be disabled.'
          type: boolean
        archivingRules:
          $ref: '#/components/schemas/ArchivePlanArchivingRules'
        newName:
          description: New plan name to update
          nullable: true
          type: string
        overrideRestrictions:
          $ref: '#/components/schemas/ArchivePlanOverrideSettings'
        regionToConfigure:
          $ref: '#/components/schemas/IdName'
        rpo:
          $ref: '#/components/schemas/ArchivePlanUpdateRPO'
      type: object
    UpdateArchivePlanBackupDestination:
      properties:
        enableDataAging:
          description: Tells if this copy has data aging enabled
          type: boolean
        newName:
          description: New name for backup destination
          type: string
        retentionPeriodDays:
          description: Retention period in days. -1 can be specified for infinite retention.
          format: int32
          maximum: 9999
          minimum: 1
          type: integer
        sourceCopy:
          $ref: '#/components/schemas/IdName'
      title: ''
      type: object
    UpdateAuthRestore:
      properties:
        authOpType:
          description: The type of authorize for restore operation
          type: boolean
        expirationTime:
          description: 'The duration(in unix time) for which a user can continue browsing and restoring backup data without being prompted to enter the passkey, again.'
          format: int32
          type: integer
        passKey:
          description: The existing passkey for restricting backup restores.
          type: string
      title: UpdateAuthRestore
      type: object
    UpdateBackupLocation:
      description: 'While adding network access path, please add credentials or saved credentials. If both are provided, credentials will be selected.'
      properties:
        access:
          $ref: '#/components/schemas/AccessType'
        credentials:
          $ref: '#/components/schemas/UserNamePassword'
        enabled:
          type: boolean
        mediaAgent:
          $ref: '#/components/schemas/IdName'
        path:
          description: Can be used to change the disk access path.
          type: string
        savedCredentials:
          $ref: '#/components/schemas/IdName'
      type: object
    UpdateBlackoutWindow:
      description: company-refers to company to which the blackout window is associated.Dates have to be provided in unix time format.
      properties:
        allDays:
          description: Days of the week along with the time on which the black out window will be in effect.
          items:
            $ref: '#/components/schemas/DaysAndTimes'
          type: array
        backupOperations:
          description: Refers to backup types to include in the blackout window
          items:
            enum:
              - FULL
              - INCREMENTAL_AND_DIFFERENTIAL
              - SYNTHETIC_FULL
              - TRANSACTION_LOG
              - ALL_OPERATIONS
            type: string
          type: array
        betweenDates:
          $ref: '#/components/schemas/StartEnd'
        company:
          $ref: '#/components/schemas/IdName'
        doNotSubmitJob:
          description: 'Allows or Denies submitting a job when the blackout window is in effect. If allowed, the job is submitted and resumed once the blackout window ends.'
          type: boolean
        newName:
          description: Refers to the newName given to the blackout Window.
          type: string
        weeks:
          description: Refers to the weeks of the month that the blackout window will be in effect.
          items:
            $ref: '#/components/schemas/WeekOfMonth'
          type: array
      type: object
    UpdateCloudStorage:
      properties:
        encryption:
          $ref: '#/components/schemas/Encryption'
        newName:
          description: change the name of the cloud storage
          type: string
        security:
          items:
            $ref: '#/components/schemas/UpdateSecurityAssoc'
          type: array
      type: object
    UpdateCompany:
      description: Used to update the properties of an existing company
      properties:
        defaultPlans:
          description: Refers to default data protection plans to use for the company.
          items:
            $ref: '#/components/schemas/DefaultPlan'
          type: array
        emailSettings:
          $ref: '#/components/schemas/EmailSettings'
        fileExceptions:
          $ref: '#/components/schemas/FileExceptions'
        general:
          $ref: '#/components/schemas/General'
        newName:
          description: Used to change the name of a company
          type: string
        plans:
          description: Provide a list of data protection plans to use for the company. The plans that are provided are the plans that the tenant administrator can choose from.
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        security:
          items:
            $ref: '#/components/schemas/UpdateSecurityAssoc'
          type: array
        sites:
          $ref: '#/components/schemas/Sites'
        status:
          $ref: '#/components/schemas/CompanyStatus'
        tenantOperators:
          items:
            $ref: '#/components/schemas/TenantOperator'
          type: array
      type: object
    UpdateCredentialSecurity:
      description: Update Security association of a list of users and user groups
      properties:
        associations:
          items:
            $ref: '#/components/schemas/CredentialSecurityAssociations'
          type: array
        owner:
          $ref: '#/components/schemas/CredentialOwner'
      title: UpdateCredentialSecurity
      type: object
    UpdateDiskStorage:
      properties:
        dataEncryption:
          $ref: '#/components/schemas/Encryption'
        newName:
          description: change the name of the storage pool
          type: string
        security:
          items:
            $ref: '#/components/schemas/UpdateSecurityAssoc'
          type: array
      type: object
    UpdateEmailServerReq:
      description: None of the fields are mandatory. whichever field is specified should be updated. Rest should be untouched.
      properties:
        SMTPPort:
          description: The port number that connects to the mail server.
          format: int32
          type: integer
        SMTPServerName:
          description: 'The name of the mail server that sends alerts, scheduled reports, log files, and additional information.'
          type: string
        encryptionAlgorithm:
          $ref: '#/components/schemas/SMTPServerEncryptionAlgorithm'
        password:
          description: Password must be in base 64 encoded format. Password attribute can be left out to reuse the already saved password
          type: string
        senderEmail:
          description: The sender email address used for emails sent from the software.
          type: string
        senderName:
          description: The sender name used for emails sent from the software.
          type: string
        useAuthentication:
          description: The option to use authentication on the mail server. This is typically used in external or internet mail server configurations.
          type: boolean
        username:
          description: 'when useAuthentication is true, username must be present'
          type: string
      title: ''
      type: object
    UpdateHyperScaleStorage:
      properties:
        encryption:
          $ref: '#/components/schemas/Encryption'
        newName:
          description: change the name of the HyperScale storage
          type: string
        security:
          description: ''
          items:
            $ref: '#/components/schemas/UpdateSecurityAssoc'
          type: array
      title: UpdateHyperScaleStorage
      type: object
    UpdateHypervisorGroupAliCloud:
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - description: Update a hypervisor group with Ali Baba as the destination vendor
          properties:
            accessKey:
              description: Access key of alibaba cloud
              type: string
            hostURL:
              description: host URL of alibaba cloud
              type: string
            hypervisorType:
              enum:
                - ALIBABA_CLOUD
              type: string
            secretKey:
              description: secret key of alibaba cloud
              type: string
          type: object
    UpdateHypervisorGroupAmazon:
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - description: Update a hypervisor group with Amazon as the destination vendor
          properties:
            Region:
              description: AWS region if Iam role is used
              type: string
            RoleARN:
              description: Role ARN for STS assume role with IAM policy
              type: string
            accessKey:
              description: Access Key of Amazon login
              type: string
            hypervisorType:
              enum:
                - Amazon
              type: string
            secretKey:
              description: secret Key of Amazon login
              type: string
            useIamRole:
              description: if Iam Role is used
              type: boolean
            useServiceAccount:
              description: Clientname to be used as Admin Account
              type: string
          type: object
    UpdateHypervisorGroupAzure:
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - description: Update a hypervisor group with Azure as the destination vendor
          properties:
            hypervisorType:
              enum:
                - Azure_V2
              type: string
            password:
              description: Application Password of Azure login Application
              type: string
            serverName:
              description: Client Name to Update
              type: string
            subscriptionId:
              description: 'subscription id of Azure '
              type: string
            tenantId:
              description: Tenant id of Azure login Application
              type: string
            userName:
              description: Application id of Azure login Application
              type: string
          type: object
    UpdateHypervisorGroupAzureStack:
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - description: Update a hypervisor group with Azure Stack as the destination vendor
          properties:
            ApplicationId:
              description: Application id of Azure login Application
              type: string
            ApplicationPassword:
              description: Application Password of Azure login Application
              type: string
            hypervisorType:
              enum:
                - AZURE_STACK
              type: string
            resourceManagerURL:
              description: Resource manager URL for Azure Stack client
              type: string
            serverName:
              description: Client Name to Update
              type: string
            subscriptionId:
              description: subscription id of Azure Stack
              type: string
            tenantId:
              description: Tenant id of Azure Stack login Application
              type: string
            useManagedIdentity:
              description: Use managed identities for Azure stack authentication
              type: boolean
          type: object
    UpdateHypervisorGroupDocker:
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - description: Update a hypervisor group with Docker as the destination vendor
          properties:
            hypervisorType:
              enum:
                - DOCKER
              type: string
            password:
              description: 'Docker password '
              type: string
            serverName:
              description: 'Docker hostname '
              type: string
            userName:
              description: 'Docker userName '
              type: string
          type: object
    UpdateHypervisorGroupGoogleCloud:
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - description: Update a hypervisor group with Google Cloud as the destination vendor
          properties:
            hypervisorType:
              enum:
                - GOOGLE_CLOUD
              type: string
            password:
              description: Base64 encrypted Service Account ID
              type: string
            serviceAccountId:
              description: service account id of google cloud
              type: string
            userName:
              description: username of GCP login Application
              type: string
          type: object
    UpdateHypervisorGroupHyperV:
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - description: Update a hypervisor group with VMWare as the destination vendor
          properties:
            hypervisorType:
              enum:
                - Hyper-V
              type: string
            password:
              description: 'Hyper-V password '
              type: string
            serverName:
              description: 'Hyper-V hostname '
              type: string
            userName:
              description: 'Hyper-V userName '
              type: string
          type: object
    UpdateHypervisorGroupNutanix:
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - description: Update a hypervisor group with Nutanix as the destination vendor
          properties:
            hostName:
              description: 'Nutanix hostname '
              type: string
            hypervisorType:
              enum:
                - NUTANIX
              type: string
            password:
              description: 'Nutanix password '
              type: string
            userName:
              description: 'Nutanix userName '
              type: string
          type: object
    UpdateHypervisorGroupOpenstack:
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - description: Update a hypervisor group with OpenStack as the destination vendor
          properties:
            hypervisorType:
              enum:
                - OPENSTACK
              type: string
            keynoteAddress:
              description: 'OpenStack KeyNote address '
              type: string
            openstackDomain:
              description: 'OpenStack Domain Name '
              type: string
            password:
              description: 'OpenStack password '
              type: string
            userName:
              description: 'OpenStack userName '
              type: string
          type: object
    UpdateHypervisorGroupOracleCloud:
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - description: Update a hypervisor group with oracleCloud as the destination vendor
          properties:
            fingerPrint:
              description: Finger print for the private key
              type: string
            hypervisorType:
              enum:
                - ORACLE_CLOUD_INFRASTRUCTURE
              type: string
            privateKeyFileName:
              description: File Name for the private key
              type: string
            privateKeyPassword:
              description: password for the private key.This is the passphrase that was used to encrypt the private key.
              type: string
            regionName:
              description: home region for the tenant
              type: string
            tenancyOCId:
              description: OCID for the tenant.
              type: string
            userOCId:
              description: OCID for the admin user for the hypervisor
              type: string
          type: object
    UpdateHypervisorGroupOracleVM:
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - description: Update a hypervisor group with Oracle VM as the destination vendor
          properties:
            hypervisorType:
              enum:
                - ORACLE_VM
              type: string
            oracleVMManager:
              description: oracle VM Manager
              type: string
            password:
              description: password of the oracle VM info
              type: string
            userName:
              description: Username of the oracle VM info
              type: string
          type: object
    UpdateHypervisorGroupRedHatOpenShift:
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - description: Update a hypervisor group with openShift as the destination vendor
          properties:
            glusterHostCredentials:
              $ref: '#/components/schemas/RedHatOpenShiftGluster'
            hypervisorType:
              enum:
                - REDHAT_OPENSHIFT
              type: string
            password:
              description: 'redHatOpenShift password '
              type: string
            serverName:
              description: 'redHatOpenShift hostname '
              type: string
            userName:
              description: 'redHatOpenShift userName '
              type: string
          type: object
    UpdateHypervisorGroupReq:
      description: Update a hypervisor group
      discriminator:
        propertyName: hypervisorType
      properties:
        accessNode:
          items:
            $ref: '#/components/schemas/accessNodeModel'
          type: array
        activityControl:
          $ref: '#/components/schemas/ActivityControlOptions'
        fbrUnixMediaAgent:
          $ref: '#/components/schemas/IdName'
        newName:
          description: The name of the hypervisor that has to be changed
          type: string
        security:
          $ref: '#/components/schemas/VMHypervisorSecurityProp'
        settings:
          $ref: '#/components/schemas/hypervisorSettings'
        skipCredentialValidation:
          default: true
          description: if credential validation has to be skipped.
          type: boolean
      required:
        - hypervisorType
      type: object
    UpdateHypervisorGroupRhev:
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - description: Update a hypervisor group with Rhev  as the destination vendor
          properties:
            RhevMManager:
              description: 'Rhev Manager '
              type: string
            hypervisorType:
              enum:
                - REDHAT
              type: string
            password:
              description: 'Rhev password '
              type: string
            userName:
              description: 'Rhev userName '
              type: string
          type: object
    UpdateHypervisorGroupVCloud:
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - description: Update a hypervisor group with VMware Cloud Director as the destination vendor
          properties:
            createOrgAccount:
              default: false
              description: True if organization account to be used
              type: boolean
            hostName:
              description: VCloud Director Name
              type: string
            hypervisorType:
              enum:
                - VCLOUD
              type: string
            password:
              description: VCloud base 64 encoded password
              type: string
            userName:
              description: vCloud username
              type: string
            vOrganizationGuid:
              description: Organization Guid of VCloud Director
              type: string
            vOrganizationName:
              description: Organization name of VCloud Director
              type: string
            vcenterHostName:
              description: Vcenter hostname
              type: string
            vcenterPassword:
              description: Vcenter password
              type: string
            vcenterUserName:
              description: Vcenter username
              type: string
          required:
            - hypervisorType
          type: object
    UpdateHypervisorGroupVMWare:
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - description: Update a hypervisor group with VMWare as the destination vendor
          properties:
            hypervisorType:
              enum:
                - VMW
              type: string
            password:
              description: Vcenter password
              type: string
            userName:
              description: Vcenter username
              type: string
            vcenterHostName:
              description: Vcenter hostname
              type: string
          type: object
    UpdateHypervisorGroupXen:
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - description: Update a hypervisor group with Google Cloud as the destination vendor
          properties:
            hypervisorType:
              enum:
                - XEN_SERVER
              type: string
            password:
              description: 'Xen password '
              type: string
            serverName:
              description: 'Xen hostname '
              type: string
            userName:
              description: 'Xen userName '
              type: string
          type: object
    UpdateLaptopAdminsReq:
      description: Request of updating laptop admins
      properties:
        laptopAdmins:
          description: List of laptop admins (users or user groups)
          items:
            $ref: '#/components/schemas/IdNameType'
          type: array
        operationType:
          $ref: '#/components/schemas/UpdateOperationType'
      title: UpdateLaptopAdminsReq
      type: object
    UpdateLaptopAdminsResp:
      properties:
        error:
          $ref: '#/components/schemas/GenericResp'
      title: UpdateLaptopAdminsResp
      type: object
    UpdateLaptopPlan:
      properties:
        alerts:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        allowPlanOverride:
          description: Flag to enable overriding of plan
          type: boolean
        allowedFeatures:
          $ref: '#/components/schemas/LaptopPlanAllowedFeatures'
        associatedUsersAndUserGroups:
          items:
            $ref: '#/components/schemas/PlanUserOrGroups'
          type: array
        backupContent:
          $ref: '#/components/schemas/LaptopPlanBackupContent'
        general:
          $ref: '#/components/schemas/LaptopPlanUpdateGeneralInfo'
        networkResources:
          $ref: '#/components/schemas/LaptopPlanNetworkResources'
        newName:
          description: New plan name to update
          type: string
        offlineLaptops:
          $ref: '#/components/schemas/AutoRetireDevices'
        overrideRestrictions:
          $ref: '#/components/schemas/LaptopPlanOverrideSettings'
        regionToConfigure:
          $ref: '#/components/schemas/IdName'
        retention:
          $ref: '#/components/schemas/LaptopPlanRetention'
        rpo:
          $ref: '#/components/schemas/LaptopPlanUpdateRPO'
      title: ''
      type: object
    UpdateMediaAgent:
      properties:
        control:
          $ref: '#/components/schemas/MediaAgentControl'
        description:
          description: Provides the media agent with a new description.
          type: string
        indexCache:
          $ref: '#/components/schemas/IndexCache'
        security:
          $ref: '#/components/schemas/UpdateSecurityAssoc'
      type: object
    UpdateMetadataCacheConfiguration:
      description: 'If updating to a network access path, Please add credentials or saved credentials. If both are provided, credentials will be taken into consideration.'
      properties:
        credentials:
          $ref: '#/components/schemas/UserNamePassword'
        path:
          description: Metadata cache will be stored on this path
          type: string
        savedCredentials:
          $ref: '#/components/schemas/IdName'
      required:
        - path
      title: UpdateMetadataCacheConfiguration
      type: object
    UpdateOperationType:
      enum:
        - OVERWRITE
        - ADD
        - DELETE
        - CLEAR
      title: UpdateOperationType
      type: string
    UpdatePassKey:
      description: 'Model to create, edit or disable passkey'
      properties:
        confirmPassKey:
          description: Confirm the new passkey for restricting backup restores.
          type: string
        currentPassKey:
          description: The current passkey for restricting backup restores.
          type: string
        newPassKey:
          description: The new passkey for restricting backup restores.
          type: string
        operationType:
          description: The type of passkey operation
          enum:
            - CREATE
            - DISABLE
            - EDIT
          type: string
      title: UpdatePassKey
      type: object
    UpdatePlanBackupDestination:
      properties:
        backupStartTime:
          description: Specify the Backup start time in seconds. The time is provided in unix time format.
          format: int32
          type: integer
        backupsToCopy:
          $ref: '#/components/schemas/PlanFullBackupType'
        enableDataAging:
          description: Tells if this copy has data aging enabled
          type: boolean
        extendedRetentionRules:
          $ref: '#/components/schemas/ExtendedRetentionRules'
        mappings:
          items:
            $ref: '#/components/schemas/SnapshotCopyMapping'
          type: array
        newName:
          description: New name for backup destination
          type: string
        overrideRetentionSettings:
          description: Tells if this copy should use storage pool retention period days or the retention defined for this copy. Set as true to use retention defined on this copy.
          type: boolean
        retentionPeriodDays:
          description: Retention period in days. -1 can be specified for infinite retention.
          format: int32
          maximum: 9999
          minimum: 1
          type: integer
        retentionRuleType:
          $ref: '#/components/schemas/RetentionRuleTypes'
        snapRecoveryPoints:
          description: Number of snap recovery points for snap copy for retention. Can be specified instead of retention period in Days for snap copy.
          format: int32
          minimum: 1
          type: integer
        sourceCopy:
          $ref: '#/components/schemas/IdName'
        useExtendedRetentionRules:
          description: Use extended retention rules. Must specify if updating extended retention rules.
          type: boolean
      title: ''
      type: object
    UpdatePlanBackupDestinationDetails:
      properties:
        backupType:
          $ref: '#/components/schemas/PlanBackupDestinationBackupTypeInfo'
        general:
          $ref: '#/components/schemas/PlanBackupDestinationGeneralInfoUpdate'
        mappings:
          items:
            $ref: '#/components/schemas/SnapshotCopyMapping'
          type: array
        newName:
          description: New name for backup destination
          type: string
        retentionRules:
          $ref: '#/components/schemas/PlanBackupDestinationRetentionRuleInfo'
      title: ''
      type: object
    UpdatePlanEntityRule:
      description: |-
        Plan entity rule update object. Fields in this object need to be populated to suggest what need to be changed in the rule.
        User can provide all rule options or can specify a specific rule group. Be default, for rule to be applicable for association to a workload,  ALL specified rules in that Rule need to be matched.
      properties:
        plan:
          $ref: '#/components/schemas/IdName'
        rank:
          description: '[Optional] - This field will suggest rank/priority of rule.'
          format: int32
          type: integer
        regions:
          description: This will include list of regions that should be evaluated against workload region for plan association.
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        rule:
          $ref: '#/components/schemas/IdName'
        serverGroups:
          description: This will include list of Server groups that should be evaluated against workload server group for plan association.
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        solutions:
          description: This will include list of solutions that should be evaluated against workload for plan association.
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        tags:
          description: This will include list of tags that should be evaluated against workload for plan association
          items:
            $ref: '#/components/schemas/PlanEntityRuleTag'
          type: array
        workloads:
          description: This will include list of apptypes that should be evaluated against workload apptype for plan association.
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      required:
        - rule
      title: UpdatePlanEntityRule
      type: object
    UpdatePlanEntityRuleRanks:
      description: Plan entity rule update rank object. Fields in this object need to be populated to suggest what rank need to be set for the said rule.
      properties:
        rules:
          description: Lits of plan entity rule object suggesting their ranks.
          items:
            $ref: '#/components/schemas/PlanEntityRuleRank'
          type: array
      title: UpdatePlanEntityRuleRanks
      type: object
    UpdateRegion:
      description: 'For newly added location - country, latitude and longitude are mandatory fields. Any existing location added to locations array needs to have all the existing fields. '
      properties:
        locations:
          items:
            $ref: '#/components/schemas/LocationDetailsWithZone'
          type: array
        locationsOperationType:
          default: ADD
          description: Type of operation to be performed for locations
          enum:
            - NONE
            - OVERWRITE
            - ADD
            - DELETE
            - CLEAR
          type: string
        newName:
          description: New name for the region
          type: string
      title: UpdateRegion
      type: object
    UpdateReplicationGroup:
      properties:
        advancedOptions:
          $ref: '#/components/schemas/ReplicationGroupAdvancedOptions'
        disable:
          description: Used to disable a replication group
          type: boolean
        enable:
          description: Used to enable a replication group
          type: boolean
        newName:
          description: Used to change the name of a replication group
          type: string
      title: UpdateReplicationGroupReq
      type: object
    UpdateRole:
      properties:
        enabled:
          description: Used to determine if the role is enabled or disabled.
          type: boolean
        newName:
          description: new name of the role
          type: string
        permissionList:
          description: Used to update the list of permissions associated with the role.
          items:
            $ref: '#/components/schemas/Permissions'
          type: array
        security:
          description: Used to update the security association for the role
          items:
            $ref: '#/components/schemas/UpdateSecurityAssoc'
          type: array
        visibleToAll:
          description: Determines if the role is visible to everyone.
          type: boolean
      title: ''
      type: object
    UpdateSecurityAssoc:
      description: 'A list of users or user groups each having a specific set of roles that determine the kind of operations they can perform on the entity. Either id/name of the user/usergroup/roles can be provided. If both id and name are provided, id will be taken into consideration.'
      properties:
        role:
          $ref: '#/components/schemas/IdName'
        user:
          $ref: '#/components/schemas/IdName'
        userGroup:
          $ref: '#/components/schemas/IdName'
      type: object
    UpdateServerGroup:
      description: 'Update server group, operation supported for three ServerGroupTypes MANUAL, AUTOMATIC, VIRTUAL_MACHINE'
      properties:
        automaticAssociation:
          $ref: '#/components/schemas/AutomaticServerGroupAssociationDetails'
        description:
          type: string
        manualAssociation:
          $ref: '#/components/schemas/ManualServerGroupAssociationDetails'
        serverGroup:
          $ref: '#/components/schemas/IdName'
        serverGroupType:
          $ref: '#/components/schemas/ServerGroupType'
        virtualAssociation:
          $ref: '#/components/schemas/VirtualServerGroupAssociationDetails'
      type: object
    UpdateServerPlan:
      properties:
        allowPlanOverride:
          description: 'Flag to enable overriding of plan. Once enabled, cannot be disabled.'
          type: boolean
        backupContent:
          $ref: '#/components/schemas/PlanContent'
        databaseOptions:
          $ref: '#/components/schemas/ServerPlanDatabaseOptionsInfo'
        filesystemAddon:
          description: flag to enable backup content association for applicable file system workload.
          type: boolean
        newName:
          description: New plan name to update
          nullable: true
          type: string
        overrideInheritSettings:
          $ref: '#/components/schemas/PlanOverrideInheritSetting'
        overrideRestrictions:
          $ref: '#/components/schemas/PlanOverrideSettings'
        regionToConfigure:
          $ref: '#/components/schemas/IdName'
        rpo:
          $ref: '#/components/schemas/ServerPlanUpdateRPO'
        settings:
          $ref: '#/components/schemas/ServerPlanSettings'
        snapshotOptions:
          $ref: '#/components/schemas/PlanSnapshotOptions'
        workload:
          $ref: '#/components/schemas/PlanWorkloads'
      type: object
    UpdateServerPlanBackupContent:
      properties:
        backupContent:
          $ref: '#/components/schemas/PlanContent'
      type: object
    UpdateServerPlanBackupContentResponse:
      properties:
        backupContent:
          $ref: '#/components/schemas/PlanContent'
        error:
          $ref: '#/components/schemas/GenericResp'
      type: object
    UpdateStatus:
      description: Enum which specifies the status of update on a server
      enum:
        - UNKNOWN
        - UP_TO_DATE
        - NEEDS_UPDATE
        - AHEAD_OF_CACHE
        - NOT_APPLICABLE
        - HAS_DIAGNOSTIC_UPDATES
        - OTHER_SOFTWARE
        - PENDING
      title: UpdateStatus
      type: string
    UpdateTagValueRequest:
      description: Request body to update tag values
      properties:
        newValue:
          type: string
        oldValue:
          type: string
      title: UpdateTagValueRequest
      type: object
    UpdateTimezoneForClientsReq:
      description: Request body for updating timezone for clients
      properties:
        clients:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        updateAll:
          description: Boolean which determines if all servers(with no package) should be updated with the company timezone.
          type: boolean
      title: UpdateTimezoneForClientsReq
      type: object
    UpdateTriggeredAlertsNotes:
      properties:
        notes:
          description: Notes that you want to add to the triggered alerts. Leave it empty if you want to delete the alert
          type: string
      title: UpdateTriggeredAlertsNotes
      type: object
    UpdateUser:
      description: Used to update an existing user.
      properties:
        authenticationMethod:
          description: Change the current authentication method of user. SAML user association can be removed using this.
          type: string
        email:
          description: Change email-id for existing user. This email-id can be used for logging-in.
          type: string
        enabled:
          description: enable or disable the user.
          type: boolean
        fullName:
          description: Change name for existing user
          type: string
        newName:
          description: Change user name for existing user. Username can be used for logging-in as an alternate to email-id if duplicate email-ids are present.
          type: string
          x-terraform-mapping: name
        newPassword:
          description: Change existing password for user. validationPassword must also be provided when changing password. Password should be in provided in Base64 format.
          type: string
          x-terraform-mapping: password
          x-terraform-sensitive: true
        plan:
          $ref: '#/components/schemas/IdName'
          x-terraform-computed: false
        userGroupOperation:
          default: ADD
          description: 'Allows adding to, overwriting and deleting existing user groups. default is adding to existing userGroups'
          enum:
            - ADD
            - DELETE
            - OVERWRITE
          type: string
          x-terraform-include: false
        userGroups:
          description: 'Provide a list of userGroups that the user should be a part of. Note that for external users, user groups cannot be modified.'
          items:
            $ref: '#/components/schemas/IdName'
          type: array
          x-terraform-include: false
        userPrincipalName:
          description: Change User Principal Name(UPN) for existing user. This User Principal Name can be used for logging-in.
          type: string
        validationPassword:
          description: Provide the old password in Base64 format when updating the password. The new password has to be provided in the password tag.
          type: string
          x-terraform-system: true
      type: object
    UpdateUserGroup:
      properties:
        allowMultipleCompanyMembers:
          default: false
          description: This property can be used to allow addition of users/groups from child companies. Only applicable for commcell and reseller company group.
          type: boolean
        associatedExternalGroups:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
          x-terraform-computed: false
        associatedLocalGroups:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
          x-terraform-include: false
        azureGUID:
          description: Azure Object ID used to link this user group to Azure AD group and manage group membership of the user during SAML login
          type: string
        consoleTypeOperationType:
          enum:
            - ADD
            - DELETE
            - OVERWRITE
          type: string
          x-terraform-constant: OVERWRITE
          x-terraform-haschange: restrictConsoleTypes
        enableLocalAuthentication:
          $ref: '#/components/schemas/TFAOptions'
        enableTwoFactorAuthentication:
          $ref: '#/components/schemas/TFAOptions'
        enabled:
          description: allows the enabling/disabling of the user group.
          type: boolean
        enforceFSQuota:
          description: determines if a data limit will be set for the user group.
          type: boolean
        externalUserGroupsOperationType:
          default: ADD
          description: 'Allows adding, deleting or overwriting associated external user groups of a user group. Default is adding associated external user groups'
          enum:
            - ADD
            - DELETE
            - OVERWRITE
          type: string
          x-terraform-constant: OVERWRITE
          x-terraform-haschange: associatedExternalGroups
        laptopAdmins:
          description: 'When set to true, users in this group cannot activate or be set as server owner'
          type: boolean
        laptopPlan:
          $ref: '#/components/schemas/IdName'
          x-terraform-include: false
        localUserGroupsOperationType:
          default: ADD
          description: 'Allows adding, deleting or overwriting associated local user groups of a user group. Default is adding associated local user groups'
          enum:
            - ADD
            - DELETE
            - OVERWRITE
          type: string
          x-terraform-include: false
        newDescription:
          description: gives a new description to the user group.
          type: string
          x-terraform-mapping: description
        newName:
          description: gives a new name to the user group.
          type: string
          x-terraform-mapping: name
        planOperationType:
          $ref: '#/components/schemas/Operations'
        quotaLimitInGB:
          description: 'if enforceFSquota is enabled, the quota limit can be provided in GBs'
          format: int32
          type: integer
        restrictConsoleTypes:
          $ref: '#/components/schemas/RestrictConsoleTypes'
          x-terraform-computed: false
        userOperationType:
          $ref: '#/components/schemas/Operations'
          x-terraform-constant: OVERWRITE
          x-terraform-haschange: users
        users:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      type: object
    UpdateVMProperties:
      properties:
        authKeyRestore:
          $ref: '#/components/schemas/UpdateAuthRestore'
        plan:
          $ref: '#/components/schemas/IdName'
        requirePasskeyForRestore:
          $ref: '#/components/schemas/UpdatePassKey'
        security:
          $ref: '#/components/schemas/VMSecurity'
      title: UpdateVMProperties
      type: object
    UpdatevmGroupReq:
      description: ''
      properties:
        accessNode:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        activityControl:
          $ref: '#/components/schemas/ActivityControlOptions'
        applicationValidation:
          $ref: '#/components/schemas/vmAppValidation'
        content:
          $ref: '#/components/schemas/vmContent'
        diskFilters:
          $ref: '#/components/schemas/vmDiskFilterProp'
        enableFileIndexing:
          default: false
          description: True if file indexing needs to be enabled
          type: boolean
        filters:
          $ref: '#/components/schemas/vmContent'
        meditechSystems:
          $ref: '#/components/schemas/meditechPropResp'
        newName:
          description: 'subclient name '
          type: string
        plan:
          $ref: '#/components/schemas/IdName'
        securityAssociations:
          items:
            $ref: '#/components/schemas/SecurityAssoc'
          type: array
        settings:
          $ref: '#/components/schemas/vmGroupSettings'
        snapshotManagement:
          $ref: '#/components/schemas/snapCopyInfo'
        storage:
          $ref: '#/components/schemas/IdName'
      title: UpdatevmGroupReq
      type: object
    User:
      description: Returns the details of of the user whose userId has been provided
      properties:
        GUID:
          type: string
        associatedUserGroups:
          items:
            $ref: '#/components/schemas/IdNameProvider'
          type: array
        authenticationMethod:
          description: Specifies authentication method used by user. Default value is Commcell.
          type: string
        authenticationMethodServer:
          $ref: '#/components/schemas/IdNameCompany'
        company:
          $ref: '#/components/schemas/IdName'
        description:
          type: string
        email:
          type: string
        enabled:
          type: boolean
        fullName:
          type: string
        id:
          format: int32
          type: integer
          x-terraform-id: true
        lastLoggedIn:
          description: Returns the most recent time the user was logged in. It is provided in unix format.
          format: int64
          type: integer
        lockInfo:
          $ref: '#/components/schemas/LockProperties'
        name:
          type: string
        plan:
          $ref: '#/components/schemas/IdName'
        serviceType:
          $ref: '#/components/schemas/ServiceTypes'
        userPrincipalName:
          type: string
      type: object
    UserAuthenticationMethods:
      properties:
        authenticationMethod:
          description: Specifies authentication method used by user.
          enum:
            - SAML
            - AD
            - LOCAL
          type: string
        authenticators:
          items:
            $ref: '#/components/schemas/AuthenticationServer'
          type: array
        error:
          $ref: '#/components/schemas/GenericResp'
      title: UserAuthenticationMethods
      type: object
    UserGroup:
      properties:
        GUID:
          type: string
        allowMultipleCompanyMembers:
          default: false
          description: This property denotes that addition of users/groups from child companies is allowed. Only applicable for commcell and reseller company group.
          type: boolean
        associatedEntities:
          items:
            $ref: '#/components/schemas/AssocEntity'
          type: array
        associatedExternalGroups:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        associatedLocalGroups:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        azureGUID:
          description: Azure Object ID used to link this user group to Azure AD group and manage group membership of the user during SAML login
          type: string
        company:
          $ref: '#/components/schemas/IdName'
        description:
          type: string
        eligibleToAllowMultipleCompanyMembers:
          description: Read only property. Denotes if the group is eligible for allowMultipleCompanyMembers
          readOnly: true
          type: boolean
        email:
          description: Returns if there is a email ID associated with the usergroup.
          type: string
        enableLocalAuthentication:
          $ref: '#/components/schemas/TFAOptions'
        enableTwoFactorAuthentication:
          $ref: '#/components/schemas/TFAOptions'
        enabled:
          description: Returns if the user group is enabled or disabled
          type: boolean
        enforceFSQuota:
          type: boolean
        id:
          type: string
          x-terraform-id: true
        laptopAdmins:
          description: 'When set to true, users in this group cannot activate or be set as server owner'
          type: boolean
        name:
          type: string
        plan:
          $ref: '#/components/schemas/IdName'
        quotaLimitInGB:
          format: int32
          type: integer
        restrictedConsoleTypes:
          items:
            $ref: '#/components/schemas/RestrictedConsoleTypes'
          type: array
          x-terraform-function: handler.GetConsoleTypes
          x-terraform-mapping: restrictConsoleTypes
        serviceType:
          $ref: '#/components/schemas/ServiceTypes'
        showAzureGuidOption:
          description: Read only property. Denotes if the group is eligible to have Azure Object ID property
          readOnly: true
          type: boolean
        users:
          description: Returns list of users that are associated with this userGroup
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      type: object
    UserGroupListResponse:
      description: Used to get a list of existing user-groups.
      properties:
        userGroups:
          items:
            $ref: '#/components/schemas/UserGroupSummary'
          type: array
      type: object
    UserGroupSummary:
      properties:
        GUID:
          description: globally unique identifier for user group
          type: string
        allowMultipleCompanyMembers:
          description: This property denotes that addition of users/groups from child companies is allowed. Only applicable for commcell and reseller company group.
          type: boolean
        commcell:
          $ref: '#/components/schemas/CommcellInfo'
        company:
          $ref: '#/components/schemas/IdName'
        description:
          type: string
        enabled:
          description: returns if the user group is enabled or disabled
          type: boolean
        id:
          description: User group id
          format: int32
          type: integer
        name:
          description: user group name
          type: string
        serviceType:
          $ref: '#/components/schemas/ServiceTypes'
        users:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      type: object
    UserListResp:
      description: Returns a list of existing users.
      properties:
        numberOfUsers:
          format: int32
          type: integer
        users:
          items:
            $ref: '#/components/schemas/UserSummary'
          type: array
      type: object
    UserNamePassword:
      properties:
        name:
          description: username to access the network path
          type: string
        password:
          description: password to access the network path
          type: string
      type: object
    UserOrGroupsType:
      description: Tells what kind of user or user group it is
      enum:
        - USER
        - USER_GROUP
        - EXTERNAL_USER_GROUP
      title: UserAndUserGroupsType
      type: string
    UserSummary:
      properties:
        GUID:
          description: globally unique identifier
          type: string
        commcell:
          $ref: '#/components/schemas/CommcellInfo'
        company:
          $ref: '#/components/schemas/IdName'
        email:
          description: Email-id of the user. This email-id can be used for logging in the user.
          type: string
        enabled:
          description: Gives information on whether the user is enabled or disabled.
          type: boolean
        fullName:
          description: full name of the user
          type: string
        id:
          description: User id
          format: int32
          type: integer
          x-terraform-id: true
        lockInfo:
          $ref: '#/components/schemas/LockProperties'
        name:
          description: The user name of the user.
          type: string
        numberOfLaptops:
          description: Returns the number of laptops associated with the user
          format: int32
          type: integer
        plan:
          $ref: '#/components/schemas/IdName'
        userPrincipalName:
          description: User Principal Name(UPN) of the user. This User Principal Name can be used for logging in the user.
          type: string
      title: ''
      type: object
    V4BlackoutWindow:
      description: company refers to company to which the blackout window is associated. Dates are provided in unix time format.
      properties:
        backupOperations:
          description: backupOperations refers to the backup types to include in the blackout window
          items:
            $ref: '#/components/schemas/BackupOperations'
          type: array
        betweenDates:
          $ref: '#/components/schemas/StartEnd'
        company:
          $ref: '#/components/schemas/IdName'
        days:
          description: Days of the week when the blackout window will be in effect and jobs will not run.
          items:
            $ref: '#/components/schemas/DayOfTheWeek'
          type: array
        doNotSubmitJob:
          description: 'Allows or Denies submitting a job when the blackout window is in effect. If allowed, the job is submitted and resumed once the blackout window ends.'
          type: boolean
        id:
          description: Id of the blackout window.
          format: int32
          type: integer
        name:
          description: Name of the blackout window.
          type: string
        time:
          description: Refers to the time between which the blackout window will be in effect. It has to be provided in seconds.
          items:
            $ref: '#/components/schemas/StartEnd'
          type: array
        weeks:
          description: Refers to the weeks of the month that the blackout window will be in effect and jobs will not run.
          items:
            $ref: '#/components/schemas/WeekOfMonth'
          type: array
      type: object
    V4BlackoutWindowSummary:
      description: company refers to company to which the blackout window is associated. dates refers to the dates where the blackout window will be in effect. Dates are given in unix time format.doNotRunBetween refers to the time between which jobs cannot be run. The time is provided in seconds.
      properties:
        betweenDates:
          $ref: '#/components/schemas/StartEnd'
        company:
          $ref: '#/components/schemas/IdName'
        days:
          description: Days of the week on which the black out window will be in effect.
          items:
            $ref: '#/components/schemas/DayOfTheWeek'
          type: array
        id:
          description: blackout window Id
          format: int32
          type: integer
        name:
          description: blackout window name
          type: string
        time:
          description: Refers to the time between which the blackout window will be in effect. It has to be provided in seconds.
          items:
            $ref: '#/components/schemas/StartEnd'
          type: array
      type: object
    V4BlackoutWindowsListResponse:
      properties:
        blackoutWindows:
          description: Returns a summary of all blackout windows
          items:
            $ref: '#/components/schemas/V4BlackoutWindowSummary'
          type: array
      type: object
    V4CreateBlackoutWindow:
      description: betweenDates refers to the dates where the blackout window will be in effect. Dates have to be given in unix time format. time has to be provided in seconds. company refers to company to which the blackout window is associated.Id is given first preference if both are id and name are provided.
      properties:
        backupOperations:
          description: Refers to backup types to include in the blackout window
          items:
            enum:
              - FULL
              - INCREMENTAL_AND_DIFFERENTIAL
              - SYNTHETIC_FULL
              - TRANSACTION_LOG
              - ALL_OPERATIONS
            type: string
          type: array
        betweenDates:
          $ref: '#/components/schemas/StartEnd'
        company:
          $ref: '#/components/schemas/IdName'
        days:
          description: Days of the week when the blackout window will be in effect.
          items:
            $ref: '#/components/schemas/DayOfTheWeek'
          type: array
        doNotSubmitJob:
          description: 'Allows or Denies submitting a job when the blackout window is in effect. If set to false, the job is submitted and resumed once the blackout window ends.'
          type: boolean
        name:
          description: Name of the blackout window to be created.
          type: string
        time:
          description: Refers to the time between which the blackout window will be in effect. It has to be provided in seconds
          items:
            $ref: '#/components/schemas/StartEnd'
          type: array
        weeks:
          description: Refers to the weeks of the month that the blackout window will be in effect.
          items:
            $ref: '#/components/schemas/WeekOfMonth'
          type: array
      required:
        - name
      type: object
    V4UpdateBlackoutWindow:
      description: company-refers to company to which the blackout window is associated.Dates have to be provided in unix time format.
      properties:
        backupOperations:
          description: Refers to backup types to include in the blackout window
          items:
            enum:
              - FULL
              - INCREMENTAL_AND_DIFFERENTIAL
              - SYNTHETIC_FULL
              - TRANSACTION_LOG
              - ALL_OPERATIONS
            type: string
          type: array
        betweenDates:
          $ref: '#/components/schemas/StartEnd'
        company:
          $ref: '#/components/schemas/IdName'
        days:
          description: Days of the week when the blackout window will be in effect.
          items:
            $ref: '#/components/schemas/DayOfTheWeek'
          type: array
        doNotSubmitJob:
          description: 'Allows or Denies submitting a job when the blackout window is in effect. If allowed, the job is submitted and resumed once the blackout window ends.'
          type: boolean
        newName:
          description: Refers to the newName given to the blackout Window.
          type: string
        time:
          description: Refers to the time between which the blackout window will be in effect. It has to be provided in seconds
          items:
            $ref: '#/components/schemas/StartEnd'
          type: array
        weeks:
          description: Refers to the weeks of the month that the blackout window will be in effect.
          items:
            $ref: '#/components/schemas/WeekOfMonth'
          type: array
      type: object
    VMApplicationValidationResults:
      properties:
        appsDiscovered:
          items:
            $ref: '#/components/schemas/VMAppsDiscovered'
          type: array
        backupCompletionDate:
          description: timestamp(in unix) for the last backup job completed
          format: int32
          type: integer
        backupValidated:
          description: job id of the last backup job that was validated
          format: int32
          type: integer
        bootStatus:
          description: true if backup validation is set
          type: boolean
        lastValidationJobId:
          description: job id of the last backup validation job
          format: int32
          type: integer
      title: VMApplicationValidationResults
      type: object
    VMAppsDiscovered:
      properties:
        failureReason:
          description: reason for failure of validation of app
          type: string
        name:
          description: name of the VM apps discovered for validation
          type: string
        scriptStatus:
          description: true if validation status is true
          type: boolean
      title: VMAppsDiscovered
      type: object
    VMContentFilter:
      enum:
        - RESOURCE_POOL
        - DATACENTER
        - FOLDER
        - CLUSTER
        - DATASTORE
        - VM
        - TAG
        - TAG_CATEGORY
      type: string
    VMContentType:
      enum:
        - NONE
        - SERVER
        - RES_POOL
        - VAPP
        - DATACENTER
        - FOLDER
        - CLUSTER
        - DATASTORE
        - DATASTORE_CLUSTER
        - VM
        - VM_NAME
        - VM_GUEST_OS
        - VM_GUEST_HOST_NAME
        - CLUSTER_SHARED_VOLUMES
        - LOCAL_DISK
        - CLUSTER_DISK
        - UNPROTECTED_VMS
        - ROOT
        - FILE_SERVER
        - SMB_SHARE
        - TYPES_FOLDER
        - VM_FOLDER
        - SERVER_FOLDER
        - TEMPLATE_FOLDER
        - STORAGE_REPOSITORY_FOLDER
        - VAPPFOLDER
        - DATACENTER_FOLDER
        - CLUSTER_FOLDER
        - VM_POWER_STATE
        - VM_NOTES
        - VM_CUSTOM_ATTRIBUTE
        - NETWORK
        - USER
        - VM_TEMPLATE
        - TAG
        - TAG_CATEGORY
        - SUBCLIENT
        - CLIENT_GROUP
        - PROTECTION_DOMAIN
        - CONSISTENCY_GROUP
        - Instances_SIZE
        - ORGANIZATION
        - IMAGES
        - STORAGE_POLICY
        - DATABASE
        - TABLE
        - PROJECT
        - SELECTOR
        - MANAGED_BY
        - REPLICATION_MODE
        - METADATATAG
        - CATALOG
        - VAPPTEMPLATE
        - VOLUME
      format: ''
      type: string
    VMDetailSummary:
      description: The Virtual Machine detail summary. Hypervisor is the software that creates and runs virtual machines(VMs).
      properties:
        SLA:
          $ref: '#/components/schemas/VMSla'
        applicationSize:
          description: The amount of data being protected for the VM client(in bytes)
          format: int32
          type: integer
        company:
          $ref: '#/components/schemas/IdName'
        host:
          description: The host name for the computer where the source virtual machine or instance resides.
          type: string
        hypervisor:
          $ref: '#/components/schemas/IdName'
        latestRecoveryPoint:
          description: The latest recovery time for the vm(in unix)
          format: int32
          type: integer
        oldestRecoveryPoint:
          description: The oldest recovery time for the vm(in unix)
          format: int32
          type: integer
        os:
          description: The operating system version for the VM or instance.
          type: string
        plan:
          $ref: '#/components/schemas/IdName'
        status:
          description: 'The status of the backup for the VM, instance, or  container.'
          enum:
            - PROTECTED
            - NOT_PROTECTED
            - PENDING
            - BACKED_UP_WITH_ERROR
            - DISCOVERED
          type: string
        vendor:
          $ref: '#/components/schemas/VSVendor'
        vmGroup:
          $ref: '#/components/schemas/IdName'
        vmSize:
          description: The total space allocated(in bytes) for the virtual machine.
          format: int32
          type: integer
      title: VMDetailSummary
      type: object
    VMDisplayName:
      description: Prefix or Suffix appended to create display name for destination instance
      properties:
        prefix:
          description: A prefix string that will be appended to the source VM to create a display name for each destination VM
          type: string
        suffix:
          description: A suffix string that will be appended to the source VM to create a display name for each destination VM
          type: string
      title: VMDisplayName
      type: object
    VMExistingCredential:
      properties:
        credentialId:
          format: int32
          type: integer
        credentialName:
          type: string
      title: VMExistingCredential
      type: object
    VMGroupCommonProperties:
      properties:
        backupset:
          $ref: '#/components/schemas/IdName'
        dataBackupStoragePolicy:
          $ref: '#/components/schemas/IdName'
        hypervisor:
          $ref: '#/components/schemas/hypervisorvmGroupCommonProp'
        hypervisorType:
          $ref: '#/components/schemas/VSVendor'
        iDataAgent:
          $ref: '#/components/schemas/IdName'
        indexingInfo:
          $ref: '#/components/schemas/indexingInfo'
        instance:
          $ref: '#/components/schemas/IdName'
        isDeletedHypervisor:
          description: True if the hypervisor is deleted
          type: boolean
        isETCDSubclient:
          description: True if this is a ETCD Subclient
          type: boolean
        isHypervisorDeconfigured:
          description: true if the hypervisor has been deconfigured
          type: boolean
        isIndexingV2:
          description: True if Indexing version is 2
          type: boolean
        showFullBackupLevel:
          description: True if we need to show full backup level
          type: boolean
      type: object
    VMGroupSummary:
      description: ''
      properties:
        HypervisorType:
          $ref: '#/components/schemas/VSVendor'
        SnapBackupEnabled:
          default: false
          description: ' true if snap backup enabled'
          type: boolean
        company:
          $ref: '#/components/schemas/companyInfo'
        hypervisor:
          $ref: '#/components/schemas/IdNameDisplayName'
        id:
          format: int32
          type: integer
        indexingStatus:
          $ref: '#/components/schemas/IndexingStatusType'
        instance:
          $ref: '#/components/schemas/IdName'
        isDefaultVMGroup:
          default: false
          description: True if subclient is default subclient
          type: boolean
        lastBackup:
          $ref: '#/components/schemas/LastBackupJobInfo'
        name:
          nullable: true
          type: string
        plan:
          $ref: '#/components/schemas/PlanIdNameType'
        replicationGroup:
          $ref: '#/components/schemas/IdName'
        status:
          $ref: '#/components/schemas/VMSLASTATUS'
        storagePolicyRetentionExtension:
          default: false
          description: True if extend storage policy Retention was set in VMGroup for deleted files
          type: boolean
        tags:
          items:
            $ref: '#/components/schemas/IdNameValue'
          type: array
        vmGroup:
          $ref: '#/components/schemas/IdName'
        vmLevelFileIndexingStatus:
          $ref: '#/components/schemas/VMLevelFileIndexingStatusType'
      title: ''
      type: object
    VMGuestCredentials:
      properties:
        password:
          type: string
        userName:
          type: string
      title: VMGuestCredentials
      type: object
    VMHypervisorSecurityProp:
      properties:
        associatedUserGroups:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        clientOwners:
          description: Client owners for the Hypervisor
          type: string
      type: object
    VMLevelFileIndexingStatusType:
      description: Type of vm level file indexing status.
      enum:
        - DISABLED_FOR_ALL
        - ENABLED_FOR_ALL
        - PARTIALLY_ENABLED
      type: string
    VMPasskey:
      properties:
        authType:
          description: The authentication type set for browse and restore
          enum:
            - USE_LOGIN
            - USE_PASSKEY
          type: string
        enableAuthorizeForRestore:
          description: To tell if user is authorized for restore
          type: boolean
        expirationTime:
          description: 'The duration(in unix time) for which a user can continue browsing and restoring backup data without being prompted to enter the passkey, again.'
          format: int32
          type: integer
        passKeyRequiredForRestore:
          description: To tell if passkey is required for browse and restore
          type: boolean
      title: VMPasskey
      type: object
    VMSLASTATUS:
      enum:
        - ALL
        - PROTECTED
        - NOT_PROTECTED
        - PENDING
        - BACKED_UP_WITH_ERROR
        - DISCOVERED
      format: ''
      type: string
    VMSecurity:
      description: ''
      properties:
        associations:
          items:
            $ref: '#/components/schemas/VMSecurityAssoc'
          type: array
        owners:
          items:
            $ref: '#/components/schemas/SecurityOwnersAssoc'
          type: array
        permissions:
          items:
            $ref: '#/components/schemas/PermissionResp'
          type: array
      title: VMSecurity
      type: object
    VMSecurityAssoc:
      description: A list of users or user groups each having a specific set of roles that determine the kind of operations they can perform on the entity.
      properties:
        role:
          $ref: '#/components/schemas/IdName'
        useGroup:
          $ref: '#/components/schemas/IdNameCompany'
        user:
          $ref: '#/components/schemas/IdNameCompany'
      title: ''
      type: object
    VMSla:
      properties:
        reason:
          description: The reason for the current SLA status of the VM client
          type: string
        status:
          $ref: '#/components/schemas/SLAStatus'
      title: VMSLA
      type: object
    VMwareReplicationGroup:
      allOf:
        - $ref: '#/components/schemas/ReplicationGroup'
        - properties:
            advancedOption:
              $ref: '#/components/schemas/ReplicationGroupAdvOptionsVMWare'
            replicationConfiguration:
              description: replication configuration for VMware replication group
              items:
                $ref: '#/components/schemas/ReplicationConfigurationVMware'
              type: array
            vendor:
              description: Vendor type of this replication group. Values in enum are case sensitive
              enum:
                - VMware
              type: string
          required:
            - vendor
          type: object
      description: Replication group details pertaining to VMware
      title: VMwareReplicationGroup
    VSVendor:
      enum:
        - NONE
        - VMW
        - MICROSOFT
        - XEN_SERVER
        - AMAZON
        - AZURE
        - REDHAT
        - AZURE_V2
        - SCVMM
        - NUTANIX
        - ORACLE_VM
        - DOCKER
        - OPENSTACK
        - ORACLE_CLOUD
        - FUSIONCOMPUTE
        - VCLOUD
        - GOOGLE_CLOUD
        - AZURE_STACK
        - ALIBABA_CLOUD
        - ORACLE_CLOUD_INFRASTRUCTURE
        - KUBERNETES
        - REDHAT_OPENSHIFT
        - PROXMOX
      format: ''
      type: string
    ValidationScheduleObject:
      description: Schedule for application validation for VM Group
      properties:
        description:
          description: Description for validation schedule
          type: string
        id:
          format: int32
          type: integer
        isScheduleEnabled:
          description: True if application validation schedule is enabled
          type: boolean
        taskId:
          description: Job Id for the application validation task. 0 if schedule is disabled
          format: int32
          type: integer
      title: ValidationScheduleObject
      type: object
    ValidationScript:
      properties:
        UNCCredentials:
          $ref: '#/components/schemas/UserNamePassword'
        UNCSavedCredentials:
          $ref: '#/components/schemas/IdName'
        arguments:
          description: Arguments for the script
          type: string
        isDisabled:
          default: false
          description: Is the script disabled
          type: boolean
        isLocal:
          description: True if the script is local
          type: boolean
        path:
          description: Path for the validation script
          type: string
      title: ValidationScript
      type: object
    VaultTrackerPolicies:
      allOf:
        - $ref: '#/components/schemas/IdName'
        - properties:
            destination:
              $ref: '#/components/schemas/destinationLocation'
            online:
              description: Tells if VaultTrackerPolicies is enabled or not.
              type: string
          type: object
    VendorCapabilities:
      properties:
        enableArrayDeviceGroup:
          description: Set to true if the array belongs to a device group
          type: boolean
        enableArrayNameChange:
          description: Set to true if name of the array can be changed
          type: boolean
        enableArrayType:
          description: Set to true if array type is enabled for the NetApp and AWS to establish subtypes of vendors
          type: boolean
        enableControlHost:
          description: Set to true if control host is enabled for the vendor
          type: boolean
        enableHostDeviceGroup:
          description: Set to true if the host belongs to a device group
          type: boolean
        enableNetAppCloudAccount:
          description: Set to true if NetApp Cloud Account is enabled for the vendor
          type: boolean
        enablePassword:
          description: Set to true if password is enabled for the vendor
          type: boolean
        enableUserName:
          description: Set to true if username is enabled for the vendor
          type: boolean
      title: VendorCapabilities
      type: object
    VendorDetails:
      description: Details of the vendor being selected
      properties:
        controlHost:
          description: Host Name of the array
          type: string
        credential:
          $ref: '#/components/schemas/ArrayUserPassword'
        description:
          description: Description of the array
          type: string
        name:
          description: Name of the array
          type: string
        savedCredential:
          $ref: '#/components/schemas/IdName'
        snapVendor:
          type: string
      required:
        - snapVendor
        - name
      title: VendorDetails
      type: object
    VendorResp:
      properties:
        capabilities:
          $ref: '#/components/schemas/VendorCapabilities'
        cloudVendorId:
          format: int32
          type: integer
        label:
          $ref: '#/components/schemas/ArrayLabel'
        snapVendor:
          $ref: '#/components/schemas/IdName'
      title: VendorResp
      type: object
    Vendors:
      description: The cloud vendor for the instance.
      enum:
        - NOT_APPLICABLE
        - AMAZON
        - MICROSOFT_AZURE
        - GOOGLE_CLOUD
        - ALIBABA_CLOUD
      type: string
    VirtualLabOptions:
      properties:
        configureIsolatedNetwork:
          description: To use isolated network for the virtual lab VM
          type: boolean
        externalNetwork:
          description: To use virtual lab VM to connect to the existing network
          type: string
        gatewayNetwork:
          description: Primary network associated on the Provisioning Gateway VM that has production network access
          type: string
        gatewayTemplate:
          description: Gateway template provision VMs to communicate to VMs outside the virtual lab
          type: string
      title: VirtualLabOptions
      type: object
    VirtualMachineDetails:
      properties:
        activityControl:
          items:
            $ref: '#/components/schemas/ActivityControlOptionsProp'
          type: array
        applicationValidationResults:
          $ref: '#/components/schemas/VMApplicationValidationResults'
        displayName:
          description: The display name of the virtual machine
          type: string
        passkey:
          $ref: '#/components/schemas/VMPasskey'
        security:
          $ref: '#/components/schemas/VMSecurity'
        summary:
          $ref: '#/components/schemas/VMDetailSummary'
        tags:
          items:
            $ref: '#/components/schemas/IdNameValue'
          type: array
      title: VirtualMachineDetails
      type: object
    VirtualMachineListResp:
      properties:
        virtualMachines:
          items:
            $ref: '#/components/schemas/VirtualMachineSummary'
          type: array
        virtualMachinesCount:
          format: int32
          type: integer
      type: object
    VirtualMachineSummary:
      description: Gives the summary of the virtual machines.
      properties:
        SLA:
          $ref: '#/components/schemas/VMSla'
        UUID:
          description: The globally unique identifier for the VM client.
          type: string
        applicationSize:
          description: The amount of data being protected for the VM client(in bytes)
          format: int32
          type: integer
        commcell:
          $ref: '#/components/schemas/CommcellInfo'
        commcellName:
          description: Name of the commcell the VM belongs
          type: string
        company:
          $ref: '#/components/schemas/IdName'
        host:
          description: The host name for the computer where the source virtual machine or instance resides.
          type: string
        hypervisor:
          $ref: '#/components/schemas/IdName'
        lastBackup:
          $ref: '#/components/schemas/lastBackup'
        name:
          description: The display name of the VM.
          type: string
        os:
          description: The operating system version for the VM or instance.
          type: string
        plan:
          $ref: '#/components/schemas/PlanIdNameType'
        status:
          description: 'The status of the backup for the VM, instance, or  container.'
          enum:
            - PROTECTED
            - NOT_PROTECTED
            - PENDING
            - BACKED_UP_WITH_ERROR
            - DISCOVERED
          type: string
        tags:
          items:
            $ref: '#/components/schemas/IdNameValue'
          type: array
        vendor:
          description: The hypervisor where the VM is located.
          enum:
            - NONE
            - VMW
            - MICROSOFT
            - XEN_SERVER
            - AMAZON
            - AZURE
            - REDHAT
            - AZURE_V2
            - SCVMM
            - NUTANIX
            - ORACLE_VM
            - DOCKER
            - OPENSTACK
            - ORACLE_CLOUD
            - FUSIONCOMPUTE
            - VCLOUD
            - GOOGLE_CLOUD
            - AZURE_STACK
            - ALIBABA_CLOUD
            - ORACLE_CLOUD_INFRASTRUCTURE
            - KUBERNETES
            - REDHAT_OPENSHIFT
            - PROXMOX
          type: string
        vmGroup:
          $ref: '#/components/schemas/IdName'
        vmSize:
          description: The total space allocated(in bytes) for the virtual machine.
          format: int32
          type: integer
      type: object
    VirtualMachinecontent:
      properties:
        GUID:
          description: GUID of the VM to be added as content
          type: string
        existingCredential:
          $ref: '#/components/schemas/VMExistingCredential'
        guestCredentialAssocId:
          description: Credential association ID given to link entity with credential id.
          format: int32
          type: integer
        guestCredentials:
          $ref: '#/components/schemas/VMGuestCredentials'
        name:
          description: name of the VM to be added as content
          type: string
        type:
          $ref: '#/components/schemas/VMContentType'
      title: VirtualMachinecontent
      type: object
    VirtualServerGroupAssociationDetails:
      properties:
        rules:
          $ref: '#/components/schemas/RuleGroupContent'
          type: object
        virtualInstance:
          $ref: '#/components/schemas/VSVendor'
        virtualServers:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
      type: object
    VolumeSnap:
      description: An object containing smVolumeId of Snaps and the flags set
      properties:
        flags:
          default: 0
          description: Volume flags to be set for snap Operations.
          format: int32
          type: integer
        smVolumeId:
          description: smVolumeId of the snaps you want to mount/unmount/delete
          format: int32
          type: integer
      title: VolumeSnap
      type: object
    WasabiHot:
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Wasabi Hot Cloud Storage
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
          type: object
        - $ref: '#/components/schemas/DedupeStorageList'
      description: ''
      title: Wasabi Hot Cloud Storage
    WasabiHotBucket:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Wasabi Hot Cloud Storage
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
      description: ''
      title: Wasabi Hot Cloud Storage
    WasabiHotBucketContent:
      allOf:
        - properties:
            bucket:
              description: Name of bucket
              type: string
            cloudType:
              description: Name of cloud vendor
              enum:
                - Wasabi Hot Cloud Storage
              type: string
            credentials:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              type: string
          required:
            - cloudType
          type: object
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
      description: ''
      title: Wasabi Hot Cloud Storage
    WeekOfMonth:
      enum:
        - FIRST
        - SECOND
        - THIRD
        - FOURTH
        - LAST
        - EVERY
      format: ''
      type: string
    WeekOfTheMonth:
      description: Specific week of a month
      enum:
        - FIRST
        - SECOND
        - THIRD
        - FOURTH
        - LAST
      format: ''
      type: string
    WorkloadEntity:
      description: Core object for workload entity
      properties:
        apptype:
          $ref: '#/components/schemas/IdName'
        backupset:
          $ref: '#/components/schemas/IdName'
        client:
          $ref: '#/components/schemas/IdName'
        instance:
          $ref: '#/components/schemas/IdName'
        subclient:
          $ref: '#/components/schemas/IdName'
      title: WorkloadEntity
      type: object
    WorkloadGroup:
      description: Type of workload Group
      enum:
        - FILE_SERVER
        - LAPTOP
        - HYPERVISOR
      title: WorkloadGroup
      type: string
    Zone:
      properties:
        primaryZoneName:
          description: Name of Primary Zone for the VM to deploy
          type: string
        secondaryZoneName:
          description: Name of Secondary Zone for the VM to deploy
          type: string
      title: Zone
      type: object
    accessNodeInfo:
      properties:
        GUID:
          description: client GUID of the Access
          type: string
        displayName:
          nullable: true
          type: string
        hostName:
          description: client Host Name of the Access Node
          type: string
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        type:
          description: 'Type of access node , Ex: 3 - access Node , 28 - Access Node Groups'
          format: int32
          type: integer
      title: accessNodeInfo
      type: object
    accessNodeListModel:
      properties:
        accessNode:
          items:
            $ref: '#/components/schemas/accessNodeModel'
          type: array
        accessNodeMessage:
          nullable: true
          type: string
        resourcePoolName:
          nullable: true
          type: string
      title: accessNodeListModel
      type: object
    accessNodeModel:
      properties:
        displayName:
          description: Display name of the access node
          nullable: true
          type: string
        id:
          format: int32
          type: integer
          x-terraform-set-key: true
        name:
          nullable: true
          type: string
        type:
          description: 'Type of access node , Ex: 3 - access Node , 28 - Access Node Groups'
          format: int32
          type: integer
      title: accessNodeModel
      type: object
    accessNodesList:
      properties:
        accesNodes:
          items:
            $ref: '#/components/schemas/accessNodeInfo'
          type: array
      title: accessNodesList
      type: object
    activityControl:
      properties:
        dataAging:
          description: Data Aging is enabled or not
          type: boolean
        dataRestore:
          description: Data Restore is enabled or not
          type: boolean
        databackup:
          description: Data Backup is enabled or not
          type: boolean
      type: object
    appValidationScript:
      description: Custom validation script to be used during VM backup validation
      properties:
        unix:
          $ref: '#/components/schemas/ValidationScript'
        windows:
          $ref: '#/components/schemas/ValidationScript'
      title: appValidationScript
      type: object
    backupActivityControlOptionsProp:
      properties:
        delayTime:
          description: Delayed by n Hrs
          type: string
        enableAfterDelay:
          description: True if the activity will be enabled after a delay time interval
          type: boolean
        timeZone:
          $ref: '#/components/schemas/IdName'
      type: object
    backupCopyInterface:
      enum:
        - FILE_SYSTEM
        - RMAN
        - VOLUME_COPY
      type: string
    backupOperationsList:
      properties:
        full:
          description: Full job is selected or not for blackout window
          nullable: true
          type: boolean
        incrementalAndDifferential:
          description: Incremental and Differential job is selected or not for blackout window
          nullable: true
          type: boolean
        syntheticFull:
          description: Synthetic Full job is selected or not for blackout window
          nullable: true
          type: boolean
        transactionLog:
          description: Transaction Log job is selected or not for blackout window
          nullable: true
          type: boolean
      type: object
    blackoutWindowDetails:
      properties:
        backupOperations:
          $ref: '#/components/schemas/backupOperationsList'
        betweenDates:
          description: 'Between these dates, do not run job'
          type: boolean
        doNotRunJob:
          items:
            $ref: '#/components/schemas/doNotRunJobDetails'
          type: array
        doNotSubmitJob:
          description: To skip a scheduled job
          type: boolean
        endDate:
          description: 'End date in seconds, during which the operation will not run'
          format: int32
          type: integer
        name:
          description: Name of the blackout window operation rule
          type: string
        startDate:
          description: 'Start date in seconds, during which the operation will not run'
          format: int32
          type: integer
      type: object
    cloudDestinationOptions:
      properties:
        availabilityZone:
          description: Availability zone name for the destination instance
          type: string
        encryptionKeyName:
          description: Encryption key name needed to configure the destination VM
          type: string
        instanceTypes:
          items:
            type: string
          type: array
        keyPair:
          description: Name of key pair that associates with the VM for authentication
          type: string
        machineType:
          $ref: '#/components/schemas/IdName'
        publicIP:
          description: 'If true, public IP address are configured for destination VMs'
          type: boolean
        region:
          description: Region of destination
          type: string
        restoreAsManagedVM:
          description: 'If true, restore creates the destination VM as a managed VM in Azure'
          type: boolean
        testDiskType:
          description: Disk / Volume type for test failover VM
          type: string
        vmInstanceType:
          description: Instance type that provides the available cpu cores and memory to the machine
          type: string
        volumeType:
          description: Volume type of destination VM
          type: string
      title: cloudDestinationOptions
      type: object
    companyInfo:
      properties:
        id:
          description: Id of company
          format: int32
          type: integer
        multiCommcellId:
          description: Multi Commcell Id of company
          format: int32
          type: integer
        name:
          description: Name of company
          type: string
      title: companyInfo
      type: object
    dataStoreentityResponse:
      description: Inventory response of hypervisor for datastore entity
      properties:
        dataStoreLocation:
          description: location  of the datastore.
          type: string
        dataStoreName:
          description: name  of the datastore.
          type: string
        dataStoreType:
          description: type  of the datastore.
          type: string
      type: object
    destinationLocation:
      properties:
        library:
          $ref: '#/components/schemas/library'
        location:
          $ref: '#/components/schemas/location'
        shelf:
          $ref: '#/components/schemas/shelfDetails'
      type: object
    doNotRunJobDetails:
      properties:
        dayTimeEnd:
          description: 'day time end in seconds, during which the operation will not run.'
          format: int32
          type: integer
        dayTimeStart:
          description: 'day time start in seconds, during which the operation will not run.'
          format: int32
          type: integer
        ofWeeks:
          items:
            $ref: '#/components/schemas/WeekOfMonth'
          type: array
        onDays:
          items:
            $ref: '#/components/schemas/DayOfTheWeek'
          type: array
      type: object
    externalUserGroup:
      description: External User Group Entity
      properties:
        id:
          description: User Group Id
          format: int32
          type: integer
        name:
          description: External Group Name
          type: string
        providerId:
          description: Provider id
          format: int32
          type: integer
        providerName:
          description: Provider Name
          type: string
      type: object
    fileExceptionsDetail:
      properties:
        unixFilters:
          items:
            type: string
          type: array
        useGroupFilters:
          description: To apply the filters to all the subclients in the server group.
          type: boolean
        windowsFilters:
          items:
            type: string
          type: array
      type: object
    firewallClientType:
      description: The type of clients associated with the topology.
      enum:
        - SERVER
        - LAPTOP
      title: firewallClientType
      type: string
    firewallTopologyTypes:
      description: The type of topology of client groups (and sometimes network gateway) for this instance.
      enum:
        - NETWORK_GATEWAY
        - ONE_WAY
        - TWO_WAY
        - CASCADING_GATEWAYS
        - ONEWAY_FORWARDING
      title: firewallTopologyTypes
      type: string
    generalInfoServerGroup:
      properties:
        autoDiscover:
          description: 'if enabled then after every 24 hours, according to each server''s individual Commvault service schedule, the software discovers the applications on each server and installs a Commvault software package for each application that is found.'
          type: boolean
        enableDataEncryption:
          description: Allow owners to enable data encryption
          type: boolean
        region:
          $ref: '#/components/schemas/IdName'
      type: object
    guestCredentialInfo:
      properties:
        credentials:
          $ref: '#/components/schemas/UserNamePassword'
        savedCredentials:
          $ref: '#/components/schemas/IdName'
          x-terraform-id: id
      title: guestCredentialInfo
      type: object
    hypervisorAccountDetails:
      properties:
        hostName:
          description: Host Name
          type: string
      title: hypervisorAccountDetails
      type: object
    hypervisorCommonProps:
      properties:
        company:
          $ref: '#/components/schemas/IdName'
        isDeconfigured:
          description: True if the hypervisor is deconfigured
          type: boolean
        isIndexingV2:
          description: True if Indexing version is 2
          type: boolean
        isRegionBasedBackup:
          description: True if region based backup is enabled
          type: boolean
        isSnapBackupEnabled:
          description: True if the hypervisor is snap backup enabled
          type: boolean
        retirePhase:
          $ref: '#/components/schemas/RetireClientPhase'
      title: hypervisorCommonProps
      type: object
    hypervisorCustomAttribute:
      properties:
        type:
          description: client custom attribute type . Ex- 3 - For client 8- For clientGroup
          format: int32
          type: integer
        value:
          description: client/Client Group custom attribute value
          nullable: true
          type: string
      type: object
    hypervisorGeneralProperties:
      properties:
        vendor:
          $ref: '#/components/schemas/VSVendor'
        version:
          description: Hypervisor OS version
          type: string
        vmBackupInfo:
          $ref: '#/components/schemas/vmBackupInfo'
      title: hypervisorGeneralProperties
      type: object
    hypervisorMonitoringPolicy:
      properties:
        id:
          description: Metrics Moitoring PolicyId
          format: int32
          type: integer
        isEnabled:
          description: True if Metrics Monioring policy is enabled
          type: boolean
        name:
          description: Metrics Moitoring Policy Name
          nullable: true
          type: string
      type: object
    hypervisorSettings:
      properties:
        applicationCredentials:
          $ref: '#/components/schemas/IdName'
        customAttributes:
          $ref: '#/components/schemas/hypervisorCustomAttribute'
        guestCredentials:
          $ref: '#/components/schemas/IdName'
        metricsMonitoringPolicy:
          $ref: '#/components/schemas/hypervisorMonitoringPolicy'
        mountAccessNode:
          $ref: '#/components/schemas/IdName'
        regionInfo:
          $ref: '#/components/schemas/RegionInfo'
        timeZone:
          $ref: '#/components/schemas/IdName'
      title: hypervisorSettings
      type: object
    hypervisorvmGroupCommonProp:
      description: Common properties of hypervisor in  vmgroup
      properties:
        activityControl:
          $ref: '#/components/schemas/ActivityControlOptions'
        id:
          format: int32
          type: integer
        name:
          description: Name of the hypervisor client
          type: string
      title: hypervisorvmGroupCommonProp
      type: object
    indexingInfo:
      properties:
        message:
          description: Indexing Message
          type: string
        status:
          $ref: '#/components/schemas/IndexingStatusType'
      title: indexingInfo
      type: object
    lastBackup:
      description: last backup job details for the client
      properties:
        failureReason:
          description: Failure reason for the last backup job
          type: string
        jobId:
          description: Job id of the last backup job
          format: int32
          type: integer
        lastSuccessfulBackupTime:
          description: UNIX time for the last successful backup job run
          format: int32
          type: integer
        status:
          $ref: '#/components/schemas/JobStatus'
        time:
          description: UNIX time for the last backup job run
          format: int32
          type: integer
      title: lastBackup
      type: object
    library:
      allOf:
        - $ref: '#/components/schemas/IdName'
        - properties:
            type:
              description: library type.
              format: int32
              type: integer
          type: object
    location:
      allOf:
        - $ref: '#/components/schemas/IdName'
        - properties:
            type:
              description: location type.
              format: int32
              type: integer
          type: object
    matchesWithEnum:
      enum:
        - IS_TRUE
        - IS_FALSE
        - CONTAINS
        - DOES_NOT_CONTAIN
        - IS
        - IS_NOT
        - STARTS_WITH
        - ENDS_WITH
        - EQUAL_TO
        - NOT_EQUAL_TO
        - GREATER_THAN
        - LESS_THAN
        - GREATER_THAN_OR_EQUAL_TO
        - LESS_THAN_OR_EQUAL_TO
        - BETWEEN
        - NOT_IN
        - ANY_IN_SELECTION
        - NOT_IN_SELECTION
        - IN
        - NOT_BETWEEN
      format: ''
      type: string
    meditechPropResp:
      properties:
        MBFtimeout:
          default: 60
          description: MBF timeout (in seconds)
          format: int32
          type: integer
        listenerIP:
          description: Meditech Listener IP of FQDN name
          type: string
        listenerPort:
          description: Meditech Listener Port
          format: int32
          type: integer
        systemName:
          description: Meditech system name
          type: string
        userAccount:
          $ref: '#/components/schemas/UserNamePassword'
      title: meditechPropResp
      type: object
    resourceTag:
      description: represents tag name and tag value of a resource
      properties:
        name:
          description: represents name of the tag
          type: string
        value:
          description: represents value of the tag
          type: string
      title: resourceTag
      type: object
    resourcepoolentityResponse:
      description: Inventory response of hypervisor for resource pool entity
      properties:
        name:
          description: name  of the resource pool.
          type: string
        resourcePoolPath:
          description: path  of the resource pool.
          type: string
        type:
          description: type  of the resource pool.
          type: string
      type: object
    serverDetails:
      properties:
        agent:
          items:
            $ref: '#/components/schemas/IdName'
          type: array
        id:
          description: 'Id of server, which is part of server group.'
          format: int32
          type: integer
        name:
          description: 'Name of server, which is part of server group.'
          type: string
        os:
          description: Operating system of server.
          type: string
        updateStatus:
          description: update status of server.
          type: string
        version:
          description: Service pack version of server.
          type: string
      type: object
    serverGroupList:
      properties:
        association:
          $ref: '#/components/schemas/ServerGroupAssociation'
        commcell:
          $ref: '#/components/schemas/CommcellInfo'
        company:
          $ref: '#/components/schemas/IdName'
        id:
          description: Id of server group.
          format: int32
          type: integer
        isCompanySmartClientGroup:
          description: 'If true, server group is a company smart client group.'
          type: boolean
        isSyncInProgress:
          description: 'If true, server group is synchronizing associated servers.'
          type: boolean
        name:
          description: Name of server group.
          type: string
        tags:
          description: Array of all the tags associated with server group
          items:
            $ref: '#/components/schemas/IdNameValue'
          type: array
      type: object
    shelfDetails:
      allOf:
        - $ref: '#/components/schemas/IdName'
        - properties:
            type:
              description: shelf type.
              format: int32
              type: integer
          type: object
    snapCopyInfo:
      properties:
        backupCopyInterface:
          $ref: '#/components/schemas/backupCopyInterface'
        enableHardwareSnapshot:
          default: false
          description: True if hardware snapshot is enabled
          type: boolean
        isIndependentDisksEnabled:
          description: True if independent disk option is enabled
          type: boolean
        isRawDeviceMapsEnabled:
          description: True if raw device maps option is enabled
          type: boolean
        snapEngine:
          $ref: '#/components/schemas/IdName'
        snapMountESXHost:
          description: Name of ESX Host
          type: string
        snapMountProxy:
          $ref: '#/components/schemas/IdName'
        useSeparateProxyForSnapToTape:
          description: True if separate proxy client is used for snap to tape
          type: boolean
        vmApplicationUserName:
          description: Virtual machine application user name
          type: string
      type: object
    transportMode:
      default: AUTO
      description: transport mode based on environment. Values are case sensitive
      enum:
        - AUTO
        - SAN
        - HOT_ADD
        - NAS
        - NBD_SSL
        - NBD
      type: string
    userCredentials:
      properties:
        password:
          type: string
        userName:
          type: string
      required:
        - userName
        - password
      title: UserCredentials
      type: object
    vmAppValidation:
      properties:
        copy:
          $ref: '#/components/schemas/PlanSourceCopy'
        customValidationScript:
          $ref: '#/components/schemas/appValidationScript'
        guestCredentials:
          $ref: '#/components/schemas/guestCredentialInfo'
        keepValidatedVMsRunning:
          description: If true then validated VMs will be available until expiration time set on the recovery target
          type: boolean
        maximumNoOfThreads:
          description: Number of backup Validation Threads
          format: int32
          type: integer
        recoveryTarget:
          $ref: '#/components/schemas/IdName'
        schedule:
          $ref: '#/components/schemas/ValidationScheduleObject'
        useSourceVmESXToMount:
          description: Use Source VM ESX To Mount
          type: boolean
        validateVMBackups:
          description: True if VM Backup validation is enabled
          type: boolean
      title: vmAppValidation
      type: object
    vmBackupInfo:
      properties:
        vmBackedUpWithErrorCount:
          description: VM Backed up with error count
          format: int32
          type: integer
        vmNeverBackedUpCount:
          description: vm never Backed up count
          format: int32
          type: integer
        vmNotProtectedCount:
          description: VM Missed to protect count
          format: int32
          type: integer
        vmPendingCount:
          description: VMs pending for Backup
          format: int32
          type: integer
        vmProtectedCount:
          description: Protected vm Count
          format: int32
          type: integer
        vmTotalCount:
          description: ' Total vm Count'
          format: int32
          type: integer
      type: object
    vmBackupType:
      enum:
        - APPLICATION_AWARE
        - FILE_SYSTEM_AND_APPLICATION_CONSISTENT
        - CRASH_CONSISTENT
        - APP_BASED_BACKUP
        - INHERITED
      type: string
    vmContent:
      properties:
        overwrite:
          default: false
          description: 'True if content in vmgroup has to be overwritten, by default it will append the content'
          type: boolean
        ruleGroups:
          items:
            $ref: '#/components/schemas/RuleGroupContent'
          type: array
        virtualMachines:
          items:
            $ref: '#/components/schemas/VirtualMachinecontent'
          type: array
      title: RuleContent
      type: object
    vmDiskFilter:
      properties:
        condition:
          $ref: '#/components/schemas/RuleOperationType'
        filterType:
          $ref: '#/components/schemas/vmDiskFilterType'
        name:
          description: The string to be filtered
          type: string
        overwrite:
          default: false
          description: 'True if disk filter in vmgroup has to be overwritten, by default it will append the content'
          type: boolean
        value:
          description: 'The value string to be filtered, in case of disk tag , value of tag to be filtered'
          type: string
        vmGuid:
          description: 'VM Guid of the Virtual Machine whose disk has to be filtered . This is optional. if not given, all disks of name and type from all Vms added in content will be filtered'
          type: string
        vmName:
          description: 'VM Name of the Virtual Machine whose disk has to be filtered . This is optional. if not given, all disks of name and type from all Vms added in content will be filtered'
          type: string
      title: vmDiskFilter
      type: object
    vmDiskFilterProp:
      properties:
        overwrite:
          default: false
          description: 'True if content in vmgroup has to be overwritten, by default it will append the content'
          type: boolean
        rules:
          items:
            $ref: '#/components/schemas/vmDiskFilter'
          type: array
      title: vmDiskFilterProp
      type: object
    vmDiskFilterType:
      enum:
        - NONE
        - DISK_PATH
        - DISK_PATTERN
        - DISK_VIRTUAL_DEVICE_NODE
        - DISK_DATASTORE
        - DISK_LABEL
        - DISK_TYPE
        - DISK_ADDRESS
        - CONTAINER_PATTERN
        - DISK_TAG
      format: ''
      type: string
    vmEntitySummary:
      description: Summary of VMEntity in Virtual Machine summary
      properties:
        backupset:
          $ref: '#/components/schemas/IdName'
        instance:
          $ref: '#/components/schemas/IdName'
        vmGroup:
          $ref: '#/components/schemas/IdName'
      title: vmEntitySummary
      type: object
    vmFilter:
      properties:
        GUID:
          description: GUID of the VM to be filtered
          type: string
        customAttributeName:
          description: Attribute name to check if filter type is VMCustomAttribute
          type: string
        description:
          description: Description for filter rule given by user
          type: string
        name:
          description: The string to be filtered against
          type: string
        op:
          $ref: '#/components/schemas/RuleOperationType'
        overwrite:
          default: false
          description: 'True if content in vmgroup has to be overwritten, by default it will append the content'
          type: boolean
        type:
          $ref: '#/components/schemas/VMContentType'
      title: vmFiltersummary
      type: object
    vmGroupDetailsSummary:
      properties:
        backupActivityStatus:
          description: Current backup activity status
          type: string
        hypervisorName:
          type: string
        isDefaultVMGroup:
          default: false
          description: True if subclient is default subclient
          type: boolean
        lastBackupSize:
          description: Last Backup Job Size
          format: int64
          type: integer
        lastBackupTime:
          description: Last Backup time of the VMGroup
          format: int32
          type: integer
        nextBackupTime:
          description: Next Backup Job start time
          format: int32
          type: integer
        plan:
          $ref: '#/components/schemas/PlanIdNameType'
        region:
          $ref: '#/components/schemas/RegionInfo'
        replicationGroup:
          $ref: '#/components/schemas/IdName'
        timeZone:
          $ref: '#/components/schemas/IdName'
      title: vmGroupDetailsSummary
      type: object
    vmGroupPreviewReq:
      properties:
        content:
          $ref: '#/components/schemas/vmContent'
        diskFilters:
          $ref: '#/components/schemas/vmDiskFilterProp'
        filters:
          $ref: '#/components/schemas/vmContent'
      title: vmGroupPreviewReq
      type: object
    vmGroupPreviewResp:
      properties:
        ProtectedVMCount:
          format: int32
          type: integer
        managementVersion:
          description: 'management Version of the Hypervisor like vcenter version , Hyperv version'
          type: string
        vmGroup:
          $ref: '#/components/schemas/IdName'
        vmList:
          $ref: '#/components/schemas/vmPreviewInfo'
      title: vmGroupPreviewResponse
      type: object
    vmGroupSettings:
      properties:
        allowEmptySubclient:
          description: True if empty subclient is allowed
          type: boolean
        autoDetectVMOwner:
          description: True if auto detect VM Owner enabled
          type: boolean
        collectFileDetailsFromSnapshotCopy:
          default: false
          description: True if metadata collection is enabled for intellisnap jobs. Only applicable for Indexing v1
          type: boolean
        collectFileDetailsforGranularRecovery:
          default: false
          description: True if metadata collection is enabled. Only applicable for Indexing v1
          type: boolean
        crossAccount:
          $ref: '#/components/schemas/AmazonCrossAccount'
        customSnapshotResourceGroup:
          description: Custom snapshot resource group name for Azure
          type: string
        customSnapshotTags:
          description: represents custom tags to be set on snapshots
          items:
            $ref: '#/components/schemas/resourceTag'
          type: array
        datastoreFreespaceCheck:
          default: true
          description: True if Datastore Free space check is enabled
          type: boolean
        datastoreFreespaceRequired:
          default: 10
          description: precentage of datastore free space check value
          format: int32
          type: integer
        guestCredentials:
          $ref: '#/components/schemas/guestCredentialInfo'
        isApplicationAware:
          description: Is the VM App Aware
          type: boolean
        isVMGroupDiskFiltersIncluded:
          description: Is VM group disk filters included in VM instance disk filters
          type: boolean
        jobStartTime:
          description: Start Time for the VM Group Job
          format: int32
          type: integer
        noOfReaders:
          default: 5
          description: Number of readers for backup
          format: int32
          type: integer
        regionalSnapshot:
          default: true
          description: True when snapshot storage location is regional
          type: boolean
        transportMode:
          $ref: '#/components/schemas/transportMode'
        useChangedBlockTrackingOnVM:
          default: true
          description: True if Changed Block Tracking is enabled
          type: boolean
        useVMCheckpointSetting:
          default: true
          description: True if use VM CheckPoint setting is enabled
          type: boolean
        vmBackupType:
          $ref: '#/components/schemas/vmBackupType'
      type: object
    vmLocation:
      properties:
        cluster:
          description: ESX-Cluster moref if cluster is selected for resource
          type: string
        dataCenterName:
          type: string
        datastore:
          description: If cluster is selected for storage then moref of datastore cluster else dataStoreName
          type: string
        host:
          description: If ESX-Host for resource the host moref or If ESX-Cluster then cluster moref and if resource pool is used for resource then first go for host moref then cluster moref
          type: string
        inventoryPath:
          description: 'Folder path where you can locate vm, empty if Datacenter is selected for location. Default is set to Datacenter'
          type: string
        resourcePool:
          description: Resource Pool moref if resource pool is selected for resource
          type: string
      required:
        - dataCenterName
        - host
        - datastore
      title: VMLocation
      type: object
    vmPreviewInfo:
      properties:
        GUID:
          description: GUID  of the VM
          type: string
        host:
          description: host of the VM
          type: string
        name:
          description: name  of the VM
          type: string
        poweredStatus:
          description: 'Power status of the VM from the hypervisor Eg- Powered on ,  Running if the VM is powered on . Values might differ based on hypervisor type'
          type: string
        toolStatus:
          description: if Installed then the corresponding tools version of the VM. VMWare - VMWare tools version Hyper-V - Integration services version Values might differ based on hypervisor type status would be not installed if tools is not installed.
          type: string
      title: vmPreviewInfo
      type: object
  securitySchemes:
    token:
      in: header
      name: Authtoken
      type: apiKey
paths:
  /V4/PlanIds:
    get:
      tags:
        - Plan Operations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDetails'
        '404':
          description: Requested Details not found
      description: Get All Plans as Name Id Pairs
      operationId: GetPlanIds
      summary: Get List of Plans
  /V4/Plan/Summary:
    get:
      tags:
        - Plan Operations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanSummaryListResp'
        '404':
          description: Requested Details not found
      operationId: GetPlanSummary
      description: Get Plan Summary
      summary: Get Plan Summary
  '/v4/Plan/Summary/{planId}':
    get:
      tags:
        - Plan Operations
      parameters:
        - name: planId
          in: path
          description: Id of the plan to get summary of
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SinglePlanSummary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: getPlanSummary
      description: Api to fetch summary of a plan.
      summary: Get Plan Details
  '/V4/Plan/BackupDestination/{backupDestinationId}/Jobs':
    parameters:
      - schema:
          type: integer
          format: int32
        name: backupDestinationId
        in: path
        required: true
        description: Id of the BackupDestination to fetch Job List.
    get:
      tags:
        - Plan Operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobsOnStorageResp'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetJobsOnBackupDestination
      parameters:
        - schema:
            type: string
            default: last24Hours
          in: query
          name: view
          description: 'Time period selection for which to fetch jobs. Accepted values [last24Hours, lastWeek, lastMonth, last3Months, custom]. When custom is selected Jobs are filtered based on values provided in other params.'
        - schema:
            type: string
            example: '2,3'
          in: query
          name: clients
          description: Comma separated Client Ids to filter the jobs based on clients associated
        - schema:
            type: integer
            format: int32
          in: query
          name: agedData
          description: 'Aged Jobs selection. Accepted values [ 0 to exclude aged jobs, 1 to show only aged jobs, 2 to include aged jobs].'
        - schema:
            type: integer
            format: int32
          in: query
          name: backupLvl
          description: 'Job backup type filter. Accepted values [1=Full, 2=Incremental, 4=Differential, 8=All, 64=Synthetic full].'
        - schema:
            type: integer
            format: int32
          in: query
          name: copyState
          description: 'Filter jobs by data status. Accepted values [0  = show all, 1  = show available, 4  = show to be copied, 8  = show not to be copied, 16 = show extended retained].'
        - schema:
            type: integer
            format: int64
          in: query
          name: startTime
          description: Start time of the time range.
        - schema:
            type: integer
            format: int64
          in: query
          name: endTime
          description: End time of the time range.
      description: Get the list of Jobs for selected backupDestinationId.
      summary: Get Jobs of BackupDestination
  '/V4/Plan/BackupDestination/{backupDestinationId}/Clients':
    parameters:
      - schema:
          type: integer
          format: int32
        name: backupDestinationId
        in: path
        required: true
        description: Id of the BackupDestination.
    get:
      tags:
        - Plan Operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientListForStorageResp'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetClientsForBackupDestination
      description: Get the list of clients associated with the BackupDestination.
      summary: Get Clients of Backup Destination
  /V4/Plan/Rule:
    get:
      summary: ' Api to fetch plan rules list.'
      tags:
        - PlanRules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanEntityRuleList'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: getPlanRules
      description: Api to fetch plan rules list.
    post:
      summary: Api to create plan rules
      tags:
        - PlanRules
      operationId: createPlanRule
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: 'Api to create plan rules. Request body will suggest plan against which rule need to be created and type of entities(workloads type, server groups, regions and all) that need to be referenced for applying that rule against a workload.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlanEntityRule'
        description: ''
    put:
      summary: Api to update existing plan rules
      tags:
        - PlanRules
      operationId: updatePlanRule
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: 'Api to update existing plan rules. Request body will suggest which rule need to be updated and type of entities(workloads type, server groups, regions and all) that need to be referenced for applying that rule against a workload.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlanEntityRule'
  '/V4/Plan/Rule/{ruleId}':
    get:
      summary: Api to fetch plan rules details.
      tags:
        - PlanRules
      operationId: getPlanRuleDetails
      parameters:
        - name: ruleId
          in: path
          description: Id of the rule to update in Plan
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanEntityRuleInfo'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Api to fetch plan rules details.
    delete:
      summary: Api to delete selected plan rule
      parameters:
        - name: ruleId
          in: path
          description: Id of the rule to update in Plan
          required: true
          schema:
            type: integer
            format: int32
      tags:
        - PlanRules
      operationId: deletePlanRule
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request(Rule not found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden(Access Denied)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error (in case of any error on Server while processing request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Api to delete selected plan rule
  /V4/Plan/Rule/Entities:
    get:
      summary: Get entities applicable for plan association
      tags:
        - PlanRules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanRuleApplicableEntitiesList'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetPlanRuleAssociatedEntities
      description: API to fetch list of entities that are applicable for plan association via plan assignment rules.
    put:
      summary: Process list of entities against plan rules.
      operationId: PutPlanRuleAssociatedEntities
      tags:
        - PlanRules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: API to send request to process plan rules against specific set of entities.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutePlanRules'
        description: Request body will consist of entities that are need to be evaluated against plan rules.
  /V4/Plan/Rule/Rank:
    put:
      tags:
        - PlanRules
      summary: API to update rank for multiple rules at a time.
      operationId: updatePlanRuleRank
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: API to update rank for multiple rules at a time.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlanEntityRuleRanks'
        description: ''
  /V4/Plan/Rule/Entities/Associate:
    put:
      summary: Internal Server Error in case of any failure
      tags:
        - PlanRules
      operationId: PutPlanRuleEntitiesAssociate
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error in case of any failure
      description: API to associate workloads to selected plan and plan rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociatePlanRuleEntityList'
        description: ''
  /V4/Plan/Rule/Entities/Include:
    put:
      summary: API to include workloads to be applicable for plan rule evaluation.
      tags:
        - PlanRules
      operationId: PutPlanRuleEntitiesInclude
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden in case of no access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error in case of any error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: API to include workloads to be applicable for plan rule evaluation.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncludeEntitiesForPlanRuleEvaluation'
  /V4/Plan/Rule/Entities/Exclude:
    put:
      summary: API to exclude workloads from plan rule evaluation framework
      tags:
        - PlanRules
      operationId: PutPlanRuleEntitiesExclude
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden in case of no access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error in case of any error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: API to exclude workloads from plan rule evaluation framework
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExcludeEntitiesFromPlanRuleEvaluation'
    get:
      summary: API to get excluded workloads from plan rule evaluation framework
      tags:
        - PlanRules
      operationId: GetPlanRuleEntitiesExclude
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanRuleExcludedEntitiesList'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: API to get excluded workloads from plan rule evaluation framework
  /V4/Plan/Rule/Settings:
    get:
      summary: API to fetch plan rule execution settings
      tags:
        - PlanRules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanRuleExecutionSettings'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetPlanRuleSettings
      description: API to fetch plan rule execution settings
    put:
      summary: API to set plan rule execution settings
      tags:
        - PlanRules
      operationId: PutPlanRuleSettings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error in case of wrong value being supplied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: API to set plan rule execution settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanRuleExecutionSettings'
  /V4/ServerPlan:
    post:
      x-terraform-resource: plan_v2
      tags:
        - ServerPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServerPlan'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanResp'
        '404':
          description: Requested Details not found
      operationId: CreateServerPlan
      description: Create a Server Plan
      summary: Create Server Plan
  '/V4/ServerPlan/{planId}':
    get:
      x-terraform-resource: plan_v2
      tags:
        - ServerPlan
      parameters:
        - name: planId
          x-terraform-id: true
          in: path
          description: Id of the plan to fetch details
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerPlan'
        '404':
          description: Requested Details not found
      operationId: GetPlanById
      description: 'Get Plan details '
      summary: Get Server Plan Details
    put:
      x-terraform-resource: plan_v2
      description: Used to modify an exsiting server plan
      tags:
        - ServerPlan
      parameters:
        - name: planId
          x-terraform-id: true
          in: path
          description: Id of the Plan to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServerPlan'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
      operationId: ModifyPlan
      summary: Update the server plan
    delete:
      x-terraform-resource: plan_v2
      description: Used to delete an existing server plan
      tags:
        - ServerPlan
      parameters:
        - name: planId
          x-terraform-id: true
          in: path
          description: Id of the plan to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeletePlan
      summary: Delete a Server Plan
  '/V4/ServerPlan/{planId}/BackupDestinations':
    get:
      tags:
        - ServerPlan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to retrieve backup destinations
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanBackupDestinations'
        '404':
          description: Requested Details not found
      operationId: GetBackupDestinations
      description: Get Backup Destinations for a Plan
      summary: Get Backup Destination of Server Plan
  '/V4/ServerPlan/{planId}/BackupContent':
    post:
      tags:
        - ServerPlan
      operationId: CreateServerPlanBackupContent
      description: API to create backup content on server plan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to modify
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServerPlanBackupContent'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServerPlanBackupContentResponse'
        '404':
          description: Requested Details not found
      summary: Create Server Plan Backup Content
  '/V4/ServerPlan/{planId}/RPO':
    parameters:
      - name: planId
        in: path
        description: Id of the Server Plan
        required: true
        schema:
          type: integer
          format: int32
    get:
      tags:
        - ServerPlan
      operationId: GetServerPlanRPO
      description: API to fetch schedules responsible for server plan RPO
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanSchedules'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      summary: Get Server Plan RPO
    post:
      tags:
        - ServerPlan
      operationId: CreateServerPlanRPO
      description: API to create RPO schedules on server plan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to modify
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServerPlanRPO'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServerPlanRPOResponse'
        '404':
          description: Requested Details not found
      summary: Create Server Plan RPO
    put:
      tags:
        - ServerPlan
      operationId: UpdateServerPlanRPO
      description: API to modify RPO schedules on server plan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerPlanUpdateRPO'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      summary: Update Server Plan RPO
  '/V4/ServerPlan/{planId}/BackupDestination':
    post:
      tags:
        - ServerPlan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to modify
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlanBackupDestinations'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanBackupDestinationResp'
        '404':
          description: Requested Details not found
      operationId: CreateBackupDestination
      description: Create a Backup Destination for a Plan
      summary: Create Backup Destination for Server Plan
  '/V4/ServerPlan/{planId}/BackupDestination/{BackupDestinationId}':
    put:
      tags:
        - ServerPlan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: BackupDestinationId
          in: path
          description: Id of the backupDestination to be modified
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlanBackupDestination'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanBackupDestinationResp'
        '404':
          description: Requested Details not found
      operationId: ModifyBackupDestination
      description: Modify Backup Destination for a Plan
      summary: Modify ServerPlan BackupDestination
    delete:
      tags:
        - ServerPlan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: BackupDestinationId
          in: path
          description: Id of the backupDestination to be deleted
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteBackupDestination
      description: Delete Backup Destination for a Plan
      summary: Delete ServerPlan BackupDestination
  '/V5/ServerPlan/{planId}/BackupDestination/{BackupDestinationId}':
    get:
      tags:
        - ServerPlan
      parameters:
        - name: planId
          in: path
          description: Id of the plan to retrieve backup destination
          required: true
          schema:
            type: integer
            format: int32
        - name: BackupDestinationId
          in: path
          description: Id of the backup destination
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanBackupDestinationDetails'
        '404':
          description: Requested Details not found
      operationId: GetBackupDestinationDetails
      description: Get specific backup destination details for a server plan
      summary: Get Backup Destination details of ServerPlan
    put:
      tags:
        - ServerPlan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: BackupDestinationId
          in: path
          description: Id of the backupDestination to be modified
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlanBackupDestinationDetails'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanBackupDestinationResp'
        '404':
          description: Requested Details not found
      operationId: ModifyBackupDestinationDetails
      description: Modify Backup Destination details for a Plan
      summary: Update Backup Destination details of ServerPlan
  '/V5/ServerPlan/{planId}/BackupDestination/SourceCopy/Eligible':
    parameters:
      - schema:
          type: integer
        name: planId
        in: path
        required: true
        description: Id of plan
      - schema:
          type: integer
        in: query
        name: regionId
        description: Region Id against which we want to check eligible source copies. Skip if no region present.
      - schema:
          type: boolean
        in: query
        name: forSnapCopy
        description: Get list of source copy eligible for snap copy in given region.
    get:
      summary: Gives a list of eligible source copies for given region id
      tags:
        - ServerPlan
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanSourceCopies'
      operationId: GetSourceCopiesForGivenServerPlanRegion
      description: Gives a list of eligible source copies for given region id
  '/V4/ServerPlan/{planId}/storageRegion/{regionList}':
    delete:
      tags:
        - ServerPlan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: regionList
          in: path
          description: 'List of region names/ids to be deleted. If region ids are passed, set isRegionIdList=true'
          required: true
          schema:
            type: string
        - name: isRegionIdList
          in: query
          description: Is regionList a list of region ids
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
      operationId: DeleteStorageRegion
      description: Delete Storage Region for an Elastic Plan
      summary: Delete Server Plan Storage Region
  '/V4/ServerPlan/{planId}/Backup/Enable':
    parameters:
      - name: planId
        in: path
        description: Id of the Server Plan
        required: true
        schema:
          type: integer
          format: int32
    put:
      tags:
        - ServerPlan
      operationId: EnableBackupOnPlan
      description: API to Enable backup schedule policies on server plan
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      summary: Enable backup Schedule policies on server plan
  '/V4/ServerPlan/{planId}/Backup/Disable':
    parameters:
      - name: planId
        in: path
        description: Id of the Server Plan
        required: true
        schema:
          type: integer
          format: int32
    put:
      tags:
        - ServerPlan
      operationId: DisableBackupOnPlan
      description: API to Disable backup schedule policies on server plan
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      summary: Disable Backup Schedule policies on serverplan
  '/V4/ServerPlan/{planId}/Backup/Run':
    parameters:
      - name: planId
        in: path
        description: Id of the Server Plan
        required: true
        schema:
          type: integer
          format: int32
    post:
      summary: API to run backups on server plan associated entities
      operationId: BackupServerPlan
      tags:
        - ServerPlan
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskRespforBackup'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: API to run backups on server plan associated entities
      parameters:
        - schema:
            type: string
            enum:
              - INCREMENTAL
              - DIFFERENTIAL
              - FULL
              - SYNTHETIC_FULL
          in: query
          name: backupLevel
          description: Backup level of jobs
          required: true
  /V4/LaptopPlan:
    post:
      summary: Create Laptop Plan
      tags:
        - LaptopPlan
      operationId: CreateLaptopPlan
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Create Laptop Plan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaptopPlan'
  '/V4/LaptopPlan/{planId}':
    parameters:
      - schema:
          type: integer
          format: int32
        name: planId
        in: path
        required: true
        description: Id of the plan
    get:
      summary: Get Laptop Plan details
      tags:
        - LaptopPlan
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaptopPlanDetails'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetLaptopPlanById
      description: Get Laptop Plan details
    put:
      summary: ' Modify existing laptop plan details'
      operationId: ModifyLaptopPlanById
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - LaptopPlan
      description: Modify existing laptop plan details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLaptopPlan'
    delete:
      summary: Delete existing laptop plan
      operationId: DeleteLaptopPlanById
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - LaptopPlan
      description: Delete existing laptop plan
  '/V4/LaptopPlan/{planId}/BackupDestinations':
    get:
      tags:
        - LaptopPlan
      parameters:
        - name: planId
          in: path
          description: Id of the Laptop Plan to retrieve backup destinations
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanBackupDestinations'
        '404':
          description: Requested Details not found
      operationId: GetLaptopBackupDestinations
      description: Get Backup Destinations for a Plan
      summary: Get LaptopPlan BackupDestinations
  '/V4/LaptopPlan/{planId}/BackupDestination':
    post:
      tags:
        - LaptopPlan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to modify
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlanBackupDestinations'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanBackupDestinationResp'
        '404':
          description: Requested Details not found
      operationId: CreateLaptopBackupDestination
      description: Create a Backup Destination for a Plan
      summary: Create a LaptopPlan BackupDestination
  '/V4/LaptopPlan/{planId}/BackupDestination/{BackupDestinationId}':
    put:
      tags:
        - LaptopPlan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: BackupDestinationId
          in: path
          description: Id of the backupDestination to be modified
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlanBackupDestination'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanBackupDestinationResp'
        '404':
          description: Requested Details not found
      operationId: ModifyLaptopBackupDestination
      description: Modify Backup Destination for a Plan
      summary: Update LaptopPlan BackupDestination
    delete:
      tags:
        - LaptopPlan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: BackupDestinationId
          in: path
          description: Id of the backupDestination to be deleted
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteLaptopBackupDestination
      description: Delete Backup Destination for a Plan
      summary: Delete LaptopPlan BackupDestination
  '/V4/LaptopPlan/{planId}/storageRegion/{regionList}':
    delete:
      tags:
        - LaptopPlan
      parameters:
        - name: planId
          in: path
          description: Id of the Laptop Plan to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: regionList
          in: path
          description: 'List of region names/ids to be deleted. If region ids are passed, set isRegionIdList=true'
          required: true
          schema:
            type: string
        - name: isRegionIdList
          in: query
          description: Is regionList a list of region ids
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
      operationId: DeleteStorageRegionForLaptopPlan
      description: Delete Storage Region for a laptop Plan
      summary: Delete StorageRegion of LaptopPlan
  /V4/CDMPlan:
    post:
      tags:
        - Plan Operations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCDMPlan'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanResp'
        '404':
          description: Requested Details not found
      operationId: CreateCDMPlan
      description: Create a CDM Plan
      summary: Create CDM Plan
  /V4/user:
    get:
      tags:
        - User Operations
      parameters:
        - schema:
            type: boolean
          in: query
          name: laptopUsers
          description: Returns only laptop users when set to true. This param is only effective when EdgeMode header is passed.
        - schema:
            type: integer
          in: query
          name: userGroupId
          description: Returns the list of users associated to the userGroupId provided.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResp'
        '404':
          description: Requested Details not found
      description: Get All Users
      operationId: GetUsers
      summary: Get Users
    post:
      tags:
        - User Operations
      x-terraform-resource: User_V2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUsers'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResp'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      operationId: CreateUser
      description: Create a User
      summary: Create an User
  /V4/user/action/delete:
    put:
      tags:
        - User Operations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteMultipleUsers'
            examples:
              Delete multiple users:
                value:
                  users:
                    - skipOwnerTransfer: true
                      newUser:
                        id: 0
                        name: string
                      user:
                        id: 0
                        name: string
                    - skipOwnerTransfer: true
                      newUserGroup:
                        id: 0
                        name: string
                      user:
                        id: 0
                        name: string
                    - skipOwnerTransfer: false
                      user:
                        id: 0
                        name: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: DeleteMultipleUsers
      description: Delete multiple users
      summary: Delete Multiple Users
  '/V4/user/{userId}':
    get:
      tags:
        - User Operations
      x-terraform-resource: User_V2
      parameters:
        - name: userId
          x-terraform-id: true
          in: path
          description: Id of the User whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
        - name: mode
          in: header
          schema:
            $ref: '#/components/schemas/Mode'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Requested Details not found
      operationId: GetUserDetails
      description: Get details of a User based on id
      summary: Get User Details
    put:
      description: Used to modify an existing user
      tags:
        - User Operations
      x-terraform-resource: User_V2
      x-terraform-function: handler.UpdateUserRequest
      parameters:
        - name: userId
          x-terraform-id: true
          in: path
          description: Id of the User to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: ModifyUser
      summary: Update existing user
    delete:
      description: Used to delete a user
      tags:
        - User Operations
      x-terraform-resource: User_V2
      parameters:
        - name: userId
          x-terraform-id: true
          in: path
          description: Id of the user to delete
          required: true
          schema:
            type: integer
            format: int32
        - name: skipOwnerShipTransfer
          in: query
          description: If user properties needn't be transferred to other user or usergroup
          schema:
            type: boolean
        - name: transferToUser
          in: query
          description: If user properties needs to be transferred to other user
          schema:
            type: integer
            format: int32
        - name: transfertoUserGroup
          in: query
          description: If user properties needs to be transferred to other userGroup
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteUser
      summary: Delete an User
  /V4/company:
    get:
      tags:
        - Organization Operations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyListResponse'
        '404':
          description: Requested Details not found
      description: Get All Companies
      operationId: GetCompanies
      parameters:
        - schema:
            type: boolean
          in: query
          name: includeDeletedCompanies
          description: 'If true, companies marked for deletion are included in the response'
      summary: Get Companies
    post:
      tags:
        - Organization Operations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCompany'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      operationId: CreateCompany
      description: Create a Company
      summary: Create a Company
  '/V4/company/{companyId}':
    get:
      tags:
        - Organization Operations
      parameters:
        - name: companyId
          in: path
          description: Id of the Company whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
        - schema:
            type: boolean
          in: query
          name: showInheritedAssociation
          description: Show inherited security association
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '404':
          description: Requested Details not found
      operationId: GetCompanyDetails
      description: Get details of a company based on id
      summary: Get Company Details
    put:
      tags:
        - Organization Operations
      parameters:
        - name: companyId
          in: path
          description: Id of the company to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompany'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: ModifyCompany
      description: Modify the properties of an existing company
      summary: Update the properties of existing company
    delete:
      description: Used to delete a company which has been deactivated
      tags:
        - Organization Operations
      parameters:
        - name: companyId
          in: path
          description: Id of the company to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteCompany
      summary: Delete a company
  '/V4/Company/{companyId}/Servers/Timezone':
    put:
      parameters:
        - name: companyId
          in: path
          description: Id of the company whose timezone is used to update timezone of servers (with no packages)
          required: true
          schema:
            type: integer
            format: int32
      description: Assigns company's timezone as the timezone for servers with no packages installed
      operationId: UpdateCompanyTimezoneForServers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimezoneForClientsReq'
        description: ''
      tags:
        - Organization Operations
      summary: Update the company Timezone
  '/V4/Company/{companyId}/Servers':
    get:
      parameters:
        - name: companyId
          in: path
          description: Id of the Company whose servers(with no packages) have to be fetched
          required: true
          schema:
            type: integer
            format: int32
      summary: ' API to get list of servers with no packages for a company'
      tags:
        - Organization Operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPseudoClientsForCompanyResp'
      operationId: GetServersForCompany
      description: API to get list of servers with no packages for a company
  '/V4/Company/{companyId}/associations':
    get:
      parameters:
        - name: companyId
          in: path
          description: Id of the Company whose associations have to be fetched
          required: true
          schema:
            type: integer
            format: int32
      summary: API to get list of association for a company
      tags:
        - Organization Operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssociationsForCompanyResp'
              example:
                associatedEntities:
                  - name: client1
                    id: 31
                  - name: client2
                    id: 443
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
        '503':
          description: Service unavailable
      operationId: GetAssociationsForCompany
      description: API to get list of association for a company
  '/V4/Company/{companyId}/LaptopAdmins':
    parameters:
      - schema:
          type: string
        name: companyId
        in: path
        required: true
    get:
      tags:
        - Organization Operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLaptopAdminsResp'
      operationId: GetCompanyLaptopAdmins
      description: Get a company's laptop admins.
      summary: Get Company Laptop Admins
    put:
      tags:
        - Organization Operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLaptopAdminsResp'
      operationId: UpdateCompanyLaptopAdmins
      description: Update a company's laptop admins.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLaptopAdminsReq'
        description: List of users or user groups and operation type
      summary: Update company laptop admins
  /V4/ServerGroup:
    get:
      description: Get All Server Groups
      operationId: GetServerGroups
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServerGroupsResp'
        '404':
          description: Requested Details not found
      tags:
        - ServerGroup
      summary: Get Server Groups
    post:
      description: Create Server group
      operationId: CreateServerGroups
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServerGroupResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - ServerGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServerGroup'
      summary: Create a Server Group
  /V4/ServerGroup/Preview:
    post:
      description: Get a preview of servers affected with create server group operation
      operationId: ServerGroupsCreationPreview
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServerGroupPreviewResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - ServerGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomaticServerGroupAssociationDetails'
      summary: Server Group Preview
  '/V4/ServerGroup/{serverGroupId}':
    get:
      description: Get details of a serverGroup based on id
      operationId: GetServerGroupIdDetails
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerGroup'
        '404':
          description: Requested Details not found
      tags:
        - ServerGroup
      parameters:
        - name: serverGroupId
          in: path
          description: Id of the serverGroupId whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
        - name: mode
          in: header
          schema:
            $ref: '#/components/schemas/Mode'
      summary: Get Server Group Details
    put:
      description: Used to update server associations for a server group
      operationId: UpdateServerGroupAssociation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServerGroup'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      parameters:
        - name: serverGroupId
          in: path
          description: Id of the serverGroupId whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
      tags:
        - ServerGroup
      summary: Update the server group
    delete:
      description: Used to delete a serverGroup
      operationId: DeleteServerGroup
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
      tags:
        - ServerGroup
      parameters:
        - name: serverGroupId
          in: path
          description: Id of the serverGroup to delete
          required: true
          schema:
            type: integer
            format: int32
      summary: Delete a ServerGroup
  '/V4/ServerGroup/{serverGroupId}/Restore/Action/Disable':
    put:
      description: Used to disable restore property for a server group
      operationId: DisableRestoreServerGroup
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - ServerGroup
      parameters:
        - name: serverGroupId
          in: path
          description: Id of the serverGroup to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
      summary: Disable Restore for servergroup
  '/V4/ServerGroup/{serverGroupId}/Backup/Action/Disable':
    put:
      description: Used to disable backup property for a server group
      operationId: DisableBackupServerGroup
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - ServerGroup
      parameters:
        - name: serverGroupId
          in: path
          description: Id of the serverGroup to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
      summary: Disable backups for ServerGroup
  '/V4/ServerGroup/{serverGroupId}/DataAging/Action/Disable':
    put:
      description: Used to disable data aging property for a server group
      operationId: DisableDataAgingServerGroup
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - ServerGroup
      parameters:
        - name: serverGroupId
          in: path
          description: Id of the serverGroup to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
      summary: Disable dataaging for ServerGroup
  '/V4/ServerGroup/{serverGroupId}/Restore/Action/Enable':
    put:
      description: Used to enable restore property for a server group
      operationId: EnableRestoreServerGroup
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - ServerGroup
      parameters:
        - name: serverGroupId
          in: path
          description: Id of the serverGroup to modify
          required: true
          schema:
            type: integer
            format: int32
      summary: Enable restore for ServerGroup
  '/V4/ServerGroup/{serverGroupId}/Backup/Action/Enable':
    put:
      description: Used to enable backup property for a server group
      operationId: EnableBackupServerGroup
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - ServerGroup
      parameters:
        - name: serverGroupId
          in: path
          description: Id of the serverGroup to modify
          required: true
          schema:
            type: integer
            format: int32
      summary: Enable Backup for ServerGroup
  '/V4/ServerGroup/{serverGroupId}/DataAging/Action/Enable':
    put:
      description: Used to enable data aging property for a server group
      operationId: EnableDataAgingServerGroup
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - ServerGroup
      parameters:
        - name: serverGroupId
          in: path
          description: Id of the serverGroup to modify
          required: true
          schema:
            type: integer
            format: int32
      summary: Enable Data aging for Server Group
  '/V4/ServerGroup/{serverGroupId}/DCPlan':
    parameters:
      - schema:
          type: string
        name: serverGroupId
        in: path
        required: true
    get:
      tags:
        - ServerGroup
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: getServerGroupDCPlan
      description: API to fetch DC plan associated to server group
      summary: Get ServerGroup DC Plan
    put:
      summary: API to associate specific plan to servergroup
      operationId: putServerGroupDCPlan
      tags:
        - ServerGroup
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: API to associate specific plan to servergroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdName'
        description: DC Plan id and name
    delete:
      summary: Api to remove associated DC plan from server group
      operationId: deleteServerGroupDCPlan
      tags:
        - ServerGroup
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Api to remove associated DC plan from server group
      parameters:
        - schema:
            type: boolean
          in: query
          name: removeChildAssociations
          description: 'Optional parameter. To be set only in case, if caller want to leave child association as-is and decouple them from server group'
  /V4/UserGroup:
    get:
      tags:
        - User Group Operations
      parameters:
        - name: mode
          in: header
          schema:
            $ref: '#/components/schemas/Mode'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupListResponse'
          headers: {}
        '404':
          description: Requested Details not found
      description: Get a list of existing user groups.
      operationId: GetUserGroups
      summary: Get UserGroups
    post:
      tags:
        - User Group Operations
      x-terraform-resource: UserGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserGroup'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                x-terraform-id: id
                $ref: '#/components/schemas/IdName'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      operationId: CreateUserGroup
      description: Create a new user-group
      summary: Create User group
  /V4/UserGroup/action/delete:
    put:
      tags:
        - User Group Operations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteMultipleUserGroups'
            examples:
              Delete multiple usergroups:
                value:
                  userGroups:
                    - skipOwnerTransfer: true
                      newUser:
                        id: 0
                        name: string
                      userGroup:
                        id: 0
                        name: string
                    - skipOwnerTransfer: true
                      newUserGroup:
                        id: 0
                        name: string
                      userGroup:
                        id: 0
                        name: string
                    - skipOwnerTransfer: false
                      userGroup:
                        id: 0
                        name: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: DeleteMultipleUserGroups
      description: Delete multiple userGroups
      summary: Delete user groups
  '/V4/UserGroup/{userGroupId}':
    get:
      tags:
        - User Group Operations
      x-terraform-resource: UserGroup
      x-terraform-query: '?additionalproperties=true'
      parameters:
        - name: userGroupId
          x-terraform-id: true
          in: path
          description: Id of the user-group whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
        - name: mode
          in: header
          schema:
            $ref: '#/components/schemas/Mode'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
        '404':
          description: Requested Details not found
      operationId: GetUserGroupDetails
      description: Get details of a user-group based on id
      summary: Get User Group Details
    put:
      tags:
        - User Group Operations
      x-terraform-resource: UserGroup
      parameters:
        - name: userGroupId
          x-terraform-id: true
          in: path
          description: Id of the user-group to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserGroup'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: ModifyUserGroup
      description: Modify the properties of an existing user-group
      summary: Update User Group Details
    delete:
      description: Used to delete a user-group
      tags:
        - User Group Operations
      x-terraform-resource: UserGroup
      parameters:
        - name: userGroupId
          x-terraform-id: true
          in: path
          description: Id of the user-group to delete
          required: true
          schema:
            type: integer
            format: int32
        - name: skipOwnerShipTransfer
          in: query
          description: If user group properties needn't be transferred to other user or usergroup
          schema:
            type: boolean
        - name: transferToUser
          in: query
          description: If user group properties needs to be transferred to other user
          schema:
            type: integer
            format: int32
        - name: transfertoUserGroup
          in: query
          description: If user group properties needs to be transferred to other userGroup
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteUserGroup
      summary: Delete User Group
  /V4/Storage/Disk:
    get:
      tags:
        - DiskStorage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageListResponse'
        '404':
          description: Requested Details not found
      description: Get a list of disk storage pools
      operationId: GetDiskStorages
      summary: Get Disk Storage
    post:
      tags:
        - DiskStorage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDiskStorage'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      operationId: CreateDiskStorage
      description: Create a new disk storage pool
      summary: Create a disk storage pool
  '/V4/Storage/Disk/{storagePoolId}':
    get:
      tags:
        - DiskStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the disk storage pool whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
        - schema:
            type: boolean
          in: query
          name: showInheritedAssociation
          description: Show inherited security association
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskStorage'
        '404':
          description: Requested Details not found
        '500':
          description: Internal Server Error
      operationId: GetDiskStorageDetails
      description: Get details of a disk storage pool based on id
      summary: Get Disk Storage Details
    put:
      tags:
        - DiskStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the disk storage to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDiskStorage'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: ModifyDiskStorage
      description: Modify the properties of an existing disk storage pool
      summary: Update Disk Storage Properties
    delete:
      description: Used to delete a disk storage pool
      tags:
        - DiskStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the disk storage pool to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteDiskStorage
      summary: Delete Disk Storage
  '/V4/Storage/Disk/{storagePoolId}/BackupLocation':
    post:
      tags:
        - DiskStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the disk storage to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBackupLocation'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
        '500':
          description: Internal Server Error
      operationId: CreateBackupLocation
      description: Create a new backup location
      summary: Create Backup Location
  '/V4/Storage/Disk/{storagePoolId}/BackupLocation/{backupLocationId}':
    get:
      description: Used to fetch mount path details of the disk storage pool
      tags:
        - DiskStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the disk storage pool whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
        - name: backupLocationId
          in: path
          description: Id of the backup location whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupLocationDetails'
        '404':
          description: Requested Details not found
      operationId: GetBackupLocationDetails
      summary: Get Backup location details
    put:
      tags:
        - DiskStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the disk storage to update
          required: true
          schema:
            type: integer
            format: int32
        - name: backupLocationId
          in: path
          description: Id of the backup location to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBackupLocation'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: ModifyBackupLocation
      description: Modify the properties of an existing mount path
      summary: Update Backup Location properties
    delete:
      tags:
        - DiskStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the disk storage to whose backup location has to be deleted
          required: true
          schema:
            type: integer
            format: int32
        - name: backupLocationId
          in: path
          description: Id of the backup location to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: DeleteBackupLocation
      description: Modify the properties of an existing mount path
      summary: Delete Backup Location
  '/V4/Storage/Disk/{storagePoolId}/BackupLocation/{backupLocationId}/AccessPath':
    post:
      description: Used to add a media agent to a disk access path
      tags:
        - DiskStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the disk storage pool whose details have to be fetched to add a new access path
          required: true
          schema:
            type: integer
            format: int32
        - name: backupLocationId
          in: path
          description: Id of the backup location whose details have to be fetched to add a new access path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDiskAccessPath'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '500':
          description: Internal Server Error
      operationId: AddMediaAgent
      summary: Add Media Agent to Disk Path
  '/V4/Storage/Disk/{storagePoolId}/BackupLocation/{backupLocationId}/AccessPath/{accessPathId}':
    delete:
      description: Used to delete a media agent to a disk access path
      tags:
        - DiskStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the disk storage pool whose access path has to be deleted
          required: true
          schema:
            type: integer
            format: int32
        - name: backupLocationId
          in: path
          description: Id of the mount path whose access path has to be deleted
          required: true
          schema:
            type: integer
            format: int32
        - name: accessPathId
          in: path
          description: Id of the mount path whose access path has to be deleted
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
      operationId: DeleteDiskAccessPath
      summary: Delete Media Agent to Disk Path
  /V4/Role:
    post:
      tags:
        - Role Operations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRole'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      operationId: CreateNewRole
      description: Create a new role
      summary: Create a Role
    get:
      summary: Get a list of all the roles
      tags:
        - Role Operations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleListResponse'
        '404':
          description: Requested Details not found
      operationId: GetListOfRoles
      description: Get a list of all the roles
  /V4/Permissions:
    get:
      tags:
        - Role Operations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionListResp'
        '404':
          description: Requested Details not found
      operationId: GetPermissionResponse
      description: Get a list of categories and permissions in each category
      summary: Get Permissions
  '/V4/Role/{roleId}':
    parameters:
      - schema:
          type: integer
          format: int32
        name: roleId
        in: path
        required: true
        description: Role Id
    get:
      summary: Get a details of the role whose role id has been provided
      tags:
        - Role Operations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '404':
          description: Requested Details not found
      operationId: GetRoleDetails
      description: Get a details of the role whose role id has been provided
      parameters:
        - schema:
            type: boolean
          in: query
          name: showInheritedAssociation
          description: Shows inherited security associations
    put:
      tags:
        - Role Operations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRole'
            examples:
              Updating a role:
                value:
                  newName: modifying_name
                  visibleToAll: true
                  enabled: true
                  permissionList:
                    - permission:
                        id: 151
                        name: Create Alert
                      category:
                        id: 117
                        name: Alert
                    - permission:
                        id: 134
                        name: File Analytics
                    - category:
                        id: 120
                        name: Billing
                  security:
                    - userGroup:
                        name: master
                      role:
                        id: 4
                    - user:
                        id: 1
                      role:
                        name: compliance
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: ModifyRole
      description: Modify the properties of an existing role
      summary: Update the Role
    delete:
      description: Used to delete a role
      tags:
        - Role Operations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteRoles
      summary: Delete a role
  /V4/Storage/Tape:
    get:
      tags:
        - TapeStorage
      operationId: ReturnListOfTapes
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TapeListResp'
        '404':
          description: Requested Details not found
      description: This endpoint is used to return the list of tape storages.
      summary: Get Tape Storage
  /V4/FileServers:
    get:
      tags:
        - FileServers
      operationId: GetFileServers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileServerListResp'
        '404':
          description: Requested Details not found
      description: This endpoint is used to return the list of file servers.
      summary: Get File Servers
  /V4/ArchiveFileServers:
    get:
      tags:
        - ArchiveFileServers
      operationId: GetArchiveFileServers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileServerListResp'
        '404':
          description: Requested Details not found
      description: This endpoint is used to return the list of Archive file servers.
      summary: List of Archive file servers.
  /V4/Instances:
    get:
      tags:
        - Instances
      operationId: GetInstances
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceListResp'
        '404':
          description: Requested Details not found
      description: This endpoint is used to return the list of instances.
      summary: Get DB Instances
  '/V4/Instance/{instanceId}/Restore/Action/Disable':
    put:
      description: Used to disable restore property for an instance
      operationId: DisableRestoreInstance
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Instances
      parameters:
        - name: instanceId
          in: path
          description: Id of the instance to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
      summary: Disable Restore for an Instance
  '/V4/Instance/{instanceId}/Backup/Action/Disable':
    put:
      description: Used to disable backup property for an instance
      operationId: DisableBackupInstance
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Instances
      parameters:
        - name: instanceId
          in: path
          description: Id of the instance to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
      summary: Disable Backups for an Instance
  '/V4/Instance/{instanceId}/SLA/Exclude':
    put:
      description: Used to exclude instance from SLA. Applicable for Salesforce & Office365
      operationId: ExcludeSLAInstance
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Instances
      parameters:
        - name: instanceId
          in: path
          description: Id of the instance to modify
          required: true
          schema:
            type: integer
            format: int32
      summary: Exclude Instance from the SLA
  '/V4/Instance/{instanceId}/Restore/Action/Enable':
    put:
      description: Used to enable restore property for an instance
      operationId: EnableRestoreInstance
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Instances
      parameters:
        - name: instanceId
          in: path
          description: Id of the instance to modify
          required: true
          schema:
            type: integer
            format: int32
      summary: Enable restore for an Instance
  '/V4/Instance/{instanceId}/Backup/Action/Enable':
    put:
      description: Used to enable backup property for an instance
      operationId: EnableBackupInstance
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Instances
      parameters:
        - name: instanceId
          in: path
          description: Id of the instance to modify
          required: true
          schema:
            type: integer
            format: int32
      summary: Enable Backups for an Instance
  '/V4/Instance/{instanceId}/SLA/Include':
    put:
      description: Used to include instance in SLA. Applicable for Salesforce
      operationId: IncludeSLAInstance
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Instances
      parameters:
        - name: instanceId
          in: path
          description: Id of the instance to modify
          required: true
          schema:
            type: integer
            format: int32
      summary: Include Instance in SLA
  /V4/InstantClones:
    get:
      summary: Get all instant clones
      tags:
        - InstantClones
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstantClonesListResp'
        '404':
          description: Requested Details not found
      operationId: getInstantClones
      description: Get all instant clones
  /V4/Databases:
    get:
      summary: Get all databases
      tags:
        - Databases
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseListResp'
      operationId: GetDatabases
      description: Get all databases
  /V4/GCPSpanner/instances:
    get:
      summary: To get the list of instances for GCP
      tags:
        - GCPSpanner
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCPInstanceList'
      operationId: getGCPSpannerInstanceList
      description: To get the list of instances for GCP
      parameters:
        - schema:
            type: integer
            format: int32
          in: query
          name: cloudAccountId
          required: true
          description: the google cloud hypervisor account id
  /V4/GCPSpanner/databases:
    get:
      summary: Get database list for GCP
      tags:
        - GCPSpanner
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCPDatabaseList'
      operationId: getGCPSpannerDatabases
      description: Get database list for GCP
      parameters:
        - schema:
            type: integer
          in: query
          name: cloudAccountId
          required: true
          description: the id of the node where the browse request is sent
        - schema:
            type: string
          in: query
          name: projectName
          required: true
          description: google cloud project the instance belongs to
        - schema:
            type: string
          in: query
          name: instanceName
          required: true
          description: the google spanner instance name
  /V4/GCPSpanner/permissions:
    get:
      summary: Check permission on a project for a cloud account
      tags:
        - GCPSpanner
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusModel'
              examples:
                When account has permission:
                  value:
                    status: true
                When account doesn't have permission:
                  value:
                    status: false
      operationId: getGCPSpannerPermissions
      description: Get permission status for a cloudAccount on a GCP project
      parameters:
        - schema:
            type: integer
          in: query
          name: cloudAccountId
          description: the id of the node where the browse request is sent
        - schema:
            type: string
          in: query
          name: projectName
          description: google cloud project the instance belongs to
  '/V4/Server/{serverId}/Agent/{agentId}/Backup/Action/Disable':
    put:
      description: |-
        Used to disable backup property for an agent.
        Types of available agentIds are:
        41-Active Directory,
        21-AIX File System,
        64-Big Data Apps,
        134-Cloud Apps,
        37-DB2,
        103-DB2 MultiNode,
        62-DB2 on Unix,
        128-Documentum,
        90-Domino Mailbox Archiver,
        91-DPM,
        67-Exchange Compliance Archiver,
        53-Exchange Database,
        45-Exchange Mailbox,
        54-Exchange Mailbox (Classic),
        56-Exchange Mailbox Archiver,
        82-Exchange PF Archiver,
        35-Exchange Public Folder,
        73-File Share Archiver,
        33-File System,
        74-FreeBSD,
        71-GroupWise DB,
        17-HP-UX Files System,
        65-Image Level,
        75-Image Level On Unix,
        76-Image Level ProxyHost,
        87-Image Level ProxyHost on Unix,
        3-Informix Database,
        29-Linux File System,
        89-MS SharePoint Archiver,
        104-MySQL,
        13-NAS,
        83-Netware File Archiver,
        12-Netware File System,
        10-Novell Directory Services,
        124-Object Link,
        131-Object Store,
        86-OES File System on Linux,
        22-Oracle,
        80-Oracle RAC,
        130-Other External Agent,
        125-PostgreSQL,
        38-Proxy Client File System,
        87-ProxyHost on Unix,
        61-SAP for Oracle,
        135-SAP HANA,
        78-SharePoint Server,
        20-Solaris 64bit File System,
        19-Solaris File System,
        81-SQL Server,
        5-Sybase Database,
        66-Unix File Archiver,
        36-Unix Tru64 64-bit File System,
        106-Virtual Server,
        58- Windows File Archiver
      operationId: DisableBackupAgent
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      tags:
        - Agent
      parameters:
        - name: serverId
          in: path
          description: Id of the server to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: agentId
          in: path
          description: Id of the agent to be modified
          required: true
          schema:
            type: integer
            format: int32
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
      summary: Disable Backup Property for an Agent
  '/V4/Server/{serverId}/Agent/{agentId}/Restore/Action/Disable':
    put:
      description: |-
        Used to disable restore property for an agent
        Types of available agentIds are:
        41-Active Directory,
        21-AIX File System,
        64-Big Data Apps,
        134-Cloud Apps,
        37-DB2,
        103-DB2 MultiNode,
        62-DB2 on Unix,
        128-Documentum,
        90-Domino Mailbox Archiver,
        91-DPM,
        67-Exchange Compliance Archiver,
        53-Exchange Database,
        45-Exchange Mailbox,
        54-Exchange Mailbox (Classic),
        56-Exchange Mailbox Archiver,
        82-Exchange PF Archiver,
        35-Exchange Public Folder,
        73-File Share Archiver,
        33-File System,
        74-FreeBSD,
        71-GroupWise DB,
        17-HP-UX Files System,
        65-Image Level,
        75-Image Level On Unix,
        76-Image Level ProxyHost,
        87-Image Level ProxyHost on Unix,
        3-Informix Database,
        29-Linux File System,
        89-MS SharePoint Archiver,
        104-MySQL,
        13-NAS,
        83-Netware File Archiver,
        12-Netware File System,
        10-Novell Directory Services,
        124-Object Link,
        131-Object Store,
        86-OES File System on Linux,
        22-Oracle,
        80-Oracle RAC,
        130-Other External Agent,
        125-PostgreSQL,
        38-Proxy Client File System,
        87-ProxyHost on Unix,
        61-SAP for Oracle,
        135-SAP HANA,
        78-SharePoint Server,
        20-Solaris 64bit File System,
        19-Solaris File System,
        81-SQL Server,
        5-Sybase Database,
        66-Unix File Archiver,
        36-Unix Tru64 64-bit File System,
        106-Virtual Server,
        58- Windows File Archiver
      operationId: DisableRestoreAgent
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      tags:
        - Agent
      parameters:
        - name: serverId
          in: path
          description: Id of the server to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: agentId
          in: path
          description: Id of the agent to be modified
          required: true
          schema:
            type: integer
            format: int32
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
      summary: Disable restore property for an agent
  '/V4/Server/{serverId}/Agent/{agentId}/Backup/Action/Enable':
    put:
      description: |-
        Used to enable backup property for an agent
        Types of available agentIds are:
        41-Active Directory,
        21-AIX File System,
        64-Big Data Apps,
        134-Cloud Apps,
        37-DB2,
        103-DB2 MultiNode,
        62-DB2 on Unix,
        128-Documentum,
        90-Domino Mailbox Archiver,
        91-DPM,
        67-Exchange Compliance Archiver,
        53-Exchange Database,
        45-Exchange Mailbox,
        54-Exchange Mailbox (Classic),
        56-Exchange Mailbox Archiver,
        82-Exchange PF Archiver,
        35-Exchange Public Folder,
        73-File Share Archiver,
        33-File System,
        74-FreeBSD,
        71-GroupWise DB,
        17-HP-UX Files System,
        65-Image Level,
        75-Image Level On Unix,
        76-Image Level ProxyHost,
        87-Image Level ProxyHost on Unix,
        3-Informix Database,
        29-Linux File System,
        89-MS SharePoint Archiver,
        104-MySQL,
        13-NAS,
        83-Netware File Archiver,
        12-Netware File System,
        10-Novell Directory Services,
        124-Object Link,
        131-Object Store,
        86-OES File System on Linux,
        22-Oracle,
        80-Oracle RAC,
        130-Other External Agent,
        125-PostgreSQL,
        38-Proxy Client File System,
        87-ProxyHost on Unix,
        61-SAP for Oracle,
        135-SAP HANA,
        78-SharePoint Server,
        20-Solaris 64bit File System,
        19-Solaris File System,
        81-SQL Server,
        5-Sybase Database,
        66-Unix File Archiver,
        36-Unix Tru64 64-bit File System,
        106-Virtual Server,
        58- Windows File Archiver
      operationId: EnableBackupAgent
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      tags:
        - Agent
      parameters:
        - name: serverId
          in: path
          description: Id of the server to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: agentId
          in: path
          description: Id of the agent to be modified
          required: true
          schema:
            type: integer
            format: int32
      summary: Enable Backup Property for an Agent
  '/V4/Server/{serverId}/Agent/{agentId}/Restore/Action/Enable':
    put:
      description: |-
        Used to enable restore property for an agent
        Types of available agentIds are:
        41-Active Directory,
        21-AIX File System,
        64-Big Data Apps,
        134-Cloud Apps,
        37-DB2,
        103-DB2 MultiNode,
        62-DB2 on Unix,
        128-Documentum,
        90-Domino Mailbox Archiver,
        91-DPM,
        67-Exchange Compliance Archiver,
        53-Exchange Database,
        45-Exchange Mailbox,
        54-Exchange Mailbox (Classic),
        56-Exchange Mailbox Archiver,
        82-Exchange PF Archiver,
        35-Exchange Public Folder,
        73-File Share Archiver,
        33-File System,
        74-FreeBSD,
        71-GroupWise DB,
        17-HP-UX Files System,
        65-Image Level,
        75-Image Level On Unix,
        76-Image Level ProxyHost,
        87-Image Level ProxyHost on Unix,
        3-Informix Database,
        29-Linux File System,
        89-MS SharePoint Archiver,
        104-MySQL,
        13-NAS,
        83-Netware File Archiver,
        12-Netware File System,
        10-Novell Directory Services,
        124-Object Link,
        131-Object Store,
        86-OES File System on Linux,
        22-Oracle,
        80-Oracle RAC,
        130-Other External Agent,
        125-PostgreSQL,
        38-Proxy Client File System,
        87-ProxyHost on Unix,
        61-SAP for Oracle,
        135-SAP HANA,
        78-SharePoint Server,
        20-Solaris 64bit File System,
        19-Solaris File System,
        81-SQL Server,
        5-Sybase Database,
        66-Unix File Archiver,
        36-Unix Tru64 64-bit File System,
        106-Virtual Server,
        58- Windows File Archiver
      operationId: EnableRestoreAgent
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      tags:
        - Agent
      parameters:
        - name: serverId
          in: path
          description: Id of the server to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: agentId
          in: path
          description: Id of the agent to be modified
          required: true
          schema:
            type: integer
            format: int32
      summary: Enable restore property for an agent
  '/V4/Server/{serverId}/Agent/{agentId}':
    parameters:
      - name: serverId
        in: path
        description: Id of the server to modify
        required: true
        schema:
          type: integer
          format: int32
      - name: agentId
        in: path
        description: Id of the agent to be modified
        required: true
        schema:
          type: integer
          format: int32
    delete:
      summary: Used to delete an agent from a server
      operationId: DeleteAgent
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Agent
      description: |-
        Used to delete an agent from a server
        It is expected that the agent has been deconfigured before performing delete operation.
        But internally if the agent is not deconfigured, then we force deconfigure it to proceed with delete operation
        Examples of supported agentIds are:
        33-File System,
        106-Virtual Server
  '/V4/Subclient/{subclientId}/Backup/Action/Disable':
    put:
      description: Used to disable backup property for a subclient
      operationId: DisableBackupSubclient
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Subclient Operations
      parameters:
        - name: subclientId
          in: path
          description: Id of the subclient to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
      summary: Disable Backup Property for subclient
  '/V4/Subclient/{subclientId}/Backup/Action/Enable':
    put:
      description: Used to enable backup property for an subclient
      operationId: EnableBackupSubclient
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Subclient Operations
      parameters:
        - name: subclientId
          in: path
          description: Id of the subclient to modify
          required: true
          schema:
            type: integer
            format: int32
      summary: Enable Backup Property for a subclient
  /V4/mediaAgent:
    post:
      operationId: InstallMediaAgent
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobId'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      description: To install MediaAgent package on a server
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstallMediaAgent'
        description: Server information where you want to install MediaAgent package.
      tags:
        - MediaAgent
      summary: Create a Media Agent
    get:
      tags:
        - MediaAgent
      operationId: GetMediaAgents
      description: Get All Media Agents
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaAgentListResponse'
        '404':
          description: Requested Details not found
      summary: Get MediaAgents
  /V4/DDB/MediaAgents:
    get:
      tags:
        - MediaAgent
      operationId: GetMediaAgentsForDDB
      description: Get All Media Agents for DDB
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaAgentForDDBListResponse'
        '404':
          description: Requested Details not found
      summary: Get MediaAgents for DDB
  '/V4/mediaAgent/{mediaAgentId}':
    get:
      tags:
        - MediaAgent
      parameters:
        - name: mediaAgentId
          in: path
          description: Id of the Media Agent whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
        - schema:
            type: boolean
          in: query
          name: showInheritedAssociation
          description: Show inherited security association
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaAgent'
        '404':
          description: Requested Details not found
      operationId: GetMediaAgentDetails
      description: Get details of a media agent based on id
      summary: Get Media Agent Details
    put:
      tags:
        - MediaAgent
      parameters:
        - name: mediaAgentId
          in: path
          description: Id of the mediaAgent to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMediaAgent'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: ModifyMediaAgent
      description: Modify the properties of an existing media agent
      summary: Modify Media Agent Details
    delete:
      description: Used to delete a media agent.
      tags:
        - MediaAgent
      parameters:
        - name: mediaAgentId
          in: path
          description: Id of the media agent to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteMediaAgent
      summary: Delete Media Agent
  /V4/EpicServers:
    get:
      tags:
        - EpicServers
      operationId: GetEpicServers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileServerListResp'
        '404':
          description: Requested Details not found
      description: This endpoint is used to return the list of epic servers.
      summary: Return the list of epic servers.
  /V4/NetworkTopology:
    get:
      tags:
        - Network Topology Operations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  firewallTopologies:
                    type: array
                    items:
                      $ref: '#/components/schemas/FirewallTopology'
        '404':
          description: Requested Details not found
      operationId: GETFirewallTopology
      description: This endpoint is used to return the list of network topology.
      summary: Get Network Topologies
    post:
      operationId: POSTFirewallTopology
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallTopologyCreateResp'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      description: This endpoint is used to create network topology.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirewallTopologyCreateReq'
      tags:
        - Network Topology Operations
      summary: Create a Network Topology
  '/V4/NetworkTopology/{topologyId}':
    parameters:
      - schema:
          type: string
        name: topologyId
        in: path
        required: true
    get:
      tags:
        - Network Topology Operations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  topologyDetails:
                    $ref: '#/components/schemas/FirewallTopologyDetails'
        '404':
          description: Requested Details not found
      operationId: GETFirewallTopologyDetails
      description: This endpoint is used to return the detail of network topology.
      summary: Get Network Topology Details
    put:
      operationId: PUTFirewallTopology
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested details not found
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirewallTopologyCreateReq'
      description: This endpoint is used to edit network topology.
      tags:
        - Network Topology Operations
      summary: Modify Network Topology details
    delete:
      operationId: DELETEFirewallTopology
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '500':
          description: Internal Server Error
      description: This endpoint is used to delete network topology.
      tags:
        - Network Topology Operations
      summary: Delete a Network Topology
  /V4/Regions:
    get:
      summary: Get Regions
      tags:
        - Regions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionsListResp'
      operationId: GetRegions
      description: 'Get list of regions '
      parameters:
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/RegionType'
          description: Region type to be filtered
          required: false
    post:
      summary: Create Region
      operationId: CreateRegion
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '400':
          description: Bad Request
        '409':
          description: Region with same name already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      description: Create a region
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRegion'
      tags:
        - Regions
  '/V4/Regions/{regionId}':
    parameters:
      - schema:
          type: string
        name: regionId
        in: path
        required: true
    delete:
      summary: Delete Region
      operationId: DeleteRegion
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Region not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Delete the region
      tags:
        - Regions
    get:
      summary: Get Region Details
      operationId: GetRegionDetails
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionDetails'
        '500':
          description: Internal Server Error
      description: Get details of the region
      tags:
        - Regions
    put:
      summary: Update Region
      operationId: UpdateRegion
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      description: Update details of the region
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRegion'
        description: Properties to be updated for the region
      tags:
        - Regions
  '/V4/entity/{entityType}/{entityId}/region':
    parameters:
      - schema:
          $ref: '#/components/schemas/EntityTypes'
        name: entityType
        in: path
        required: true
        description: Type of the entity
      - schema:
          type: integer
          format: int32
          minimum: 1
        name: entityId
        in: path
        required: true
        description: Unique id for the entity
    get:
      tags:
        - Regions
      operationId: getRegionForEntity
      parameters:
        - schema:
            type: boolean
          in: query
          name: calculate
          description: Flag for Enable/Disable Region Calculation
        - schema:
            $ref: '#/components/schemas/EntityRegionTypes'
          in: query
          name: entityRegionType
          description: Region Type Enum
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdNameDisplayName'
        '500':
          description: Internal Server Error
      description: Api to fetch region details for an entity.
      summary: Get Region Details
    put:
      tags:
        - Regions
      operationId: setRegionForEntity
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Api to set region for an entity.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityRegionInfo'
      summary: Set Region for an entity
  /V4/entity/region:
    get:
      tags:
        - Regions
      description: Api to fetch region for multiple entity
      parameters:
        - schema:
            $ref: '#/components/schemas/EntityTypes'
          in: query
          name: entityType
          required: true
          description: Entity Type Enum
          example: CLIENT
        - schema:
            $ref: '#/components/schemas/EntityRegionTypes'
          in: query
          name: regionType
          description: Region Type Enum
          example: BACKUP
        - schema:
            type: string
          in: query
          name: entities
          required: true
          description: Comma Seprated Entity Ids
          example: '1,2,3'
      operationId: getRegionForEntities
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEntityRegionResp'
              examples:
                Region For Entities:
                  value:
                    regions:
                      - id: 43
                        name: South India
                        entityId: 1
                      - id: 5
                        name: North America
                        entityId: 2
                      - id: 4
                        name: Europe
                        entityId: 3
                    entityType: CLIENT
                    regionType: BACKUP
                    error:
                      errorCode: 0
                      errorMessage: ''
        '400':
          description: Bad Request
      summary: Get Region for entities
  /V5/BlackoutWindow:
    post:
      tags:
        - BlackoutWindows
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBlackoutWindow'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      operationId: CreateBlackoutWindow
      description: Create a Blackout Window
      summary: Create a Blackout Window
    get:
      tags:
        - BlackoutWindows
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlackoutWindowsListResponse'
        '404':
          description: Requested Details not found
      description: Get All Blackout Windows
      operationId: GetBlackoutWindows
      parameters:
        - schema:
            type: boolean
          in: query
          name: showOnlyCommcellLevel
          description: Shows blackout window at commcell level if set to true.
        - schema:
            type: integer
          in: query
          name: companyId
          description: Shows blackout windows associated with the company whose id has been provided.
        - schema:
            type: string
          in: query
          name: serverGroupId
          description: Shows blackout windows associated with the server group whose id has been provided.
        - schema:
            type: string
          in: query
          name: commcellId
          description: Shows blackout windows associated with the commcell whose id has been provided.
      summary: Get Blackout Window
  '/V5/BlackoutWindow/{blackoutWindowId}':
    get:
      tags:
        - BlackoutWindows
      parameters:
        - name: blackoutWindowId
          in: path
          description: Id of the Blackout Window whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlackoutWindow'
        '404':
          description: Requested Details not found
      operationId: GetBlackoutWindowDetails
      description: Get details of a blackout window based on id
      summary: Get Blackout Window Properties
    put:
      tags:
        - BlackoutWindows
      parameters:
        - name: blackoutWindowId
          in: path
          description: Id of the Blackout Window to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBlackoutWindow'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: ModifyBlackoutWindow
      description: Modify the properties of an existing Blackout Window
      summary: Modify Blackout Window properties
  /V4/BlackoutWindow:
    get:
      tags:
        - BlackoutWindows
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4BlackoutWindowsListResponse'
        '404':
          description: Requested Details not found
      description: Get All Blackout Windows
      operationId: GetV4BlackoutWindows
      parameters:
        - schema:
            type: boolean
          in: query
          name: showOnlyCommcellLevel
          description: Shows blackout window at commcell level if set to true.
        - schema:
            type: integer
          in: query
          name: companyId
          description: Shows blackout windows associated with the company whose id has been provided.
        - schema:
            type: string
          in: query
          name: serverGroupId
          description: Shows blackout windows associated with the server group whose id has been provided.
        - schema:
            type: string
          in: query
          name: commcellId
          description: Shows blackout windows associated with the commcell whose id has been provided.
      summary: Get Blackout Windows List
    post:
      tags:
        - BlackoutWindows
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V4CreateBlackoutWindow'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      operationId: CreateV4BlackoutWindow
      description: Create a Blackout Window
      summary: Create new Blackout Window
  '/V4/BlackoutWindow/{blackoutWindowId}':
    get:
      tags:
        - BlackoutWindows
      parameters:
        - name: blackoutWindowId
          in: path
          description: Id of the Blackout Window whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4BlackoutWindow'
        '404':
          description: Requested Details not found
      operationId: GetV4BlackoutWindowDetails
      description: Get details of a blackout window based on id
      summary: Get Blackout Window Details
    put:
      tags:
        - BlackoutWindows
      parameters:
        - name: blackoutWindowId
          in: path
          description: Id of the Blackout Window to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V4UpdateBlackoutWindow'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: ModifyV4BlackoutWindow
      description: Modify the properties of an existing Blackout Window
      summary: Modify Blackout Window Details
    delete:
      description: Used to delete a Blackout Window
      tags:
        - BlackoutWindows
      parameters:
        - name: blackoutWindowId
          in: path
          description: Id of the Blackout Window to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteBlackoutWindow
      summary: Delete Blackout Window
  /V4/ResourcePool:
    get:
      tags:
        - ResourcePools
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePoolListResponse'
        '404':
          description: Requested Details not found
      description: Get All Resource Pools
      operationId: GetResourcePools
      summary: Get Resource Pools
  /V4/Snmp:
    get:
      tags:
        - SNMP
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  SNMPHosts:
                    type: array
                    items:
                      $ref: '#/components/schemas/SNMPConfigurationSummary'
        '404':
          description: Requested Details not found
      description: Get list of SNMP hosts for alert notification
      operationId: GetSNMPhosts
      summary: Get SNMP Servers
  /V4/IndexServers:
    get:
      summary: Get Index Servers
      tags:
        - IndexServers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexServersListResp'
      operationId: GetIndexServers
      description: Get list of index servers
  '/v4/HFSShare/{HFSShareId}/Status':
    get:
      tags:
        - HybridFileStores
      operationId: GetHybridFileStoreShareStatus
      summary: Get Hybrid File Store Share Status
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HFSShareStatusResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HFSShareStatusResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HFSShareStatusResp'
      description: API to get Hybrid File Store Share Status
    parameters:
      - name: HFSShareId
        in: path
        description: Id of the HFS Share to fetch its status
        required: true
        schema:
          type: integer
          format: int32
  /V4/HybridFileStores:
    get:
      summary: Get Hybrid File Stores
      tags:
        - HybridFileStores
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridFileStoresListResp'
      operationId: GetHybridFileStores
      description: Get list of hybrid file stores
  /V4/EmailServer:
    post:
      tags:
        - EmailServer
      operationId: ConfigureEmailServer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      description: Configure SMTP server settings.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigureSMTPServerReq'
      summary: Configure Email Server
    put:
      tags:
        - EmailServer
      summary: UpdateEmailServer
      operationId: UpdateEmailServer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      description: Update the SMTP server settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailServerReq'
        description: ''
    get:
      summary: GetEmailServer
      operationId: GetEmailServer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEmailServerDetails'
        '401':
          description: Unauthorized
      description: Retrieves SMTP server details
      tags:
        - EmailServer
  /V4/EmailServer/Action/Test:
    post:
      summary: SendTestMailReq
      operationId: SendTestMailReq
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      description: To test Email settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendTestMailReq'
        description: ''
      tags:
        - EmailServer
  /V4/Commcell/Restore/Action/Disable:
    put:
      description: Used to disable restore property for commcell
      operationId: DisableRestoreCommcell
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      parameters:
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
      summary: Disable Restore for Commcell
  /V4/Commcell/Backup/Action/Disable:
    put:
      description: Used to disable backup property for commcell
      operationId: DisableBackupCommcell
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      parameters:
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
      summary: Disable Backups for Commcell
  /V4/Commcell/Restore/Action/Enable:
    put:
      description: Used to enable restore property for commcell
      operationId: EnableRestoreCommcell
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      summary: Enable Restore for Commcell
  /V4/Commcell/Backup/Action/Enable:
    put:
      description: Used to enable backup property for commcell
      operationId: EnableBackupCommcell
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      summary: Enable Backup Property for Commcell
  /V4/Commcell/Scheduler/Action/Disable:
    put:
      description: Used to disable scheduler property for commcell
      operationId: DisableSchedulerCommcell
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      parameters:
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
      summary: Disable Schedule for Commcell
  /V4/Commcell/DataAging/Action/Disable:
    put:
      description: Used to disable data aging property for commcell
      operationId: DisableDataAgingCommcell
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      parameters:
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
      summary: Disable Data Aging for Commcell
  /V4/Commcell/Scheduler/Action/Enable:
    put:
      description: Used to enable scheduler property for commcell
      operationId: EnableSchedulerCommcell
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      summary: Enable Schedule for Commcell
  /V4/Commcell/DataAging/Action/Enable:
    put:
      description: Used to enable data aging property for commcell
      operationId: EnableDataAgingCommcell
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      summary: Enable Data Aging for Commcell
  /V4/Commcell/DDB/Action/Disable:
    put:
      description: Used to disable DDB property for commcell
      operationId: DisableDDBCommcell
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      parameters:
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
      summary: Disable DDB Property for commcell
  /V4/Commcell/DataVerification/Action/Disable:
    put:
      description: Used to disable data verification property for commcell
      operationId: DisableDataVerificationCommcell
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      parameters:
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
      summary: Disable Data Verifications for commcell
  /V4/Commcell/DDB/Action/Enable:
    put:
      description: Used to enable DDB property for commcell
      operationId: EnableDDBCommcell
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      summary: Enable DDB property for commcell
  /V4/Commcell/AllJobActivity/Action/Enable:
    put:
      description: Used to enable all job activity property for commcell
      operationId: EnableAllJobActivity
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      summary: Enable All Job activity in commcell
  /V4/Commcell/AllJobActivity/Action/Disable:
    put:
      description: Used to disable all job activity property for commcell
      operationId: DisableAllJobActivityCommcell
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      parameters:
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
      summary: Disable All Job Activity for commcell
  /V4/Commcell/DataVerification/Action/Enable:
    put:
      description: Used to enable data verification property for commcell
      operationId: EnableDataVerificationCommcell
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      summary: Enable Data Verification property for commcell
  /V4/Commcell/AuxillaryCopy/Action/Disable:
    put:
      description: Used to disable auxillary copy property for commcell
      operationId: DisableAuxillaryCopyCommcell
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      parameters:
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
      summary: Disable Aux Copy Jobs for commcell
  /V4/Commcell/ContentIndexing/Action/Disable:
    put:
      description: Used to disable content indexing property for commcell
      operationId: DisableContentIndexingCommcell
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      parameters:
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
      summary: Disable Content Indexing for commcell
  /V4/Commcell/AuxillaryCopy/Action/Enable:
    put:
      description: Used to enable auxillary copy property for commcell
      operationId: EnableAuxillaryCopyCommcell
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      summary: Enable Aux Copy Jobs for commcell
  /V4/Commcell/ContentIndexing/Action/Enable:
    put:
      description: Used to enable content indexing property for commcell
      operationId: EnableContentIndexingCommcell
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      summary: Enable Content Indexing Property for commcell
  /V4/scrubLogs/Action/Disable:
    put:
      description: Used to disable log scrubbing
      operationId: DisableLogScrubbing
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - ScrubLogs
      summary: Disable log scrubbing
  /V4/scrubLogs/Action/Enable:
    put:
      description: Used to enable log scrubbing
      operationId: EnableLogScrubbing
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - ScrubLogs
      summary: Enable Log Scrubbing
  /V4/TriggeredAlerts:
    get:
      summary: Get Alerts Triggered
      tags:
        - Alerts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertsTriggeredListResp'
        '404':
          description: Requested Details not found
      operationId: GetAlertsTriggered
      description: Get List Of Alerts Triggered
  '/V4/TriggeredAlerts/{id}':
    parameters:
      - schema:
          type: integer
          format: int32
        name: id
        in: path
        required: true
    get:
      summary: Get Triggered Alert Details
      tags:
        - Alerts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggeredAlertsDetails'
        '500':
          description: Internal Server Error
      operationId: GetTriggeredAlertDetails
      description: Get details of triggered alert
    delete:
      operationId: DeleteTriggeredAlerts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      tags:
        - Alerts
      description: Delete Triggered Alerts
      summary: Delete Triggered Alert
  '/V4/TriggeredAlerts/{id}/Pin':
    parameters:
      - schema:
          type: integer
          format: int32
        name: id
        in: path
        required: true
    put:
      summary: PinTriggeredAlerts
      operationId: PinTriggeredAlerts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      description: Pin triggered alerts
      tags:
        - Alerts
  '/V4/TriggeredAlerts/{id}/Unpin':
    parameters:
      - schema:
          type: integer
          format: int32
        name: id
        in: path
        required: true
    put:
      summary: UnpinTriggeredAlerts
      operationId: UnpinTriggeredAlerts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      description: Unpin triggered alerts
      tags:
        - Alerts
  '/V4/TriggeredAlerts/{id}/Read':
    parameters:
      - schema:
          type: integer
          format: int32
        name: id
        in: path
        required: true
    put:
      summary: ReadTriggeredAlerts
      operationId: ReadTriggeredAlerts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      description: Mark a triggered alert as read
      tags:
        - Alerts
  '/V4/TriggeredAlerts/{id}/Unread':
    parameters:
      - schema:
          type: integer
          format: int32
        name: id
        in: path
        required: true
    put:
      summary: UnreadTriggeredAlerts
      operationId: UnreadTriggeredAlerts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      description: Mark a triggered alert as unread
      tags:
        - Alerts
  '/V4/TriggeredAlerts/{id}/Notes':
    parameters:
      - schema:
          type: integer
          format: int32
        name: id
        in: path
        required: true
    put:
      summary: ModifyTriggeredAlertsNotes
      operationId: ModifyTriggeredAlertsNotes
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      description: 'Add, Modify and Delete notes for triggered alerts'
      tags:
        - Alerts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTriggeredAlertsNotes'
  '/V4/AlertDefinitions/{id}':
    parameters:
      - schema:
          type: integer
          format: int32
        name: id
        in: path
        required: true
    delete:
      summary: Delete Alert Definitions
      operationId: DeleteAlertDefinitions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      description: Delete alert definitions
      tags:
        - Alerts
    get:
      summary: Get Alert Definitions Details
      operationId: GetAlertDefinitionsDetails
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertDefinitionsDetails'
        '500':
          description: Internal Server Error
      description: Get details of alert definition
      parameters:
        - schema:
            type: boolean
          in: query
          name: additionalProperties
      tags:
        - Alerts
    put:
      summary: Edit Alert Definitions
      operationId: EditAlertDefinitions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      description: Edit Alert Definition details
      tags:
        - Alerts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertDefinitionsEdit'
  '/V4/AlertDefinitions/{id}/Enable':
    parameters:
      - schema:
          type: integer
          format: int32
        name: id
        in: path
        required: true
    put:
      summary: Enable Alert Definitions
      operationId: EnableAlertDefinitions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      tags:
        - Alerts
      description: Enable Alert Definitions
  '/V4/AlertDefinitions/{id}/Disable':
    parameters:
      - schema:
          type: integer
          format: int32
        name: id
        in: path
        required: true
    put:
      summary: Disable Alert Definitions
      operationId: DisableAlertDefinitions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      tags:
        - Alerts
      description: Disable Alert Definition
  /V4/TriggeredAlerts/Action/Delete:
    put:
      operationId: DeleteMultipleTriggeredalerts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      description: Delete multiple triggered alerts
      tags:
        - Alerts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertIds'
      summary: Delete Multiple Triggered Alerts
  /V4/Servers:
    get:
      summary: Get Servers
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServersListResp'
      operationId: GetServers
      description: This end point returns the list of servers
      parameters:
        - schema:
            type: integer
            format: int32
            default: 1
          in: query
          name: showOnlyInfrastructureMachines
          description: 'Returns only infrastructure machines if value is 1 if 0, it returns all servers, default value is 1'
      tags:
        - Servers
  '/V4/Server/{serverId}/Restore/Action/Disable':
    put:
      description: Used to disable restore property for server
      operationId: DisableRestoreServer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Servers
      parameters:
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
        - name: serverId
          in: path
          description: Id of the Server whose details have to be modified
          required: true
          schema:
            type: integer
            format: int32
      summary: Disable Restores for a Server
  '/V4/Server/{serverId}/Restore/Action/Enable':
    put:
      description: Used to enable restore property for Server
      operationId: EnableRestoreServer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Servers
      parameters:
        - name: serverId
          in: path
          description: Id of the Server whose details have to be modified
          required: true
          schema:
            type: integer
            format: int32
      summary: Enable Restores for a Server
  '/V4/Server/{serverId}/Backup/Action/Disable':
    put:
      description: Used to disable backup property for server
      operationId: DisableBackupServer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Servers
      parameters:
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
        - name: serverId
          in: path
          description: Id of the Server whose details have to be modified
          required: true
          schema:
            type: integer
            format: int32
      summary: Disable Backups for a server
  '/V4/Server/{serverId}/Backup/Action/Enable':
    put:
      description: Used to enable backup property for Server
      operationId: EnableBackupServer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Servers
      parameters:
        - name: serverId
          in: path
          description: Id of the Server whose details have to be modified
          required: true
          schema:
            type: integer
            format: int32
      summary: Enable backup property for a server
  '/V4/Server/{serverId}/DataAging/Action/Disable':
    put:
      description: Used to disable Data Aging property for server
      operationId: DisableDataAgingServer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Servers
      parameters:
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
        - name: serverId
          in: path
          description: Id of the Server whose details have to be modified
          required: true
          schema:
            type: integer
            format: int32
      summary: Disable Data Aging for a Server
  '/V4/Server/{serverId}/DataAging/Action/Enable':
    put:
      description: Used to enable Data Aging property for Server
      operationId: EnableDataAgingServer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Servers
      parameters:
        - name: serverId
          in: path
          description: Id of the Server whose details have to be modified
          required: true
          schema:
            type: integer
            format: int32
      summary: Enable Data Aging for a Server
  /V4/GlobalSettings:
    put:
      summary: ModifyGlobalSettings
      operationId: ModifyGlobalSettings
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Modify global settings used to override system default behaviour
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyGlobalSettings'
            examples:
              Modify global settings:
                value:
                  globalSettings:
                    - name: AccountLockDuration
                      category: CommServDB.GxGlobalParam
                      type: Integer
                      newValue: '1000'
                      comment: Needed to change the account lock duration to 1000 seconds
              Reset global settings:
                value:
                  globalSettings:
                    - name: AccountLockDuration
                      category: CommServDB.GxGlobalParam
                      type: Integer
                      reset: true
        description: ''
      tags:
        - AdditionalSettings
    get:
      summary: GetGlobalSettings
      operationId: GetGlobalSettings
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalSettingsResponse'
              examples:
                Global settings:
                  value:
                    globalSettings:
                      - name: AccountLockDuration
                        description: 'Use this additional setting to set the number of seconds a locked account remains locked. '
                        defaultValue: '0'
                        type: Integer
                        isRestartRequired: true
                        minValue: 0
                        maxValue: 2147483647
                        category: CommServDB.GxGlobalParam
                      - name: ActivateHPECatalyst
                        description: Use this additional setting to show or hide HP Store Once library creation in the UI.
                        defaultValue: 'False'
                        type: Boolean
                        isRestartRequired: false
                        value: 'True'
                        isModified: true
                        comment: Needed to show HP store
                        category: CommServDB.GxGlobalParam
                      - name: AddDecisionPointInformation
                        description: Set to 1 to add debugging information to collect file identifying reason entry was added and where in code that decision was made Set to 0 to disable (default)
                        defaultValue: '0'
                        type: Integer
                        isRestartRequired: false
                        minValue: 0
                        maxValue: 1
                        acceptableValues:
                          - '0'
                          - '1'
                        category: CommServDB.GxGlobalParam
      description: Get list of global settings used to modify system default behaviour
      tags:
        - AdditionalSettings
  /V4/EntitySettings:
    get:
      tags:
        - AdditionalSettings
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitySettingsResponse'
              examples:
                Entity settings:
                  value:
                    entitySettings:
                      - name: 3dfsCfgClient_DEBUGLEVEL
                        description: 'Specifies the default debug level for application. Note that if other means exist to set debug level  those will probably override this method. '
                        defaultValue: '2'
                        values:
                          - value: '4'
                            comment: Needed to debug 3dfs application
                            entity:
                              name: oes2018_3
                              id: 4
                              type: Server
                          - value: '3'
                            comment: Needed to debug 3dfs application
                            entity:
                              name: amsterdam
                              id: 3
                              type: Server
                        type: Integer
                        isRestartRequired: false
                        minValue: 0
                        maxValue: 10
                        isModified: true
                        category: EventManager
                      - name: AllowEmptySubClientToSucceed
                        description: 'By default, if a subclient is empty, the backup job fails. To allow backup jobs for empty subclients to complete, set the value to 1.'
                        defaultValue: '0'
                        type: Integer
                        isRestartRequired: false
                        minValue: 0
                        maxValue: 1
                        category: MSExchangeDBAgent
      operationId: GetEntitySettings
      description: Get list of entity settings used to modify default behaviour for linked entity like servers or server groups
      summary: Get Entity Settings
    put:
      operationId: ModifyEntitySettings
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - AdditionalSettings
      description: Modify entity settings used to change default behaviour for linked entity like servers or server groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyEntitySettings'
            examples:
              Modify entity setting:
                value:
                  entitySettings:
                    - name: AllowEmptyDefaultSubclient
                      category: VirtualServer
                      type: Boolean
                      value: 'True'
                      comment: Needed to allow empty default subclients
                      entity:
                        id: 4
                        type: Server
              Reset entity setting:
                value:
                  entitySettings:
                    - name: AllowEmptyDefaultSubclient
                      category: VirtualServer
                      type: Boolean
                      reset: true
                      entity:
                        id: 4
                        type: Server
      summary: Modify Entity Settings
  /V4/Solutions:
    get:
      tags:
        - Solutions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolutionsList'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: getSolutionsId
      description: 'API to fetch applicable workload solutions for the user like File Server, Virtualization or Database'
      summary: Get Solutions
  /V4/KeyManagementServers:
    get:
      tags:
        - KeyManagementServer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  KeyManagementServers:
                    type: array
                    items:
                      $ref: '#/components/schemas/KeyManagementServer'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetKeyManagementServers
      description: Get key management servers
      summary: Get Key Management Servers
  '/V4/KeyManagementServers/{kmsId}':
    delete:
      operationId: DeleteKeyManagementServers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
      description: Delete key management server based on Id
      tags:
        - KeyManagementServer
      summary: Delete Key Management Server
    parameters:
      - schema:
          type: integer
        name: kmsId
        in: path
        required: true
        description: Id of Key Management Server
  '/V4/SAML/{name}':
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAML'
      operationId: GetSAMLApp
      description: Gets details of SAML app based on SAML app name
      tags:
        - IdentityServers
      summary: Get SAML Server
    put:
      operationId: UpdateSAMLApp
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Updates details of existing SAML app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SAMLUpdate'
      tags:
        - IdentityServers
      summary: Modify SAML App Details
  /V4/SAML:
    post:
      operationId: CreateSAMLApp
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Creates SAML app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SAMLReq'
      tags:
        - IdentityServers
      summary: Create SAML App
  /V4/IdentityServers:
    get:
      tags:
        - IdentityServers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityServersListResp'
      operationId: GetIdentityServers
      description: Get identity servers list
      summary: Get Identity Servers
  '/V4/LDAP/{domainId}':
    get:
      summary: Get AD/LDAP Details
      tags:
        - IdentityServers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ADLDAPDetails'
              examples:
                Active Directory:
                  value:
                    id: 85
                    name: domain.com
                    domainName: domain
                    directoryType: ACTIVE_DIRECTORY
                    credentials: username
                    company:
                      id: 0
                      name: Commcell
                    users: 0
                    userGroups: 1
                    baseDNForCardUsers: 'CN=Name,OU=Sales,OU=Employees,DC=dn,DC=domain,DC=com'
                    useSecureLDAP: false
                    enableSSO: true
                    accessViaClient: false
                Apple Directory Service:
                  value:
                    id: 85
                    name: domain.com
                    domainName: domain
                    directoryType: APPLE_DIRECTORY_SERVICE
                    credentials: username
                    company:
                      id: 0
                      name: Commcell
                    users: 10
                    userGroups: 2
                    accessViaClient: false
                LDAP Server:
                  value:
                    id: 74
                    name: domain.com
                    domainName: domain
                    directoryType: LDAP_SERVER
                    credentials: 'uid=admin,cn=users,cn=compat,dc=domain,dc=com'
                    company:
                      id: 0
                      name: Commcell
                    users: 10
                    userGroups: 5
                    accessViaClient: true
                    proxies:
                      - id: 2
                        name: client2
                    LDAPQueryParameters:
                      - id: 6
                        name: User group filter
                        value: (objectClass=groupofnames)
                        defaultValue: (objectClass=group)
                        isOverridden: true
                      - id: 7
                        name: User filter
                        value: (objectClass=posixaccount)
                        defaultValue: (&(objectCategory=User)(sAMAccountName=*))
                        isOverridden: true
                      - id: 9
                        name: Unique identifier
                        value: uid
                        defaultValue: sAMAccountName
                        isOverridden: true
                      - id: 10
                        name: base DN
                        value: 'cn=accounts,dc=domain,dc=com'
                        defaultValue: baseDN
                        isOverridden: true
                    attributeMap:
                      - id: 1
                        name: Object class
                        value: objectClass
                        defaultValue: objectClass
                        isOverridden: false
                      - id: 2
                        name: Common name
                        value: common name
                        defaultValue: cn
                        isOverridden: true
                      - id: 3
                        name: Email
                        value: mail
                        defaultValue: mail
                        isOverridden: false
                      - id: 4
                        name: GUID
                        value: objectGUID
                        defaultValue: objectGUID
                        isOverridden: false
                      - id: 5
                        name: Dns
                        value: dnsroot
                        defaultValue: dnsroot
                        isOverridden: false
                      - id: 11
                        name: Member user group
                        value: member
                        defaultValue: member
                        isOverridden: false
                      - id: 12
                        name: Member unique identifier
                        value: memberuid
                        defaultValue: memberuid
                        isOverridden: false
                Open LDAP:
                  value:
                    id: 58
                    name: domain.com
                    domainName: domain
                    directoryType: OPEN_LDAP
                    credentials: 'cn=user,dc=domain,dc=com'
                    company:
                      id: 1
                      name: Company1
                    users: 0
                    userGroups: 0
                    accessViaClient: true
                    proxies:
                      - id: 115
                        name: client115
                      - id: 2
                        name: client2
                Oracle Directory:
                  value:
                    id: 56
                    name: ODS.domain.com
                    domainName: domain
                    directoryType: ORACLE_DIRECTORY
                    credentials: 'cn=ODSUser1,dc=domain,dc=com'
                    company:
                      id: 2
                      name: Company2
                    users: 0
                    userGroups: 0
                    accessViaClient: false
      operationId: GetADLDAPDetails
      description: Get detail of the AD/LDAP domain
    parameters:
      - schema:
          type: integer
          format: int32
        name: domainId
        in: path
        required: true
        description: ID of the AD/LDAP domain
    put:
      summary: Update AD/LDAP
      operationId: UpdateADLDAP
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Request body is empty or format is invalid.
      description: Update an AD/LDAP domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateADLDAP'
            examples:
              Active Directory:
                value:
                  directoryType: ACTIVE_DIRECTORY
                  NETBIOSName: domain
                  name: domain.com
                  username: username
                  password: cGFzc3dvcmQ=
                  baseDNForCardUsers: 'CN=Name,OU=Sales,OU=Employees,DC=dn,DC=domain,DC=com'
                  useSecureLDAP: true
                  enableSSO: true
                  accessViaClient: true
                  proxies:
                    - id: 1
                      name: client1
              Apple Directory Service:
                value:
                  directoryType: APPLE_DIRECTORY_SERVICE
                  OSXServerName: domain
                  name: domain.com
                  username: username
                  password: cGFzc3dvcmQ=
                  accessViaClient: false
              LDAP Server:
                value:
                  directoryType: LDAP_SERVER
                  host: domain
                  name: domain.com
                  username: username
                  password: cGFzc3dvcmQ=
                  accessViaClient: true
                  proxies:
                    - id: 1
                      name: client
                  LDAPQueryParameters:
                    - id: 6
                      name: User group filter
                      value: (objectClass=groupofnames)
                    - id: 7
                      name: User filter
                      value: (objectClass=posixaccount)
                    - id: 9
                      name: Unique identifier
                      value: sAMAccountName
                    - id: 10
                      name: base DN
                      value: 'cn=accounts,dc=domain,dc=com'
                  attributeMap:
                    - id: 2
                      name: Common name
                      value: common name
              Open LDAP:
                value:
                  directoryType: OPEN_LDAP
                  NETBIOSName: domain
                  name: domain.com
                  username: 'cn=user,dc=domain,dc=com'
                  password: cGFzc3dvcmQ=
                  accessViaClient: false
              Oracle Directory:
                value:
                  directoryType: ORACLE_DIRECTORY
                  NETBIOSName: ods
                  name: ods.domain.com
                  username: 'cn=user,dc=example,dc=com'
                  password: cGFzc3dvcmQ=
                  accessViaClient: false
        description: Properties of the domain to be updated
      tags:
        - IdentityServers
    delete:
      summary: Delete AD/LDAP
      operationId: DeleteADLDAP
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Delete an AD/LDAP domain
      parameters:
        - schema:
            type: integer
          in: query
          name: transferToUserId
          description: Optionally transfer the ownership to user
        - schema:
            type: integer
          in: query
          name: transferToUserGroupId
          description: Optionally transfer the ownership to user group
      tags:
        - IdentityServers
  /V4/LDAP:
    post:
      summary: Create AD/LDAP
      operationId: CreateLDAP
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Create LDAP/Active directory for user authentication
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/ActiveDirectoryType'
                - $ref: '#/components/schemas/AppleDirectoryServiceType'
                - $ref: '#/components/schemas/LDAPServerType'
                - $ref: '#/components/schemas/OpenLDAPType'
                - $ref: '#/components/schemas/OracleDirectoryType'
              description: Five different directory types
            examples:
              Active directory:
                value:
                  directoryType: ACTIVE_DIRECTORY
                  NETBIOSName: TEST_NETBIOS
                  name: TEST_NETBIOS.company.com
                  username: testing_username
                  password: cGFzc3dvcmQK
                  useSecureLdap: false
                  enableSSO: false
              Apple directory service:
                value:
                  directoryType: APPLE_DIRECTORY_SERVICE
                  OSXServerName: HOST_NAME
                  name: TEST_NETBIOS.company.com
                  username: testing_username
                  password: cGFzc3dvcmQK
              LDAP server:
                value:
                  directoryType: LDAP_SERVER
                  host: HOST_NAME
                  username: testing_username
                  password: cGFzc3dvcmQK
                  LDAPQueryParameters:
                    baseDN: baseDN
                    uniqueIdentifier: sAMAccountName
                    userFilter: (&(objectCategory=User)(sAMAccountName=*))
                    userGroupFilter: (objectClass=group)
              Open LDAP:
                value:
                  directoryType: OPEN_LDAP
                  NETBIOSName: HOST_NAME
                  name: TEST_NETBIOS.company.com
                  username: testing_username
                  password: cGFzc3dvcmQK
                  proxies:
                    - id: 1
                      name: client1
                    - id: 2
                      name: client2
                    - id: 3
                      name: client3
        description: LDAP body request
      tags:
        - IdentityServers
  /V4/syslogServer:
    get:
      summary: Get Syslog Server Status
      tags:
        - SyslogServer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyslogStatus'
        '503':
          description: Service Unavailable
      operationId: GetSyslogStatus
      description: This endpoint returns the details of a syslog server.
    post:
      summary: Configure Syslog Server
      operationId: ConfigureSyslogStatus
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      description: This endpoint configures a syslog server.
      tags:
        - SyslogServer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyslogConfigure'
  /V4/ServiceCommcells:
    get:
      summary: Returns a list of serviceCommcells
      tags:
        - ServiceCommcells
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  serviceCommcells:
                    type: array
                    items:
                      $ref: '#/components/schemas/ServiceCommcells'
        '503':
          description: Service Unavailable
      operationId: GetServiceCommcells
      description: Returns a list of Service Commcells
  /V4/DistributedSystems:
    get:
      tags:
        - DistributedSystems
      operationId: GetDistributedSystems
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributedSystemsListResp'
        '404':
          description: Requested Details not found
      description: This endpoint is used to return the list of distributed systems.
      summary: Get Distributed Systems
  /V4/AccessControl:
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessControl'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: getAccessControl
      description: Gets owner permissions and laptop ownership details
      tags:
        - AccessControl
      summary: Get Access Control Details
    put:
      operationId: putAccessControl
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Updates owner permissions and/or automatic laptop ownership assignment
      tags:
        - AccessControl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessControl'
      summary: Modify Access Control
  /V4/License:
    get:
      tags:
        - License
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseInfo'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetLicenseInfo
      description: This endpoint returns license information
      summary: Get License Info
  '/V4/Activate/Entity/{entityType}/{entityId}/Audit':
    parameters:
      - schema:
          type: integer
          format: int32
          minimum: 1
        name: entityType
        in: path
        required: true
        description: Type of the entity
      - schema:
          type: integer
          format: int32
          minimum: 1
        name: entityId
        in: path
        required: true
        description: Unique id for the entity
    get:
      tags:
        - Activate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityAuditList'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetActivateEntityAuditList
      description: |-
        Retrieve the audit details for activate entities like clients, data sources, requests.
        Available entity types:
        3 - Client
        132 - Data source
        9515 - Request
      summary: Get Activate Entity Audit
  '/V4/SchedulePolicy/{schedulePolicyId}/Schedule/{scheduleId}/Pattern':
    parameters:
      - schema:
          type: string
        name: schedulePolicyId
        in: path
        required: true
      - schema:
          type: string
        name: scheduleId
        in: path
        required: true
    put:
      operationId: modifySchedulePattern
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: API to update pattern for schedule in schedule policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanPattern'
        description: ''
      tags:
        - Schedule
      summary: Modify Schedule Pattern
  '/V4/{globalSearchEntity}/aggregate':
    get:
      tags:
        - GlobalSearch
      parameters:
        - name: globalSearchEntity
          in: path
          description: name of global search entity
          required: true
          schema:
            type: string
            enum:
              - SERVER
              - FILESERVER
              - ARCHIVESERVER
              - EPIC_CLIENT
              - DEVICE
              - USER
              - USERGROUP
              - ROLE
              - SERVERGROUP
              - PLAN
              - COMPANY
              - VMGROUPS
              - VM
              - HYPERVISOR
              - KUBERNETES_APPLICATION
              - KUBERNETES_APPLICATION_GROUP
              - KUBERNETES_CLUSTER
              - DATABASES
              - DBINSTANCE
        - name: fq
          in: query
          description: Filter criteria to filter out global search entities
          schema:
            type: string
        - name: groupBy
          in: query
          description: comma-separated list of entity response attributes based on which aggregate results would be grouped
          schema:
            type: string
        - name: func
          in: query
          required: true
          description: aggregation function to be applied.
          schema:
            type: string
            enum:
              - COUNT
              - MIN
              - MAX
              - AVG
              - SUM
        - name: aggregateOn
          in: query
          description: attribute on which aggregation function would be applied.
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalEntityAggregationValueResp'
              examples:
                '/V4/VM/aggregate?fq=vmStatusInfoList.vmStatus:eq:1&groupBy=vendor,slaStatus&func=COUNT':
                  value:
                    aggregation:
                      - funcValue: '3'
                        groupByVals:
                          - name: vendor
                            value: '4'
                          - name: slaStatus
                            value: '1'
                      - funcValue: '3'
                        groupByVals:
                          - name: vendor
                            value: '1'
                          - name: slaStatus
                            value: '1'
                      - funcValue: '2'
                        groupByVals:
                          - name: vendor
                            value: '1'
                          - name: slaStatus
                            value: '2'
        '404':
          description: requested details not found.
      description: Get aggregate count of entity
      operationId: GetAggregateOnEntity
      summary: Get Aggregate count of Entity
  /V4/Hypervisor:
    post:
      x-terraform-resource: Hypervisor
      x-terraform-oneof-map:
        - schema: CreateHypervisorGroupAmazon
          resource: AWS
        - schema: CreateHypervisorGroupAzure
          resource: Azure
      tags:
        - Hypervisor Operations_v4
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CreateHypervisorGroupVMWare'
                - $ref: '#/components/schemas/CreateHypervisorGroupXen'
                - $ref: '#/components/schemas/CreateHypervisorGroupHyperV'
                - $ref: '#/components/schemas/CreateHypervisorGroupAmazon'
                - $ref: '#/components/schemas/CreateHypervisorGroupAzure'
                - $ref: '#/components/schemas/CreateHypervisorGroupAzureStack'
                - $ref: '#/components/schemas/CreateHypervisorGroupGoogleCloud'
                - $ref: '#/components/schemas/CreateHypervisorGroupRhev'
                - $ref: '#/components/schemas/CreateHypervisorGroupOpenstack'
                - $ref: '#/components/schemas/CreateHypervisorGroupDocker'
                - $ref: '#/components/schemas/CreateHypervisorGroupOracleCloud'
                - $ref: '#/components/schemas/CreateHypervisorGroupAliCloud'
                - $ref: '#/components/schemas/CreateHypervisorGroupOracleVM'
                - $ref: '#/components/schemas/CreateHypervisorGroupRedHatOpenShift'
                - $ref: '#/components/schemas/CreateHypervisorGroupVCloud'
                - $ref: '#/components/schemas/CreateHypervisorGroupNutanix'
                - $ref: '#/components/schemas/CreateHypervisorGroupProxmox'
              discriminator:
                propertyName: hypervisorType
            examples:
              VMware:
                value:
                  name: string
                  hypervisorType: VMW
                  skipCredentialValidation: true
                  accessNodes:
                    - id: 0
                      name: string
                  vcenterHostName: string
                  userName: string
                  password: string
      description: Create Hypervisor for that particular type
      operationId: CreateHypervisor
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: '#/components/schemas/CreateHypervisorResp'
        '400':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      summary: Create a Hypervisor
    get:
      tags:
        - Hypervisor Operations_v4
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHypervisors'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Get the details of all Hypervisor
      operationId: ListHypervisors
      summary: Get all Hypervisor
  '/V4/Hypervisor/{hypervisorId}':
    get:
      x-terraform-resource: Hypervisor
      tags:
        - Hypervisor Operations_v4
      parameters:
        - name: hypervisorId
          x-terraform-id: true
          in: path
          description: Id of the HYpervisor to get
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorPropertiesResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Get the details of  HYpervisor
      operationId: GetHypervisors
      summary: Get Hypervisor Details
    put:
      summary: Update the Hypervisor details
      x-terraform-resource: Hypervisor
      x-terraform-oneof-map:
        - schema: UpdateHypervisorGroupAmazon
          resource: AWS
        - schema: UpdateHypervisorGroupAzure
          resource: Azure
      tags:
        - Hypervisor Operations_v4
      parameters:
        - name: hypervisorId
          x-terraform-id: true
          in: path
          description: Id of the Hypervisor to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/UpdateHypervisorGroupVMWare'
                - $ref: '#/components/schemas/UpdateHypervisorGroupXen'
                - $ref: '#/components/schemas/UpdateHypervisorGroupHyperV'
                - $ref: '#/components/schemas/UpdateHypervisorGroupAmazon'
                - $ref: '#/components/schemas/UpdateHypervisorGroupAzure'
                - $ref: '#/components/schemas/UpdateHypervisorGroupGoogleCloud'
                - $ref: '#/components/schemas/UpdateHypervisorGroupRhev'
                - $ref: '#/components/schemas/UpdateHypervisorGroupOpenstack'
                - $ref: '#/components/schemas/UpdateHypervisorGroupDocker'
                - $ref: '#/components/schemas/UpdateHypervisorGroupOracleCloud'
                - $ref: '#/components/schemas/UpdateHypervisorGroupAliCloud'
                - $ref: '#/components/schemas/UpdateHypervisorGroupOracleVM'
                - $ref: '#/components/schemas/UpdateHypervisorGroupRedHatOpenShift'
            examples:
              VMware:
                value:
                  hypervisorType: VMW
                  accessNodes:
                    - id: 0
                      name: string
                  fbrUnixMediaAgent:
                    id: 0
                    name: string
                  activityControl:
                    enableBackup: true
                    enableRestore: true
                  newName: string
                  vcenterHostName: string
                  userName: string
                  password: string
                description: ''
      operationId: updateHypervisor
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorPropertiesResp'
        '400':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Updates the Hypervisors
    delete:
      x-terraform-resource: Hypervisor
      description: delete an existing vm group
      tags:
        - Hypervisor Operations_v4
      parameters:
        - name: hypervisorId
          x-terraform-id: true
          in: path
          description: Id of the Hypervisor to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteHypervisor
      summary: Delete a Hypervisor
  /V4/VMGroup:
    post:
      x-terraform-resource: VMGroup_V2
      tags:
        - Hypervisor Operations_v4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatevmGroupReq'
      operationId: CreateVMGroup
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVMGroupResp'
        '400':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Create a VM Group
      summary: Create a VM Group
  /V4/VMGroups:
    get:
      tags:
        - VM Group Operations_v4
      parameters:
        - name: hypervisorId
          in: query
          description: Id of the hypervisor to list vm groups
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  vmGroups:
                    type: array
                    items:
                      $ref: '#/components/schemas/VMGroupSummary'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Get the details of all vmGroup
      operationId: GetAllVMGroups
      summary: Get VM Groups
  '/V4/VmGroup/{VmGroupId}':
    put:
      x-terraform-resource: VMGroup_V2
      tags:
        - VM Group Operations_v4
      parameters:
        - name: VmGroupId
          x-terraform-id: true
          in: path
          description: Id of the VMgroup to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatevmGroupReq'
      operationId: UpdateVMGroup
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVMGroupResp'
        '400':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Updates the VM Group
      summary: Modify VM Group Details
    get:
      x-terraform-resource: VMGroup_V2
      parameters:
        - name: VmGroupId
          x-terraform-id: true
          in: path
          description: Id of the VmGroup to get
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVMGroupResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Get the details of  vmGroup
      operationId: GetVMGroup
      summary: Get VM Group Details
      tags:
        - VM Group Operations_v4
    delete:
      x-terraform-resource: VMGroup_V2
      description: delete an existing vm group
      parameters:
        - name: VmGroupId
          x-terraform-id: true
          in: path
          description: Id of the vmgroup to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteVMGroup
      summary: Delete VM Group
      tags:
        - VM Group Operations_v4
  /V4/VirtualMachines:
    get:
      tags:
        - VM Operations_v4
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineListResp'
        '404':
          description: Requested Details not found
      operationId: GetVirtualMachines
      description: Get all virtual machines
      summary: Get Virtual Machines
  '/V4/VirtualMachines/{vmUUID}':
    parameters:
      - schema:
          type: string
        name: vmUUID
        in: path
        required: true
        description: The vmUUID can be obtained from GET /virtualMachines UUID property
    get:
      tags:
        - VM Operations_v4
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  vmDetails:
                    $ref: '#/components/schemas/VirtualMachineDetails'
        '404':
          description: Requested Details not found
      operationId: GetVMDetails
      description: Get details for virtual machine
      parameters:
        - schema:
            type: boolean
          in: query
          name: showInheritedAssociation
      summary: Get Virtual Machine Details
    delete:
      operationId: DeleteVirtualMachine
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Requested Details not found
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Used to delete a virtual machine
      tags:
        - VM Operations_v4
      summary: Delete a Virtual Machine
    put:
      operationId: ModifyVirtualMachine
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
        '404':
          description: Requested Details not found
      description: Modify the properties of an existing virtual machine
      tags:
        - VM Operations_v4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVMProperties'
      summary: Modify Virtual Machine Details
  '/V4/VmGroup/{VmGroupId}/backup':
    post:
      summary: Backup VM Group
      tags:
        - VM Group Operations_v4
      operationId: VMGroupBackup
      description: To Backup the virtual machines in vmgroup
      parameters:
        - name: VmGroupId
          in: path
          description: Id of the VMgroup to backup
          required: true
          schema:
            type: integer
            format: int32
        - name: backupLevel
          in: query
          description: 'Backup level , Default :Incremental'
          schema:
            type: string
            enum:
              - FULL
              - INCREMENTAL
              - DIFFERENTIAL
              - SYNTHETIC_FULL
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskRespforBackup'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
  '/V4/VirtualMachines/{vmUUID}/backup':
    post:
      tags:
        - VM Operations_v4
      operationId: VirtualMachineBackup
      description: To Backup the virtual machines in vmgroup
      parameters:
        - name: vmUUID
          in: path
          description: Id of the Virtual Machine to backup
          required: true
          schema:
            type: string
        - name: backupLevel
          in: query
          description: 'Backup level , Default :Incremental'
          schema:
            type: string
            enum:
              - FULL
              - INCREMENTAL
              - DIFFERENTIAL
              - SYNTHETIC_FULL
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskRespforBackup'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      summary: Backup Virtual Machines in VM Group
  '/V4/Hypervisor/{hypervisorId}/{InventoryEntityName}/Browse':
    get:
      description: Browse the Inventory of your hypervisor
      summary: Browse the Inventory of your hypervisor by hypervisor ID
      tags:
        - Hypervisor Operations_v4
      parameters:
        - name: hypervisorId
          schema:
            type: string
          in: path
          required: true
          description: Hypervisor client ID to browse
        - name: InventoryEntityName
          schema:
            type: string
          in: path
          required: true
          description: Name of the inventory entity that needs to be browsed like ESX Host name in VCenter
        - name: InventoryType
          in: query
          schema:
            $ref: '#/components/schemas/VMContentType'
          description: Type of resource to browse in inventory
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/NetworkInventoryResponseList'
                  - $ref: '#/components/schemas/DatastoreInventoryResponseList'
                  - $ref: '#/components/schemas/ResourcePoolInventoryResponseList'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: BrowseHypervisorInventory
  '/V4/Hypervisor/{hypervisorId}/Reconfigure':
    post:
      description: REconfigures and Renew License for  the hypervisor client
      summary: REconfigures and Renew License for  the hypervisor client
      tags:
        - Hypervisor Operations_v4
      parameters:
        - name: hypervisorId
          schema:
            type: string
          in: path
          required: true
          description: Hypervisor client ID to reconfigure
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: ReConfigureHypervisor
  '/V4/Hypervisor/{HypervisorId}/Credentials':
    parameters:
      - schema:
          type: string
        name: HypervisorId
        in: path
        required: true
    put:
      summary: Update Hypervisor Credentials
      operationId: updateHypervisorCredentials
      tags:
        - Hypervisor Operations_v4
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateHypervisorResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Update Hypervisor's credentials information
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/UpdateHypervisorGroupGoogleCloud'
                - $ref: '#/components/schemas/UpdateHypervisorGroupVMWare'
                - $ref: '#/components/schemas/UpdateHypervisorGroupVCloud'
                - $ref: '#/components/schemas/UpdateHypervisorGroupAmazon'
                - $ref: '#/components/schemas/UpdateHypervisorGroupAzure'
                - $ref: '#/components/schemas/UpdateHypervisorGroupAzureStack'
                - $ref: '#/components/schemas/UpdateHypervisorGroupHyperV'
                - $ref: '#/components/schemas/UpdateHypervisorGroupRhev'
                - $ref: '#/components/schemas/UpdateHypervisorGroupOpenstack'
                - $ref: '#/components/schemas/UpdateHypervisorGroupOracleCloud'
                - $ref: '#/components/schemas/UpdateHypervisorGroupAliCloud'
                - $ref: '#/components/schemas/UpdateHypervisorGroupOracleVM'
                - $ref: '#/components/schemas/UpdateHypervisorGroupNutanix'
            examples:
              Google Cloud:
                value:
                  hypervisorType: GOOGLE_CLOUD
                  userName: string
                  password: string
                  serviceAccountId: string
              VMware:
                value:
                  hypervisorType: VMW
                  vcenterHostName: string
                  userName: string
                  password: string
              vCloud:
                value:
                  hypervisorType: VCLOUD
                  hostName: string
                  userName: string
                  password: string
              Amazon:
                value:
                  hypervisorType: Amazon
                  accessKey: string
                  RoleARN: string
                  secretKey: string
                  Region: string
                  useIamRole: true
                  useServiceAccount: integer
              Azure_V2:
                value:
                  hypervisorType: AZURE_V2
                  tenantId: string
                  serverName: string
                  subscriptionId: string
                  userName: string
                  password: string
              Azure Stack:
                value:
                  hypervisorType: AZURE_STACK
                  tenantId: string
                  subscriptionId: string
                  useManagedIdentity: false
                  ApplicationId: string
                  ApplicationPassword: string
                  resourceManagerURL: string
              Hyper-v:
                value:
                  hypervisorType: Hyper-V
                  hostName: string
                  userName: string
                  password: string
              ALIBABA_CLOUD:
                value:
                  hypervisorType: ALIBABA_CLOUD
                  accessKey: string
                  secretKey: string
              ORACLE_CLOUD_INFRASTRUCTURE:
                value:
                  hypervisorType: ORACLE_CLOUD_INFRASTRUCTURE
                  tenancyOCId: string
                  userOCId: string
                  fingerPrint: string
                  privateKeyFileName: string
                  privateKeyPassword: string
                  regionName: string
              REDHAT:
                value:
                  hypervisorType: REDHAT
                  RhevMManager: string
                  userName: string
                  password: string
              OPENSTACK:
                value:
                  hypervisorType: OPENSTACK
                  userName: string
                  password: string
                  openstackDomain: string
                  keynoteAddress: string
              ORACLE_VM:
                value:
                  hypervisorType: ORACLE_VM
                  userName: string
                  password: string
                  oracleVMManager: string
              NUTANIX:
                value:
                  hypervisorType: NUTANIX
                  userName: string
                  password: string
                  hostName: string
        description: ''
  '/V4/Kubernetes/{clusterId}/Modifier':
    get:
      description: Fetch all the modifiers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/K8sRestoreModifierAPIResp'
      tags:
        - Kubernetes
      parameters:
        - name: clusterId
          in: path
          description: Id of the cluster whose modifier has to be listed.
          required: true
          schema:
            type: integer
            format: int32
      summary: Get Kubernetes Modifiers
    post:
      description: Create a Modifier
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Kubernetes
      parameters:
        - name: clusterId
          in: path
          description: Id of the cluster whose modifier has to be created.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/K8sRestoreModifierAPIReq'
        description: ''
      summary: Create a Kubernetes Modifier
  '/V4/Kubernetes/{clusterId}/Modifier/{ModifierName}':
    get:
      description: Fetch(Read) Modfier details
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/K8sRestoreModifierAPIResp'
      tags:
        - Kubernetes
      parameters:
        - name: clusterId
          in: path
          description: Id of the cluster whose modifier has to be read.
          required: true
          schema:
            type: integer
            format: int32
        - name: ModifierName
          in: path
          description: Name of the modifier to be read.
          required: true
          schema:
            type: string
      summary: Get Kubernetes Modifier
    put:
      description: Edit a Restore modifier
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Kubernetes
      parameters:
        - name: clusterId
          in: path
          description: Id of the cluster whose modifier has to be modified.
          required: true
          schema:
            type: integer
            format: int32
        - name: ModifierName
          in: path
          description: Name of the modifier to be modified.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/K8sRestoreModifierAPIReq'
        description: ''
      summary: Update Kubernetes Modifier
    delete:
      description: Delete a Modifier
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Kubernetes
      parameters:
        - name: clusterId
          in: path
          description: Id of the cluster whose modifier has to be deleted.
          required: true
          schema:
            type: integer
            format: int32
        - name: ModifierName
          in: path
          description: Name of the modifier to be deleted.
          required: true
          schema:
            type: string
      summary: Delete Kubernetes Modifier
  '/V4/Kubernetes/{clusterId}/Modifier/Test':
    post:
      description: Test a Yaml paylod against a restore modfier
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/K8sRestoreModifierAPIResp'
      tags:
        - Kubernetes
      parameters:
        - name: clusterId
          in: path
          description: Id of the cluster whose modifier needs to be tested
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestK8sModifierReq'
        description: ''
      summary: Test Kubernetes modifier
  /V4/AccessNodes:
    get:
      summary: Get Access Nodes
      description: Endpoint to get the list of access nodes
      parameters:
        - schema:
            type: string
          in: query
          name: vendor
          description: Vendor Name to be filtered
        - schema:
            type: integer
          in: query
          name: userId
          description: user id to be filtered
      operationId: getAccessNodes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessNodesList'
      tags:
        - VM Operations_v4
  /V4/VmGroup/Preview:
    post:
      tags:
        - VM Group Operations_v4
      operationId: vmGroupPreview
      description: Preview of the vm to be protected in VMGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmGroupPreviewReq'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vmGroupPreviewResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      parameters:
        - schema:
            type: integer
          in: query
          name: hypervisorId
          description: Hypervisor Id of VMGroup
      summary: Preview VM Group
